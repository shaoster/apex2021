{"version":3,"sources":["Constants.js","Util.js","Action.js","Event.js","Schedule.js","Status.js","Game.js","GameContext.js","component/GameInfo.jsx","component/Keyword.js","component/ActionArea.jsx","component/MusicPlayer.jsx","component/Board.jsx","component/GameEditor.jsx","App.js","reportWebVitals.js","index.js"],"names":["MAX_HAND_SIZE","STATIC_ROOT","process","DrawCard","G","ctx","hand","length","deck","discard","push","pop","BaseAction","displayName","displayNameInShop","image","description","moneyCost","energyCost","producesGrowthMindset","producesMoney","producesAttention","producesEnergy","drawsCards","discardsCards","gainsCards","forgetsOnDiscard","forgetsSelf","forgetsCards","perform","energy","growthMindsetPoints","Math","min","this","money","attention","i","cardsLeftToDiscard","events","setStage","cardsLeftToForget","forEach","c","buy","id","actionList","map","PatchDisplayNames","actions","patchedActions","Object","entries","action","Actions","reduce","rv","x","ActionsPlugin","options","initialActions","name","setup","api","data","getAction","actionId","BaseEvent","song","engrossedTurns","inspiredTurns","indebtedTurns","energizedTurns","addsCardsToShop","addsCardsToDiscardPile","apply","statuses","inspired","max","energized","engrossed","indebted","card","actionShop","Events","Schedule","eventsByDay","turnNumber","eventId","SchedulePlugin","initialSchedule","initialEvents","schedule","getCurrentEvents","getEvents","turn","event","getEvent","addEvent","getRaw","INITIAL_SCHEDULE","0","2","BaseStatus","Statuses","INITIAL_BOARD","sort","currentEvent","backgroundImage","STARTS_TURN_WITH","Apex2021","setupData","moves","performAction","handIndex","INVALID_MOVE","splice","buyAction","shopIndex","endTurn","activePlayers","all","onBegin","console","log","endStage","remainingCard","cardsToDraw","assign","stat","dur","SetupNewTurn","onEnd","endGame","stages","showEvent","chooseOption","optionIndex","dismiss","discardAction","forget","forgetAction","GameContext","React","createContext","GROWTH_MINDSET_COLOR","1","3","4","5","GameInfo","useContext","Table","responsive","bordered","className","Badge","variant","ProgressBar","now","toPrecision","label","animated","CardOrCards","number","Description","props","runEffect","passthrough","useEffect","Tooltip","Keyword","value","tooltipClassName","OverlayTrigger","placement","overlay","descriptionProps","Discard","Draw","Forget","ForgetSelf","Gain","cardId","renderCard","onClick","s","BoostGrowthMindset","YOLO","ActionCardFromStaticActions","ActionCard","useState","isSelected","setIsSelected","areaType","ref","gameStage","runHolder","Card","onMouseEnter","onMouseLeave","bg","border","Header","Container","fluid","Row","Col","xs","Body","Title","Img","src","ListGroup","Item","gainedCardIndex","Text","Footer","ActionList","actionsList","actionCards","slotId","CardColumns","ActionArea","noop","isDiscard","playOrderPos","isForget","actionData","tab","setTab","tabs","keys","Tab","eventKey","title","Tabs","activeKey","onSelect","k","Button","MusicPlayer","songUrl","currentSong","setCurrentSong","player","createRef","current","play","autoPlay","loop","EventModal","playSong","show","onHide","ev","styles","backgroundRepeat","backgroundSize","Modal","size","style","centered","Assets","assets","values","Loading","count","total","percent","startGame","Board","isLoading","setIsLoading","assetsToLoad","useReducer","state","type","Error","loadingState","dispatch","preload","a","Promise","resolve","reject","assetType","img","Image","onload","onerror","audio","Audio","oncanplaythrough","promises","Provider","unCamelCase","input","replace","toUpperCase","EntityEditor","updateActions","updateEvents","entityId","entity","entities","updaters","field","e","maybeOption","newValue","oldValue","target","parseInt","checked","option","sequenceIdToRemove","removedValue","sequenceId","o","updatedEntities","formGroups","filter","Form","Control","onChange","Check","indexOf","relations","selectedValues","isMulti","hideSelectedOptions","displayValue","Group","as","controlId","Label","column","sm","ActionsTab","selectedAction","setSelectedAction","navs","Nav","Link","defaultActiveKey","newActionId","updatedActions","EventsTab","selectedEvent","setSelectedEvent","newEventId","updatedEvents","ScheduleTab","updateSchedule","scheduleUpdater","rows","Array","MAX_TURN_COUNT","row","cols","col","l","onRemove","horizontal","TestChanges","saveFiles","updateSaveFiles","history","useHistory","newSaveFileName","updateNewSaveFileName","newSaveRow","newSaveId","newSave","timestamp","Date","saveRows","saveId","saveFile","toLocaleString","doLoad","navigator","clipboard","writeText","JSON","stringify","doCopy","to","reverse","striped","hover","GameEditor","match","params","json","localStorage","getItem","knownSaves","parse","alert","currentSave","setItem","ConfigurableGameClient","setActions","setEvents","setSchedule","configId","game","plugins","GameClient","Client","board","numPlayers","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3cde9219.chunk.js","sourcesContent":["export const MAX_HAND_SIZE = 8;\nexport const MAX_GROWTH_MINDSET = 5;\nexport const STATIC_ROOT = process.env.PUBLIC_URL;\nexport const MAX_TURN_COUNT = 48;\n","import { MAX_HAND_SIZE } from \"./Constants\";\n\n// A weighted set of outcomes.\n// The key represents the lowest roll of a 20-sided dice that will result in that outcome.\n// Example: {\n//  0: [], // 50%\n//  10: [BadEvent], // 45%\n//  19: [CatastrophicEvent], // 5%\n// }\n//\n// Generate no events by default.\nexport const RollOutcome = function(roll, weightedOutcomes) {\n  const threshold = roll - 1;\n\tconst rollIndices = Object.keys(weightedOutcomes).map(k => parseInt(k));\n  const selectedIndex = rollIndices.find(k => threshold >= k);\n\treturn weightedOutcomes[\"\" + selectedIndex];\n};\n\nexport const DrawCard = function(G, ctx) {\n  if (G.hand.length >= MAX_HAND_SIZE) {\n    return false;\n  }\n  if (G.deck.length <= 0) {\n    while (G.discard.length > 0) {\n      G.deck.push(G.discard.pop());\n    }\n  }\n  // If the deck is still empty, no draw.\n  // In other words, all cards are already in your hand.\n  if (G.deck.length <= 0) {\n    return false;\n  }\n  G.hand.push(G.deck.pop());\n  return true;\n}\n","import { MAX_GROWTH_MINDSET, MAX_HAND_SIZE } from './Constants';\nimport { DrawCard } from './Util';\n\n\nexport const BaseAction = {\n  displayName: null,\n  displayNameInShop: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  moneyCost: 0,\n  energyCost: 0,\n  producesGrowthMindset: 0,\n  producesMoney: 0,\n  producesAttention: 0,\n  producesEnergy: 0,\n  drawsCards: 0,\n  discardsCards: 0,\n  gainsCards: [],\n  forgetsOnDiscard: false,\n  forgetsSelf: false,\n  forgetsCards: 0,\n  // TODO: This is \"inheritance\" without any protection. Bad idea.\n  perform: function(G, ctx) {\n    // First check if we can afford the move.\n    if (G.energy <= 0) {\n      return false;\n    }\n    // Pay for the action.\n    G.energy--;\n    G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + this.producesGrowthMindset);\n    G.money += this.producesMoney;\n    G.attention += this.producesAttention;\n    G.energy += this.producesEnergy;\n    for (let i = 0; i < this.drawsCards; i++) {\n      DrawCard(G, ctx);\n    }\n    if (this.discardsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToDiscard = this.discardsCards;\n      ctx.events.setStage('discard');\n    }\n    if (this.forgetsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToForget = this.forgetsCards;\n      ctx.events.setStage('forget');\n    }\n    this.gainsCards.forEach((c) => G.discard.push(c));\n    return true;\n  },\n  buy: function(G, ctx) {\n    if (G.attention <= 0 || G.money < this.moneyCost || G.energy < this.energyCost) {\n      return false;\n    }\n    // Pay for the action.\n    G.attention--;\n    G.money -= this.moneyCost;\n    G.energy -= this.energyCost;\n    G.discard.push(this.id);\n    return true;\n  },\n};\n\nconst actionList = [\n  {\n    id: \"Card01\",\n    displayName: \"Card1\",\n    description: \"Make sure to play this every turn!\",\n    producesGrowthMindset: 1,\n  },\n  {\n    id: \"Card02\",\n    displayName: \"Card2\",\n    description: \"Getting money lets you buy stuff.\",\n    producesMoney: 1,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card03\",\n    displayName: \"Card3\",\n    description: \"Sometimes you just want to forget everything.\",\n    moneyCost: 2,\n    forgetsSelf: true,\n    forgetsCards: MAX_HAND_SIZE,\n  },\n  {\n    id: \"Card04\",\n    displayName: \"Card4\",\n    description: \"If you play this, you'll have to pick another card in your hand to discard.\",\n    moneyCost: 2,\n    drawsCards: 3,\n    discardsCards: 1,\n  },\n  {\n    id: \"Card05\",\n    displayName: \"Card5\",\n    description: \"Doing too much can make you tired.\",\n    moneyCost: 2,\n    producesGrowthMindset: 1,\n    producesMoney: 1,\n    producesEnergy: 1,\n    drawsCards: 1,\n    gainsCards: [\"fatigue\"],\n  },\n  {\n    id: \"Card06\",\n    displayName: \"Card6\",\n    description: \"More energy means you can play more actions!\",\n    moneyCost: 3,\n    producesEnergy: 2,\n    drawsCards: 1,\n  },\n  {\n    id: \"Card07\",\n    displayName: \"Card7\",\n    description: \"IDK\",\n    moneyCost: 3,\n  },\n  {\n    id: \"Card08\",\n    displayName: \"Card8\",\n    description: \"IDK\",\n    moneyCost: 4,\n  },\n  {\n    id: \"Card09\",\n    displayName: \"Card9\",\n    description: \"More money\",\n    moneyCost: 4,\n    producesMoney: 2,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card10\",\n    displayName: \"Card10\",\n    description: \"That's a lot of energy.\",\n    moneyCost: 4,\n    producesAttention: 1,\n    producesEnergy: 4,\n  },\n  {\n    id: \"Card11\",\n    displayName: \"Card11\",\n    description: \"Maybe there are better options.\",\n    moneyCost: 5,\n    producesEnergy: 1,\n    drawsCards: 2,\n  },\n  {\n    id: \"Card12\",\n    displayName: \"Card12\",\n    description: \"More more money\",\n    moneyCost: 6,\n    producesMoney: 3,\n    producesEnergy: 1,\n  },\n  {\n    id: \"fatigue\",\n    displayName: \"Fatigue\",\n    description: \"Better rest up or I'll just get even more tired later.\",\n    forgetsSelf: true,\n  },\n  {\n    id: \"summerHomework\",\n    displayName: \"Summer Homework\",\n    description: \"So tedious...\",\n    producesGrowthMindset: 1,\n    forgetsSelf: true,\n    forgetsOnDiscard: true,\n  },\n].map(c => ({\n  ...BaseAction,\n  ...c,\n}));\n\nexport const PatchDisplayNames = function(actions) {\n  const patchedActions = {};\n  for (let [id, action] of Object.entries(actions)) {\n    patchedActions[id] = {\n      ...BaseAction,\n      ...action,\n      ...{\n        // Hack to back-populate the displayName.\n        displayNameInShop: action.displayNameInShop ? action.displayNameInShop : action.displayName\n      }\n    };\n  }\n  return patchedActions;\n}\n\nconst Actions = actionList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport const ActionsPlugin = (options) => {\n  const {\n    initialActions,\n  } = options;\n  return {\n    name: \"actions\",\n    setup: () => ({\n      actions: PatchDisplayNames(initialActions),\n    }),\n    api: ({ctx, data}) => ({\n      getAction: (actionId) => ({\n        // Re-hydrate functions for use in Game logic.\n        ...BaseAction,\n        ...data.actions[actionId]\n      })\n    }),\n  };\n};\n\nexport default Actions;\n","export const BaseEvent = {\n  displayName: null,\n  image: null,\n  song: null,\n  description: \"<FLAVOR>\",\n  engrossedTurns: 0,\n  inspiredTurns: 0,\n  indebtedTurns: 0,\n  energizedTurns: 0,\n  addsCardsToShop: [],\n  addsCardsToDiscardPile: [],\n  apply: function(G, ctx) {\n    // TBD: Events can potentially have choices that spawn other events later.\n    if (this.inspiredTurns > 0) {\n      G.statuses.inspired = Math.max((G.statuses.inspired || 0), this.inspiredTurns);\n    }\n    if (this.energizedTurns > 0) {\n      G.statuses.energized = Math.max((G.statuses.energized || 0), this.energizedTurns);\n    }\n    if (this.engrossedTurns > 0) {\n      G.statuses.engrossed = Math.max((G.statuses.engrossed || 0), this.engrossedTurns);\n    }\n    if (this.indebtedTurns > 0) {\n      G.statuses.indebted = Math.max((G.statuses.indebted || 0), this.indebtedTurns);\n    }\n\n    for (let card of this.addsCardsToShop) {\n      G.actionShop.push(card);\n    }\n    for (let card of this.addsCardsToDiscardPile) {\n      G.discard.push(card);\n    }\n  }\n};\n\nconst eventList = [\n  {\n    id: \"SummerStart\",\n    image: \"middle_school_graduation.png\",\n    song: \"af.mp3\",\n    displayName: \"Congratulations\",\n    description: \"After a long year, you've finally graduated from middle school.\",\n    inspiredTurns: 2, // No growth mindset lost.\n    energizedTurns: 2, // One extra energy per turn.\n    addsCardsToDiscardPile: [\n      \"summerHomework\",\n      \"summerHomework\",\n      \"Card01\",\n    ],\n  },\n  {\n    id: \"SchoolStart\",\n    image: \"welcome_back.png\",\n    song: \"da.mp3\",\n    displayName: \"High School Begins\",\n    description: \"And just like that High School begins.\",\n    addsCardsToDiscardPile: [\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card01\",\n      \"Card01\",\n    ],\n    addsCardsToShop: [\n      \"Card02\",\n      \"Card02\",\n      \"Card04\",\n      \"Card05\",\n    ],\n  },\n].map(c => ({\n  ...BaseEvent,\n  ...c,\n}));\n\nconst Events = eventList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Events;\n","import { BaseEvent } from \"./Event\";\n\nexport class Schedule {\n  eventsByDay:object;\n\n  constructor(eventsByDay: object) {\n    this.eventsByDay = eventsByDay || {};\n  }\n\n  addEvent(turnNumber: number, eventId: string):void {\n    if (!(turnNumber in this.eventsByDay)) {\n      this.eventsByDay[turnNumber] = [];\n    }\n    this.eventsByDay[turnNumber].push(eventId);\n  }\n\n  getEvents(turnNumber: number):Array<string> {\n    if (turnNumber in this.eventsByDay) {\n      return this.eventsByDay[turnNumber]\n    }\n    return [];\n  }\n}\n\nexport const SchedulePlugin = (options) => {\n  const {\n    initialSchedule,\n    initialEvents,\n  } = options;\n  return {\n    name: \"schedule\",\n    setup: () => ({\n      schedule: initialSchedule,    \n      events: initialEvents,\n    }),\n    api: ({ctx, data}) => ({\n      getCurrentEvents: function():Array<object> {\n        return new Schedule(data.schedule)\n          .getEvents(ctx.turn)\n          .map((eventId)=>({\n            id:eventId,\n            event: this.getEvent(eventId),\n          }));\n      },\n      addEvent: (turnNumber, eventId) => {\n        new Schedule(data.schedule).addEvent(turnNumber, eventId);\n      },\n      getEvent: (eventId) => ({\n        // Re-hydrate functions for use in the Game engine.\n        ...BaseEvent,\n        ...data.events[eventId]\n      }),\n      getRaw: () => {\n        return data;\n      }\n    }),\n  }\n}\n\nexport const INITIAL_SCHEDULE = {\n    0: [\"SummerStart\"],\n    2: [\"SchoolStart\"],\n};\n\nexport default Schedule;\n","import { MAX_GROWTH_MINDSET } from \"./Constants\";\n\nexport const BaseStatus = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  apply: function(G, ctx) { }\n};\n\nconst statusList = [\n  {\n    id: \"energized\",\n    displayName: \"Energized\",\n    description: \"Gain an extra energy at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.energy += 1;\n    },\n  },\n  {\n    id: \"inspired\",\n    displayName: \"Inspired\",\n    description: \"Nullify the usual loss of growth mindset at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + 1);\n    },\n  },\n  {\n    id: \"engrossed\",\n    displayName: \"Engrossed\",\n    description: \"Start the turn with 0 attention.\",\n    apply: function(G, ctx) {\n      G.attention -= 1;\n    },\n  },\n  {\n    id: \"indebted\",\n    displayName: \"Indebted\",\n    description: \"Start the turn with -1 money.\",\n    apply: function(G, ctx) {\n      G.money -= 1;\n    },\n  },\n].map(c => ({\n  ...BaseStatus,\n  ...c,\n}));\n\nconst Statuses = statusList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Statuses;\n","import { INVALID_MOVE } from 'boardgame.io/core';\n\nimport Statuses from './Status';\n\nimport {\n  DrawCard\n} from './Util';\n\nconst INITIAL_BOARD = {\n  actionShop: [\n    /*\n    ...Array(2).fill(\"Card02\"),\n    ...Array(1).fill(\"Card06\"),\n    ...Array(2).fill(\"Card09\"),\n    ...Array(1).fill(\"Card10\"),\n    ...Array(1).fill(\"Card12\"),\n    ...(Object.keys(Actions).filter((c)=>Actions[c].isBuyable))\n    */\n  ].sort(),\n  deck: [\n    /*\n    // Turn 2. Will require some sacrifice.\n    \"Card02\", \"Card01\",\n    // Turn 1.\n    \"Card02\", \"Card02\", \"Card01\",\n    */\n  ],\n  hand: [],\n  discard: [],\n  growthMindsetPoints: 1,\n  cardsLeftToDiscard: 0,\n  cardsLeftToForget: 0,\n  statuses: {},\n  currentEvent: null,\n  backgroundImage: null,\n};\n\nconst STARTS_TURN_WITH = {\n  money: 0,\n  attention: 1,\n  energy: 1,\n};\n\nfunction SetupNewTurn(G, ctx) {\n  // First process any events.\n  console.log(ctx);\n  const events = ctx.schedule.getCurrentEvents();\n  console.log(events);\n  events.forEach(({id, event}) => {\n    event.apply(G, ctx);\n    G.currentEvent = id;\n  });\n  if (events.length === 0) {\n    // Don't bother with the Events UI if there's no events.\n    ctx.events.endStage();\n  }\n  // Discard the remainder of your hand.\n  while (G.hand.length > 0) {\n    let remainingCard = G.hand.pop();\n    if (!ctx.actions.getAction(remainingCard).forgetsOnDiscard) {\n      // You only get one chance to play certain kinds of cards.\n      G.discard.push(remainingCard);\n    }\n  }\n  const cardsToDraw = Math.min(5, G.growthMindsetPoints);\n  for (let i = 0; i < cardsToDraw; i++) {\n    DrawCard(G, ctx);\n  }\n  Object.assign(G, STARTS_TURN_WITH);\n  G.growthMindsetPoints--;\n\n  // Apply status effects last.\n  for (let [stat, dur] of Object.entries(G.statuses)) {\n    console.log(stat, dur);\n    if (dur > 0) {\n      Statuses[stat].apply(G, ctx);\n      G.statuses[stat]--;\n    } else {\n      delete G.statuses[stat];\n    }\n  }\n}\n\nexport const Apex2021 = {\n  setup: (ctx, setupData) => ({\n    ...INITIAL_BOARD,\n    ...STARTS_TURN_WITH\n  }),\n  moves: {\n    performAction: (G, ctx, handIndex) => {\n      const actionId = G.hand[handIndex];\n      const action = ctx.actions.getAction(actionId);\n      if (!action.perform(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      G.hand.splice(handIndex, 1);\n      if (!action.forgetsSelf) {\n        // YOLO cards don't do this.\n        G.discard.push(actionId);\n      }\n    },\n    buyAction: (G, ctx, shopIndex) => {\n      const actionId = G.actionShop[shopIndex];\n      const action = ctx.actions.getAction(actionId);\n      if (!action.buy(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      G.actionShop.splice(shopIndex, 1);\n    },\n    endTurn: (G, ctx) => {\n      ctx.events.endTurn();\n    },\n  },\n  turn: {\n    activePlayers: { all: \"showEvent\" },\n    onBegin: (G, ctx) => ( SetupNewTurn(G, ctx) ),\n    onEnd: (G, ctx) => {\n      if (G.growthMindsetPoints <= 0) {\n         ctx.events.endGame(\"fixed-mindset\");\n      }\n      //return G;\n    },\n    stages: {\n      showEvent: {\n        moves: {\n          chooseOption: (G, ctx, optionIndex) => {\n            // TBD: Events don't have any choices yet.\n          },\n          dismiss: (G, ctx) => {\n            G.backgroundImage = ctx.schedule.getEvent(G.currentEvent).image;\n            G.currentEvent = null;\n            ctx.events.endStage();\n          },\n        },\n      },\n      discard: {\n        moves: {\n          discardAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToDiscard);\n            const actionId = G.hand[handIndex];\n            G.hand.splice(handIndex, 1);\n            G.discard.push(actionId);\n            if (G.hand.length === 0) {\n              G.cardsLeftToDiscard = 0;\n            } else {\n              G.cardsLeftToDiscard--;\n            }\n            if (G.cardsLeftToDiscard <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      },\n      forget: {\n        moves: {\n          forgetAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToForget);\n            G.hand.splice(handIndex, 1);\n            if (G.hand.length === 0) {\n              G.cardsLeftToForget = 0;\n            } else {\n              G.cardsLeftToForget--;\n            }\n            if (G.cardsLeftToForget <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      }\n    }\n  },\n};\n","import React from 'react';\n\nconst GameContext = React.createContext({});\n\nexport default GameContext;\n","import React, {\n  useContext,\n} from \"react\";\n\nimport {\n  Badge,\n  ProgressBar,\n  Table,\n} from \"react-bootstrap\";\n\nimport { MAX_GROWTH_MINDSET } from \"../Constants\";\nimport GameContext from \"../GameContext\";\n\nconst GROWTH_MINDSET_COLOR = {\n  0: \"danger\",\n  1: \"danger\",\n  2: \"danger\",\n  3: \"warning\",\n  4: \"success\",\n  5: \"info\",\n};\n\n\nfunction GameInfo() {\n  const {\n    G,\n    ctx,\n  } = useContext(GameContext);\n  const {\n    growthMindsetPoints,\n    money,\n    attention,\n    energy\n  } = G;\n  return (\n    <Table responsive bordered id=\"player-info\">\n      <thead>\n        <tr className=\"info-label-row\">\n          <th>Day #</th>\n          <th>Growth Mindset</th>\n          <th>Money</th>\n          <th>Attention</th>\n          <th>Energy</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"info-data-row\">\n          <td><Badge variant=\"dark\">{ctx.turn}</Badge></td>\n          <td>\n            <ProgressBar\n              now={(growthMindsetPoints * 100.0 /MAX_GROWTH_MINDSET).toPrecision(3)}\n              label={growthMindsetPoints}\n              variant={GROWTH_MINDSET_COLOR[growthMindsetPoints]}\n              animated={growthMindsetPoints === MAX_GROWTH_MINDSET}\n            />\n          </td>\n          <td><Badge variant=\"warning\">{money}</Badge></td>\n          <td><Badge variant=\"primary\">{attention}</Badge></td>\n          <td><Badge variant=\"success\">{energy}</Badge></td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GameInfo;\n","import React, {\n  useEffect,\n  useContext,\n} from \"react\";\n\nimport {\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport GameContext from \"../GameContext\";\n\nfunction CardOrCards(number) {\n  return \"\" + number + \" \" + (number > 1 ? \"cards\" : \"card\");\n}\n\nexport const Description = (props) => {\n  const { description, runEffect, className, passthrough } = props;\n  useEffect(\n    () => {\n      if (runEffect) {\n        runEffect();\n      }\n    }\n  );\n  return (\n    <Tooltip id=\"keyword-description\" className={className} {...passthrough}>\n      {description}\n    </Tooltip>\n  );\n};\n\nexport const Keyword = (props) => {\n  const { value, description, tooltipClassName, runEffect } = props;\n  const renderDescription = (descriptionProps) => (\n    <Description\n      description={description}\n      className={tooltipClassName}\n      runEffect={runEffect}\n      passthrough={descriptionProps}\n    />\n  );\n  return (\n    <OverlayTrigger\n      placement=\"right\"\n      overlay={renderDescription}\n    >\n      <span className=\"card-keyword\">{value}</span>\n    </OverlayTrigger>\n  );\n};\n\nexport const Discard = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Discard \" + number}\n      description={\"Place cards from your hand into your discard pile until you have placed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const Draw = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Draw \" + number}\n      description={\"Place \" + CardOrCards(number) + \" from your deck into your hand. If your deck is empty, your discard pile will automatically be shuffled into your deck.\"}\n    />\n  );\n};\n\nexport const Forget = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Forget \" + number}\n      description={\"Permanently remove cards from your hand until you have removed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const ForgetSelf = () => {\n  return (\n    <Keyword\n      value={\"Forget Self\"}\n      description={\"Permanently remove this card from your hand upon being played.\"}\n    />\n  );\n};\n\nexport const Gain = (props) => {\n  const { cardId, renderCard, tooltipClassName, runEffect } = props;\n  const {\n    actions\n  } = useContext(GameContext);\n  const card = renderCard({\n    cardId: cardId,\n    onClick: s=>{},\n    ...actions[cardId],\n  });\n  return (\n    <Keyword\n      value={\"Gain \" + actions[cardId].displayName}\n      description={card}\n      tooltipClassName={tooltipClassName}\n      runEffect={runEffect}\n    />\n  );\n};\n\nexport const BoostGrowthMindset = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"+\" + number + \" Growth Mindset\"}\n      description={\"Growth Mindset represents the number of cards you can draw at the beginning of the next turn. You lose one point per turn, and Growth Mindset is capped at 5.\"}\n    />\n  );\n};\n\nexport const YOLO = (props) => {\n  return (\n    <Keyword\n      value={\"#YOLO\"}\n      description={\"If this card remains in your hand at the end of the turn, it will be permanently removed from your deck.\"}\n    />\n  );\n};\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Badge,\n  Button,\n  Container,\n  Col,\n  Card,\n  CardColumns,\n  ListGroup,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\n\nimport { run as runHolder } from 'holderjs/holder';\nimport GameContext from \"../GameContext\";\nimport {\n  BoostGrowthMindset,\n  Discard,\n  Draw,\n  Forget,\n  ForgetSelf,\n  Gain,\n  YOLO,\n} from \"./Keyword\";\n\nfunction ActionCardFromStaticActions(props) {\n  const { cardId } = props;\n  const {\n    actions,\n  } = useContext(GameContext);\n  console.log(actions);\n  return <ActionCard {...props} {...actions[cardId]} />\n}\n\nexport function ActionCard(props) {\n  const [isSelected, setIsSelected] = useState(false);\n  const {\n    areaType,\n    onClick,\n    ref,\n    gameStage,\n    displayName,\n    displayNameInShop,\n    image,\n    description,\n    moneyCost,\n    energyCost,\n    producesGrowthMindset,\n    producesMoney,\n    producesAttention,\n    producesEnergy,\n    drawsCards,\n    discardsCards,\n    gainsCards,\n    forgetsOnDiscard,\n    forgetsSelf,\n    forgetsCards,\n  } = props;\n  // Hack to render sized placeholder before we have assets.\n  useEffect(() => {\n    runHolder(\"card-image\");\n  });\n\n  return (\n    <Card\n      ref = {ref}\n      onClick={onClick}\n      onMouseEnter={() => setIsSelected(true)}\n      onMouseLeave={() => setIsSelected(false)}\n      bg={gameStage === \"discard\" || gameStage === \"forget\" ? \"danger\" : null}\n      border={isSelected ? \"warning\" : \"secondary\"}\n      className=\"action-card\"\n    >\n      <Card.Header>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Makes:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {producesMoney}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"primary\">\n                {producesAttention}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {producesEnergy}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{areaType === \"Shop\" && displayNameInShop ? displayNameInShop : displayName}</Card.Title>\n        <Card.Img src={image != null ? image : \"holder.js/256x128\"} className=\"card-image\"/>\n        <ListGroup className=\"extra-rules\">\n          { \n            (producesGrowthMindset > 0) && (\n              <ListGroup.Item key=\"growth-mindset\"><BoostGrowthMindset number={producesGrowthMindset}/></ListGroup.Item>\n            )\n          }\n          { \n            (drawsCards > 0) && (\n              <ListGroup.Item key=\"draws-cards\"><Draw number={drawsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (discardsCards > 0) && (\n              <ListGroup.Item key=\"discards-cards\"><Discard number={discardsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsOnDiscard) && (\n              <ListGroup.Item key=\"forgets-on-discard\"><YOLO/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsSelf) && (\n              <ListGroup.Item key=\"forgets-self\"><ForgetSelf/></ListGroup.Item>\n            )\n          }\n          { \n            (forgetsCards > 0) && (\n              <ListGroup.Item key=\"forgets-cards\"><Forget number={forgetsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            gainsCards.map((cardId, gainedCardIndex) =>\n              <ListGroup.Item key={\"gains-\" + gainedCardIndex}>\n                <Gain\n                  cardId={cardId}\n                  renderCard={ActionCard}\n                  tooltipClassName=\"card-preview\"\n                  runEffect={()=>runHolder(\"card-image\")}\n                />\n              </ListGroup.Item>\n            )\n          }\n        </ListGroup>\n        <Card.Text className=\"flavor\">\n          {description}\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Costs:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {moneyCost}\n              </Badge>\n            </Col>\n            <Col xs={1}/>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {energyCost}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction ActionList(props) {\n  const { actionsList, className, onClick, gameStage } = props;\n  const actionCards = actionsList.map((actionId, slotId) => (\n    <ActionCardFromStaticActions\n      areaType={className}\n      cardId={actionId}\n      key={slotId}\n      onClick={() => onClick(slotId)}\n      gameStage={gameStage} />\n  ));\n  return (\n    <CardColumns className={\"action-list-\" + className}>\n      {actionCards.length > 0 ? actionCards :\n        <Badge><h1>No Actions Available</h1></Badge>}\n    </CardColumns>\n  );\n}\n\nfunction ActionArea() {\n  const {\n    G,\n    ctx,\n    moves,\n  } = useContext(GameContext);\n  const {\n    hand,\n    actionShop,\n    deck,\n    discard,\n  } = G;\n  const noop = (x) => {};\n  const isDiscard = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"discard\";\n  const isForget = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"forget\";\n  const gameStage = isDiscard ? \"discard\" : isForget ? \"forget\" : null;\n  const actionData = {\n    \"Hand\": {\n      actions: hand,\n      onClick: isDiscard ? moves.discardAction: isForget ? moves.forgetAction : moves.performAction\n    },\n    \"Shop\": {\n      actions: actionShop,\n      onClick: isDiscard ? noop : moves.buyAction\n    },\n    \"Deck\": {\n      actions: [...deck].sort(), // Hide the order of the cards.\n      onClick: noop\n    },\n    \"Discard Pile\": {\n      actions: discard,\n      onClick: noop\n    },\n  };\n  const [tab, setTab] = useState(\"Hand\");\n  const tabs = Object.keys(actionData).map((areaType) => (\n    <Tab eventKey={areaType} title={areaType} key={areaType}>\n      <ActionList\n        actionsList={actionData[areaType].actions}\n        className={areaType}\n        onClick={actionData[areaType].onClick}\n        gameStage={gameStage}\n      />\n    </Tab>\n  ));\n  return (\n    <div id=\"game-tabs\">\n      <Tabs id=\"actions\" activeKey={tab} onSelect={(k)=>setTab(k)}>\n        {tabs}\n        <Tab eventKey=\"next-turn\" title=\"Next Turn\" key=\"next-turn\">\n          <Button\n            onClick={() => {\n              moves.endTurn();\n              setTab(\"Hand\");\n            }}\n            className=\"confirm-next-turn\"\n          >\n            Confirm End Turn\n          </Button>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default ActionArea;\n","import React, {\n  createRef,\n  useEffect,\n  useState,\n} from \"react\";\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nconst MusicPlayer = (props) => {\n  const {\n    songUrl\n  } = props;\n  const [currentSong, setCurrentSong] = useState(null);\n  const player = createRef();\n  useEffect(() => {\n    if (songUrl === currentSong) {\n      return;\n    }\n    console.log(`Playing song: ${songUrl}`);\n    player.current.src = `${STATIC_ROOT}/${songUrl}`;\n    player.current.play();\n    setCurrentSong(songUrl);\n  }, [player, songUrl]);\n  return (\n    <audio ref={player} autoPlay loop/>\n  );\n};\n\nexport default MusicPlayer;\n","import React, {\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\n\nimport {\n  Button,\n  Container,\n  Col,\n  Modal,\n  Row,\n  ProgressBar,\n} from \"react-bootstrap\";\n\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nimport GameContext from \"../GameContext\";\nimport GameInfo from \"./GameInfo\";\nimport ActionArea from \"./ActionArea\";\nimport MusicPlayer from \"./MusicPlayer\";\n\nfunction EventModal(props) {\n  const {\n    G,\n    moves,\n    events,\n    playSong,\n  } = useContext(GameContext);\n  const show = G.currentEvent in events;\n  const onHide = () => moves.dismiss();\n  const ev = events[G.currentEvent];\n  useEffect(() => {\n    if (ev && ev.song && show) {\n      playSong(ev.song);\n    }\n  }, [ev, playSong, show]);\n  if (!show) {\n    return <></>;\n  }\n  const {\n    displayName,\n    description,\n    image,\n  } = ev;\n  const styles = {\n    backgroundImage: image == null ? null : `url(${STATIC_ROOT}/${image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n  };\n  return (\n    <Modal\n      size = \"lg\"\n      show = {show}\n      onHide = {onHide}\n      style = {styles} \n      className = \"event-modal\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title>\n          {displayName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {description}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>Continue</Button>\n      </Modal.Footer>\n    </Modal>\n  ); \n}\n\nconst Assets = function(actions, events) {\n  const assets = {}; \n  for (let action of Object.values(assets)) {\n    if (action.image !== null) {\n      assets[action.image] = \"img\";\n    }\n  }\n  for (let ev of Object.values(events)) {\n    if (ev.image !== null) {\n      assets[ev.image] = \"img\";\n    }\n    if (ev.song !== null) {\n      assets[ev.song] = \"audio\";\n    }\n  }\n\n  return assets;\n}\n\nconst Loading = function(props) {\n  const {\n    count,\n    total,\n    percent,\n    startGame\n  } = props;\n  return (\n    <div id=\"loading\">\n      <ProgressBar now={percent}/>\n      <hr/>\n      <p>\n        {\n          count < total ? (\n            `Loaded ${count}/${total} assets...`\n          ) : (\n            <Button onClick={startGame}>New Game</Button>\n          )\n        }\n      </p>\n    </div>\n  )\n};\n\nconst Board = function(props) {\n  const {\n    G,\n    ctx,\n    moves,\n  } = props;\n\n  // Pull these in from plugins instead.\n  const {\n    actions,\n    events\n  } = useContext(GameContext);\n\n  // Pattern ripped from\n  // https://jack72828383883.medium.com/ff1642708240\n  const [isLoading, setIsLoading] = useState(true);\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"increment\":\n        return {\n          count: state.count + 1,\n          total: state.total,\n          percent: (100.0 * (state.count + 1) / state.total)\n        };\n      default:\n        throw new Error(`Unsupported action type ${action.type}`);\n    }\n  };\n  const assetsToLoad = Assets(actions, events);\n  const [loadingState, dispatch] = useReducer(reducer, {\n    count: 0,\n    total: Object.keys(assetsToLoad).length,\n    percent: 0,\n  });\n  const [songUrl, playSong] = useState(\"af.mp3\");\n  const preload = async (assets: object) => {\n    const promises = await Object.keys(assets).map((src) => {\n      return new Promise(function (resolve, reject) {\n        const assetType = assets[src];\n        switch (assetType) {\n          case \"img\":\n            const img = new Image();\n            img.src = `${STATIC_ROOT}/${src}`;\n            img.onload = () => {\n              // Incrementally update progress bar.\n              dispatch({type: \"increment\"});\n              console.log(`Loaded ${img.src}`);\n              resolve(img);\n            };\n            img.onerror = () => {\n              reject(`Could not load ${img.src}`);\n            };\n            break;\n          case \"audio\":\n            const audio = new Audio();\n            audio.src = `${STATIC_ROOT}/${src}`;\n            audio.oncanplaythrough = () => {\n              // Incrementally update progress bar.\n              dispatch({type: \"increment\"});\n              console.log(`Loaded ${audio.src}`);\n              resolve(audio);\n            };\n            audio.onerror = () => {\n              reject(`Could not load ${audio.src}`);\n            };\n            break;\n          default:\n            throw new Error(`Unrecognized asset type: ${assetType}`);\n        }\n      });\n    });\n    await Promise.all(promises);\n  };\n  useEffect(() => {\n    preload(Assets(actions, events));\n  }, [actions, events]);\n  const {\n    backgroundImage\n  } = G;\n  const styles = {\n    backgroundImage: backgroundImage == null ? null : `url(${STATIC_ROOT}/${backgroundImage})`,\n    backgroundSize: \"cover\",\n  };\n  if (isLoading) {\n    // TODO: In theory we should introduce an intermediate \"loaded-but-not-started\" state.\n    return <Loading startGame={() => setIsLoading(false)} {...loadingState} />;\n  }\n  // Game has started.\n  return (\n    <GameContext.Provider value={{\n      G: G,\n      ctx: ctx,\n      moves: moves,\n      actions: actions,\n      events: events,\n      songUrl: songUrl,\n      playSong: playSong,\n    }}>\n      <div style={styles} id=\"bg-container\"/>\n      <div id=\"game-wrapper\">\n        <Container fluid id=\"game-container\">\n          <Row>\n            <Col>\n              <GameInfo/> \n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <ActionArea/>\n            </Col>\n          </Row>\n        </Container>\n        <EventModal/>\n      </div>\n      <MusicPlayer songUrl={songUrl}/>\n    </GameContext.Provider>\n  );\n}\n\nexport default Board;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Link,\n  useHistory,\n} from \"react-router-dom\";\n\nimport {\n  Button,\n  Col,\n  Form,\n  ListGroup,\n  Nav,\n  OverlayTrigger,\n  Row,\n  Tab,\n  Table,\n  Tabs,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport Select from \"react-select\";\n\nimport {\n  Multiselect,\n} from \"multiselect-react-dropdown\";\n\nimport GameContext from \"../GameContext\";\nimport { MAX_TURN_COUNT } from \"../Constants\";\nimport { ActionCard } from \"./ActionArea\";\nimport Actions, {\n  BaseAction,\n  PatchDisplayNames,\n} from \"../Action\";\nimport Events, { BaseEvent } from \"../Event\";\nimport { INITIAL_SCHEDULE } from \"../Schedule\";\n\n// Cute hack from https://gist.github.com/mattwiebe/1005915\nfunction unCamelCase(input){return input.replace(/([a-z])([A-Z])/g,'$1 $2').replace(/\\b([A-Z]+)([A-Z])([a-z])/,'$1 $2$3').replace(/^./,function(s){return s.toUpperCase();})}\n\nfunction EntityEditor(props) {\n  const { actionId, eventId } = props;\n  const {\n    actions, updateActions,\n    events, updateEvents,\n  } = useContext(GameContext);\n  const entityId = actionId ? actionId : eventId;\n  const entity = actionId ? actions[actionId] : events[eventId];\n  const entities = actionId ? actions : events;\n  const updaters = {};\n\n  for (let field of Object.keys(entity)) {\n    updaters[field] = (e, maybeOption) => {\n      const oldValue = entities[entityId][field];\n      let newValue;\n      switch (typeof(oldValue)) {\n        case \"string\":\n          newValue = e.target.value;\n          break;\n        case \"number\":\n          newValue = parseInt(e.target.value);\n          break;\n        case \"boolean\":\n          newValue = e.target.checked;\n          break;\n        case \"object\":\n          switch(maybeOption.action) {\n            case \"deselect-option\":\n              newValue = [\n                ...oldValue,\n                maybeOption.option.value,\n              ];\n              break;\n            case \"remove-value\":\n              let sequenceIdToRemove = maybeOption.removedValue.sequenceId;\n              newValue = [...oldValue];\n              newValue.splice(sequenceIdToRemove, 1);\n              break;\n            default:\n              newValue = e.map(o=>o.value);\n              break;\n          }\n          break;\n        default:\n          throw new Error(`Don't know how to serialize ${field} for value ${e.target.value}`);\n      }\n      const updatedEntities = {\n        ...entities,\n        ...{\n          [entityId]: {\n            ...entities[entityId],\n            [field]: newValue\n          }\n        }\n      };\n      const updateEntities = actionId ? updateActions : updateEvents;\n      updateEntities(updatedEntities);\n    }\n  }\n  const formGroups = Object.entries(entity)\n    .filter(([field, value]) => (\n      value !== null &&\n      typeof(value) !== \"function\" &&\n      // TODO: Support image uploading.\n      field !== \"image\" &&\n      // TODO: Support re-identifying.\n      field !== \"id\"\n    ))\n    .map(([field, value]) => {\n      let input;\n      // The bogus key is a cute hack to force re-render of the defaultValue.\n      switch (typeof(value)) {\n        case \"string\":\n          input = (\n            <Form.Control\n              type=\"text\"\n              value={entity[field]}\n              onChange={updaters[field]}\n            />\n          );\n          break;\n        case \"number\":\n          input = (\n            <OverlayTrigger\n              placement=\"left\"\n              overlay={<Tooltip>{entity[field]}</Tooltip>}\n            >\n              <Form.Control\n                type=\"range\"\n                value={entity[field]}\n                max={10}\n                onChange={updaters[field]}\n              />\n            </OverlayTrigger>\n          );\n          break;\n        case \"boolean\":\n          input = (\n            <Form.Check\n              type=\"checkbox\"\n              checked={entity[field]}\n              onChange={updaters[field]}\n            />\n          );\n          break;\n        case \"object\":\n          // TODO: Bogus check. Actually add a type schema.\n          if (field.indexOf(\"Cards\") >= 0) {\n            let relations = actions;\n            const options = Object.entries(relations).map(([id, value])=>({\n              label: value.displayName,\n              value: id\n            }));\n            const selectedValues = entity[field].map((id, sequenceId)=>({\n              label: relations[id].displayName,\n              value: id,\n              // This is just so we know which item was removed from the widget.\n              sequenceId: sequenceId\n            }));\n            input = (\n              <Select\n                id={`${entityId}.${field}`}\n                isMulti\n                hideSelectedOptions={false}\n                value={selectedValues}\n                onChange={updaters[field]}\n                options={options}\n                displayValue=\"name\"\n              />\n            );\n          } else {\n            throw new Error(`Unrecognized value ${value} for ${field}.`);\n          }\n          break;\n        default:\n          throw new Error(`Unrecognized value type ${value} for ${field}.`);\n      }\n      return (\n        <Form.Group as={Row} key={`edit-${field}`} controlId={`${entityId}.${field}`}>\n          <Form.Label column sm={4}>{unCamelCase(field)}</Form.Label>\n          <Col sm={8}>\n            {input}\n          </Col>\n        </Form.Group>\n      );\n    });\n  return <>\n      {formGroups}\n  </>\n}\n\nfunction ActionsTab(props) {\n  const {\n    actions,\n    updateActions,\n  } = useContext(GameContext);\n  const [ selectedAction, setSelectedAction ] = useState(Object.keys(actions)[0]);\n  const navs = Object.entries(actions).map(([id, action]) => (\n    <Nav.Item key={id}>\n      <Nav.Link eventKey={id}>{action.id}</Nav.Link>\n    </Nav.Item>\n  ));\n  const newAction = () => {\n    const newActionId = \"Card\" + (Object.keys(actions).length + 1);\n    const updatedActions = {\n      ...actions,\n      [newActionId] : {\n        ...BaseAction,\n        id: newActionId,\n        displayName: newActionId,\n        displayNameInShop: newActionId,\n      }\n    };\n    updateActions(updatedActions);\n  };\n  return (\n    <Row>\n      <Col id=\"action-nav\" sm={2}>\n        <Nav\n          variant=\"pills\"\n          className=\"flex-column\"\n          defaultActiveKey={selectedAction}\n          onSelect={setSelectedAction}\n        >\n          {navs}\n          <Button onClick={newAction} variant=\"light\">+</Button>\n        </Nav>\n      </Col>\n      <Col sm={8}>\n        <div id=\"card-editor-card-container\">\n          <ActionCard cardId={selectedAction} onClick={()=>{}} {...actions[selectedAction]}/> \n        </div>\n        <EntityEditor actionId={selectedAction}/>\n      </Col>\n    </Row>\n  );\n}\n\nfunction EventsTab(props) {\n  const {\n    events,\n    updateEvents,\n  } = useContext(GameContext);\n  const [ selectedEvent, setSelectedEvent ] = useState(Object.keys(events)[0]);\n  const navs = Object.entries(events).map(([id, event]) => (\n    <Nav.Item key={id}>\n      <Nav.Link eventKey={id}>{event.id}</Nav.Link>\n    </Nav.Item>\n  ));\n  const newEvent = () => {\n    const newEventId = \"Event\" + (Object.keys(events).length + 1);\n    const updatedEvents = {\n      ...events,\n      [newEventId] : {\n        ...BaseEvent,\n        id: newEventId,\n        displayName: newEventId,\n      }\n    };\n    updateEvents(updatedEvents);\n  };\n  return (\n    <Row>\n      <Col id=\"action-nav\" sm={2}>\n        <Nav\n          variant=\"pills\"\n          className=\"flex-column\"\n          onSelect={setSelectedEvent}\n          defaultActiveKey={selectedEvent}\n        >\n          {navs}\n          <Button onClick={newEvent} variant=\"light\">+</Button>\n        </Nav>\n      </Col>\n      <Col sm={8}>\n        <EntityEditor eventId={selectedEvent}/>\n      </Col>\n    </Row>\n  );\n}\n\nfunction ScheduleTab(props) {\n  const {\n    schedule,\n    updateSchedule,\n    events,\n  } = useContext(GameContext);\n  const scheduleUpdater = (turn, updatedEvents) => {\n    updateSchedule({\n      ...schedule,\n      [turn]: updatedEvents.map((e) => e.id),\n    });\n  };\n  const options = Object.entries(events).map(([eventId, event]) => ({\n    id: eventId,\n    name: event.displayName,\n  }));\n  const MAX_TURNS_PER_ROW = 6;\n  // Assume divisibility by 6.\n  const MAX_TURNS_PER_COLUMN = MAX_TURN_COUNT / MAX_TURNS_PER_ROW;\n  const rows = [...Array(MAX_TURNS_PER_COLUMN).keys()].map((row) => {\n    const cols = [...Array(MAX_TURNS_PER_ROW).keys()].map((col) => {\n      const turn = row * MAX_TURNS_PER_ROW + col;\n      const selectedValues = (schedule[turn] || []).map((eventId) => ({\n        id: eventId,\n        name: events[eventId].displayName,\n      }));\n      return (\n        <ListGroup.Item sm={4} key={`${row}.${col}`}>\n          <p>Turn {turn + 1}:</p>\n          <Multiselect\n            id={`${turn}.events`}\n            selectedValues={selectedValues}\n            onSelect={(l)=>scheduleUpdater(turn, l)}\n            onRemove={(l)=>scheduleUpdater(turn, l)}\n            options={options}\n            displayValue=\"name\"\n          />\n        </ListGroup.Item>\n      );\n    });\n    return (\n      <ListGroup horizontal={\"lg\"} key={row}>\n        {cols}\n      </ListGroup>\n    );\n  });\n  return <div id=\"schedule-editor\">\n    {rows}\n  </div>;\n}\n\nfunction TestChanges(props) {\n  const {\n    saveFiles,\n    updateSaveFiles,\n  } = props;\n  const {\n    actions,\n    events,\n    schedule,\n  } = useContext(GameContext);\n  const history = useHistory();\n  const [newSaveFileName, updateNewSaveFileName] = useState(\"Some Name\");\n  const newSave = () => {\n    const newSaveId = Object.keys(saveFiles).length;\n    const newSave = {\n        ...saveFiles,\n        [newSaveId]: {\n          name: newSaveFileName,\n          actions: actions,\n          events: events,\n          schedule: schedule,\n          timestamp: Date.now(),\n        }\n    };\n    updateSaveFiles(newSave);\n  };\n  const doLoad = (saveId) => {\n    history.push(`/editor/${saveId}`);\n  };\n  const doCopy = (saveId) => {\n    navigator.clipboard.writeText(JSON.stringify(saveFiles[saveId]));\n  };\n  const newSaveRow = (\n    <tr id=\"unsaved-row\" key=\"unsaved-row\">\n      <td>{Object.keys(saveFiles).length}</td>\n      <td>\n        <Form.Control\n          type=\"text\"\n          value={newSaveFileName}\n          onChange={(ev) => updateNewSaveFileName(ev.target.value)}\n        />\n      </td>\n      <td>Now</td>\n      <td><Button onClick={newSave}>Save</Button></td>\n      <td>Save to export</td>\n      <td>Save to launch</td>\n    </tr>\n  );\n  const saveRows = Object.entries(saveFiles).map(([saveId, saveFile]) => (\n    <tr key={`save-${saveId}`}>\n      <td>{saveId}</td>\n      <td>{saveFile.name}</td>\n      <td>{new Date(saveFile.timestamp).toLocaleString()}</td>\n      <td><Button onClick={()=>doLoad(saveId)}>Load</Button></td>\n      <td><Button onClick={()=>doCopy(saveId)}>Copy to Clipboard</Button></td>\n      <td><Link to={`/load-config/${saveId}`} target=\"_blank\">Launch Game</Link></td>\n    </tr>\n  )).reverse();\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Name</th>\n          <th>Date</th> \n          <th>Save/Load</th>\n          <th>Export</th> \n          <th>Launch</th> \n        </tr>\n      </thead>\n      <tbody>\n        {newSaveRow}\n        {saveRows}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction GameEditor(props) {\n  const { saveId } = props.match.params || 0;\n  const [ actions, updateActions ] = useState({...Actions});\n  const [ events, updateEvents ] = useState({...Events});\n  const [ schedule, updateSchedule ] = useState({...INITIAL_SCHEDULE});\n  const [ saveFiles, updateSaveFiles ] = useState({});\n  useEffect(() => {\n    const json = localStorage.getItem(\"saveFiles\");\n    const knownSaves = JSON.parse(json);\n    if (knownSaves) {\n      updateSaveFiles(knownSaves);\n    }\n    // TODO: Rewire this.\n    // To avoid having to rewire all the default text-fields, just assume a page refresh.\n    if (knownSaves[saveId]) {\n      alert(\"Loaded save file: \" + saveId);\n      const currentSave = knownSaves[saveId]\n      updateActions(PatchDisplayNames(currentSave.actions));\n      updateEvents(currentSave.events);\n      updateSchedule(currentSave.schedule);\n    }\n  }, [saveId]);\n  useEffect(() => {\n    if (saveFiles) {\n      const json = JSON.stringify(saveFiles);\n      localStorage.setItem(\"saveFiles\", json);\n    }\n  }, [saveFiles]);\n  return (\n    <GameContext.Provider value={{\n      actions: actions, updateActions: updateActions,\n      events: events, updateEvents: updateEvents,\n      schedule: schedule, updateSchedule: updateSchedule,\n      saveId: saveId,\n    }}>\n      <Tabs id=\"editor-root\" defaultActiveKey=\"actions\">\n        <Tab eventKey=\"actions\" title=\"Actions\" key=\"edit-actions\">\n          <ActionsTab/>\n        </Tab>\n        <Tab eventKey=\"events\" title=\"Events\" key=\"edit-events\">\n          <EventsTab/>\n        </Tab>\n        <Tab eventKey=\"schedule\" title=\"Schedule\" key=\"edit-schedule\">\n          <ScheduleTab/>\n        </Tab>\n        <Tab eventKey=\"test\" title=\"Test Changes\" key=\"test\">\n          <TestChanges saveFiles={saveFiles} updateSaveFiles={updateSaveFiles} />\n        </Tab>\n      </Tabs>\n    </GameContext.Provider>\n  );\n}\n\nexport default GameEditor;\n","import React, {\n  useEffect,\n  useState,\n} from \"react\";\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Client } from 'boardgame.io/react';\n\nimport Actions, {\n  ActionsPlugin,\n} from \"./Action\";\nimport Events, {\n} from \"./Event\";\nimport {\n  SchedulePlugin,\n  INITIAL_SCHEDULE,\n} from \"./Schedule\";\nimport { Apex2021 } from './Game';\nimport Board from './component/Board';\nimport GameEditor from './component/GameEditor';\nimport GameContext from \"./GameContext\";\n\nconst ConfigurableGameClient = function(props) {\n  const {\n    match,\n  } = props;\n  const [actions, setActions] = useState(Actions);\n  const [events, setEvents] = useState(Events);\n  const [schedule, setSchedule] = useState(INITIAL_SCHEDULE);\n  useEffect(() => {\n    const json = localStorage.getItem(\"saveFiles\");\n    const knownSaves = JSON.parse(json);\n    if (knownSaves && match.params.configId) {\n      const saveFile = knownSaves[match.params.configId];\n      setActions(saveFile.actions);\n      setEvents(saveFile.events);\n      setSchedule(saveFile.schedule);\n    }\n  }, [match]);\n  console.log(actions, events, schedule);\n  const game = {\n    ...Apex2021,\n    plugins: [\n      SchedulePlugin({\n        initialSchedule: schedule,\n        initialEvents: events,\n      }),\n      ActionsPlugin({\n        initialActions: actions,\n      }),\n    ]\n  };\n  const GameClient = Client({\n    game: game,\n    board: Board,\n    numPlayers: 1\n  });\n  return (\n    <GameContext.Provider value={{\n      actions: actions,\n      events: events,\n    }}>\n      <GameClient {...props}/>\n    </GameContext.Provider>\n  );\n}\n\nconst App = function(props) {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ConfigurableGameClient} />\n      <Route exact path=\"/load-config/:configId\" component={ConfigurableGameClient} />\n      <Route exact path=\"/editor/:saveId\" component={GameEditor} />\n      <Route exact path=\"/editor\" component={GameEditor} />\n    </Switch>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  STATIC_ROOT\n} from './Constants';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Router basename={STATIC_ROOT}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}