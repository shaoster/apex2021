{"version":3,"sources":["../public/images/card sync nonrecursive /.png$","../public/images/card/After_School_Club_16_9.png","../public/images/card/Fatigue_16_9.png","../public/images/card/Haunted_Memory_16_9.png","../public/images/card/Healthy_Food_16_9.png","../public/images/card/Homework_16_9.png","../public/images/card/Jacket_16_9.png","../public/images/card/Junk_Food_16_9.png","../public/images/card/Money_Bill_16_9.png","../public/images/card/Money_Coin_16_9.png","../public/images/card/Music_16_9.png","../public/images/card/Olympus_16_9.png","../public/images/card/Overnight_Study_16_9.png","../public/images/card/Procrastination_16_9.png","../public/images/card/Shopping_16_9.png","../public/images/card/Sneaker_16_9.png","../public/images/card/Study__Creative_Writing_16_9.png","../public/images/card/Study__Math_16_9.png","../public/images/card/Study__Online_Lecture_16_9.png","../public/images/card/Study__Science_16_9.png","../public/images/card/Study__Textbook_16_9.png","../public/images/card/Therapist_16_9.png","../public/images/card/Workout_16_9.png","../public/images/event sync nonrecursive /.png$","../public/images/event/Bedroom_3_2.png","../public/images/event/Christmas_3_2.png","../public/images/event/Dad_Business_Struggle_3_2.png","../public/images/event/Exam_3_2.png","../public/images/event/Hospital_3_2.png","../public/images/event/Middle_School_Graduation_3_2.png","../public/images/event/Mom_Sick_3_2.png","../public/images/event/NYC_Travel_3_2.png","../public/images/event/Premonition_3_2.png","../public/images/event/Prepare_For_School_3_2.png","../public/images/event/Prom_3_2.png","../public/images/event/School_3_2.png","../public/images/event/School_Cold_3_2.png","../public/images/event/School_Warm_3_2.png","../public/images/event/Spring_Break_3_2.png","../public/images/event/You_Failed_3_2.png","../public/songs sync nonrecursive /.mp3$","../public/songs/af.mp3","../public/songs/da.mp3","Constants.js","Util.js","Action.js","Event.js","Schedule.js","LocalStorageContext.js","Status.js","Game.js","GameContext.js","component/Keyword.js","component/GameInfo.jsx","component/ActionArea.jsx","component/MusicPlayer.jsx","component/Board.jsx","Assets.js","component/GameEditor.jsx","component/LoadingScreen.jsx","LocalStorageRouter.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MAX_HAND_SIZE","STATIC_ROOT","process","AREA_TYPE","DrawCard","G","ctx","hand","length","deck","discard","push","pop","BaseAction","displayName","displayNameInShop","image","description","moneyCost","energyCost","producesGrowthMindset","producesMoney","producesAttention","producesEnergy","producesStudyPoints","drawsCards","discardsCards","gainsCards","forgetsOnDiscard","forgetsSelf","forgetsCards","perform","energy","growthMindsetPoints","Math","min","this","money","attention","i","cardsLeftToDiscard","events","setStage","cardsLeftToForget","forEach","c","buy","actionList","PatchDisplayName","action","Actions","reduce","rv","x","ActionsPlugin","options","initialActions","name","setup","actions","api","data","getActions","patchedActions","getAction","actionId","BaseEvent","song","clearsShop","studyPointsThreshold","engrossedTurns","inspiredTurns","indebtedTurns","energizedTurns","addsCardsToShop","addsCardsToDiscardPile","apply","statuses","inspired","max","energized","engrossed","indebted","actionShop","splice","card","Events","Schedule","eventsByDay","turnNumber","eventId","SchedulePlugin","initialSchedule","initialEvents","schedule","getCurrentEvents","getEvents","turn","event","getEvent","addEvent","patchedEvents","getTurnsUntilNextExam","s","some","ev","getStudyThresholdForNextExam","turnsUntilNextExam","nextExamTurn","getRaw","INITIAL_SCHEDULE","0","2","LocalStorageContext","createContext","BaseStatus","Statuses","INITIAL_BOARD","sort","currentEvent","backgroundImage","STARTS_TURN_WITH","Apex2021","setupData","moves","performAction","handIndex","INVALID_MOVE","buyAction","shopIndex","endTurn","activePlayers","all","onBegin","console","log","endStage","remainingCard","cardsToDraw","assign","entries","stat","dur","SetupNewTurn","onEnd","endGame","stages","showEvent","chooseOption","optionIndex","dismiss","discardAction","forget","forgetAction","GameContext","React","CardOrCards","number","Description","props","runEffect","className","passthrough","useEffect","Tooltip","Keyword","children","tooltipClassName","OverlayTrigger","placement","overlay","descriptionProps","Discard","Draw","Forget","ForgetSelf","Gain","cardId","renderCard","useContext","onClick","BoostGrowthMindset","BoostStudy","YOLO","GrowthMindset","isInspired","maybeStatusDescription","Badge","pill","variant","Money","isIndebted","Attention","isEngrossed","Energy","isEnergized","Turn","plugins","turnsRemaining","examStudyThreshold","pointOrPoints","extraDescription","GROWTH_MINDSET_COLOR","1","3","4","5","GameInfo","Table","responsive","bordered","ProgressBar","now","toPrecision","label","animated","_","require","classNames","Paginated","remainingProps","useState","currentPageIndex","setCurrentPageIndex","navs","Pagination","child","index","Item","active","CardGroup","maxColumns","maxRows","rows","chunk","listGroups","childRow","rowIndex","ListGroup","horizontal","ActionCardFromStaticActions","ActionCard","isSelected","setIsSelected","areaType","ref","gameStage","isSpecialHandSelectionStage","bg","Card","onMouseEnter","onMouseLeave","border","Header","Container","fluid","Row","Col","xs","Body","Title","Img","src","gainedCardIndex","Text","Footer","ActionList","actionsList","actionCards","slotId","ActionArea","noop","isDiscard","playOrderPos","isForget","actionData","tab","setTab","hasNewOpps","setHasNewOpps","getTitle","tabs","Tab","eventKey","title","disabled","Tabs","activeKey","onSelect","k","switchTo","Button","MusicPlayer","songUrl","currentSong","setCurrentSong","player","createRef","current","pause","play","loop","EventModal","show","onHide","styles","backgroundRepeat","backgroundSize","getTab","key","newActionsTab","newOpportunitiesTab","Modal","size","style","centered","Event","playSong","Board","Provider","value","FromRequireContext","rc","p","t","cleaned","replace","type","StripPrefix","CardImages","EventImages","Songs","PreloadAssetList","values","Assets","GameEditorContext","unCamelCase","input","toUpperCase","EntityEditor","setActions","setEvents","entityId","entityType","entity","entities","updaters","getValueType","field","maybeOption","newValue","oldValue","valueType","target","parseInt","checked","option","sequenceIdToRemove","removedValue","sequenceId","updatedEntities","assetSelector","repo","isClearable","onChange","formGroups","filter","Form","Control","Check","indexOf","relations","selectedValues","isMulti","hideSelectedOptions","displayValue","Group","as","controlId","Label","column","sm","ActionsTab","selectedAction","setSelectedAction","Nav","Link","defaultActiveKey","newActionId","updatedActions","EventPreview","setSongUrl","showEventPreview","setShowEventPreview","EventsTab","selectedEvent","setSelectedEvent","newEventId","updatedEvents","ScheduleTab","setSchedule","scheduleUpdater","Array","MAX_TURN_COUNT","row","cols","col","l","onRemove","ImportButton","dispatch","showImport","setShowImport","newSaveFileName","setNewSaveFileName","newSaveData","setNewSaveData","newSaveDataRaw","setNewSaveDataRaw","dataErrors","setDataErrors","rawSaveData","parsedData","JSON","parse","error","toString","doValidate","backdrop","keyboard","noValidate","onSubmit","preventDefault","stopPropagation","saveFile","closeButton","required","evt","placeholder","isValid","isInvalid","Feedback","TestChanges","saveId","isDirty","history","useHistory","useReducer","state","saveFiles","newSaveId","timestamp","Date","json","localStorage","getItem","knownSaves","setItem","stringify","updateNewSaveFileName","newSaveRow","generateRow","toLocaleString","to","navigator","clipboard","writeText","doCopy","saveRows","reverse","striped","hover","CheckDirty","original","edited","GameEditor","localStorageContext","isDebug","setIsDebug","remainder","editedActions","setEditedActions","editedEvents","setEditedEvents","editedSchedule","setEditedSchedule","setIsDirty","Loading","count","total","percent","startGame","LoadAsset","asset","updateProgress","Preload","assets","a","Promise","reject","assetType","Image","onload","Audio","oncanplaythrough","onerror","promises","LoadingScreen","isLoading","setIsLoading","nonChildren","parentContext","hasPreloaded","setHasPreloaded","assetsToLoad","loadingState","LocalStorageRouter","match","params","configId","game","GameClient","Client","board","exact","path","component","numPlayers","debug","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70b6caba.chunk.js","sourcesContent":["var map = {\n\t\"./After_School_Club_16_9.png\": 126,\n\t\"./Fatigue_16_9.png\": 127,\n\t\"./Haunted_Memory_16_9.png\": 128,\n\t\"./Healthy_Food_16_9.png\": 129,\n\t\"./Homework_16_9.png\": 130,\n\t\"./Jacket_16_9.png\": 131,\n\t\"./Junk_Food_16_9.png\": 132,\n\t\"./Money_Bill_16_9.png\": 133,\n\t\"./Money_Coin_16_9.png\": 134,\n\t\"./Music_16_9.png\": 135,\n\t\"./Olympus_16_9.png\": 136,\n\t\"./Overnight_Study_16_9.png\": 137,\n\t\"./Procrastination_16_9.png\": 138,\n\t\"./Shopping_16_9.png\": 139,\n\t\"./Sneaker_16_9.png\": 140,\n\t\"./Study__Creative_Writing_16_9.png\": 141,\n\t\"./Study__Math_16_9.png\": 142,\n\t\"./Study__Online_Lecture_16_9.png\": 143,\n\t\"./Study__Science_16_9.png\": 144,\n\t\"./Study__Textbook_16_9.png\": 145,\n\t\"./Therapist_16_9.png\": 146,\n\t\"./Workout_16_9.png\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 125;","export default __webpack_public_path__ + \"static/media/After_School_Club_16_9.427a8241.png\";","export default __webpack_public_path__ + \"static/media/Fatigue_16_9.988de212.png\";","export default __webpack_public_path__ + \"static/media/Haunted_Memory_16_9.6a4b4642.png\";","export default __webpack_public_path__ + \"static/media/Healthy_Food_16_9.c12c71bd.png\";","export default __webpack_public_path__ + \"static/media/Homework_16_9.43c63319.png\";","export default __webpack_public_path__ + \"static/media/Jacket_16_9.da6ec28b.png\";","export default __webpack_public_path__ + \"static/media/Junk_Food_16_9.53d3b064.png\";","export default __webpack_public_path__ + \"static/media/Money_Bill_16_9.6daf705f.png\";","export default __webpack_public_path__ + \"static/media/Money_Coin_16_9.da6bb9ad.png\";","export default __webpack_public_path__ + \"static/media/Music_16_9.d09f8b6d.png\";","export default __webpack_public_path__ + \"static/media/Olympus_16_9.49c623fa.png\";","export default __webpack_public_path__ + \"static/media/Overnight_Study_16_9.8edb1790.png\";","export default __webpack_public_path__ + \"static/media/Procrastination_16_9.ff966c1f.png\";","export default __webpack_public_path__ + \"static/media/Shopping_16_9.295e2aa1.png\";","export default __webpack_public_path__ + \"static/media/Sneaker_16_9.7c8a1986.png\";","export default __webpack_public_path__ + \"static/media/Study__Creative_Writing_16_9.be6f40c3.png\";","export default __webpack_public_path__ + \"static/media/Study__Math_16_9.3389142a.png\";","export default __webpack_public_path__ + \"static/media/Study__Online_Lecture_16_9.2ec9496d.png\";","export default __webpack_public_path__ + \"static/media/Study__Science_16_9.0f303817.png\";","export default __webpack_public_path__ + \"static/media/Study__Textbook_16_9.1cd9f61b.png\";","export default __webpack_public_path__ + \"static/media/Therapist_16_9.08609e53.png\";","export default __webpack_public_path__ + \"static/media/Workout_16_9.568dfcf4.png\";","var map = {\n\t\"./Bedroom_3_2.png\": 149,\n\t\"./Christmas_3_2.png\": 150,\n\t\"./Dad_Business_Struggle_3_2.png\": 151,\n\t\"./Exam_3_2.png\": 152,\n\t\"./Hospital_3_2.png\": 153,\n\t\"./Middle_School_Graduation_3_2.png\": 154,\n\t\"./Mom_Sick_3_2.png\": 155,\n\t\"./NYC_Travel_3_2.png\": 156,\n\t\"./Premonition_3_2.png\": 157,\n\t\"./Prepare_For_School_3_2.png\": 158,\n\t\"./Prom_3_2.png\": 159,\n\t\"./School_3_2.png\": 160,\n\t\"./School_Cold_3_2.png\": 161,\n\t\"./School_Warm_3_2.png\": 162,\n\t\"./Spring_Break_3_2.png\": 163,\n\t\"./You_Failed_3_2.png\": 164\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 148;","export default __webpack_public_path__ + \"static/media/Bedroom_3_2.46acfd78.png\";","export default __webpack_public_path__ + \"static/media/Christmas_3_2.1ec528f9.png\";","export default __webpack_public_path__ + \"static/media/Dad_Business_Struggle_3_2.9ddd561a.png\";","export default __webpack_public_path__ + \"static/media/Exam_3_2.c05c99f4.png\";","export default __webpack_public_path__ + \"static/media/Hospital_3_2.702d3662.png\";","export default __webpack_public_path__ + \"static/media/Middle_School_Graduation_3_2.f2b63314.png\";","export default __webpack_public_path__ + \"static/media/Mom_Sick_3_2.3b40411f.png\";","export default __webpack_public_path__ + \"static/media/NYC_Travel_3_2.d1485c00.png\";","export default __webpack_public_path__ + \"static/media/Premonition_3_2.eb11be44.png\";","export default __webpack_public_path__ + \"static/media/Prepare_For_School_3_2.1eaad7e9.png\";","export default __webpack_public_path__ + \"static/media/Prom_3_2.8e578607.png\";","export default __webpack_public_path__ + \"static/media/School_3_2.2171d059.png\";","export default __webpack_public_path__ + \"static/media/School_Cold_3_2.757be9b5.png\";","export default __webpack_public_path__ + \"static/media/School_Warm_3_2.791bf1e6.png\";","export default __webpack_public_path__ + \"static/media/Spring_Break_3_2.1e319ef5.png\";","export default __webpack_public_path__ + \"static/media/You_Failed_3_2.1d8d33cb.png\";","var map = {\n\t\"./af.mp3\": 166,\n\t\"./da.mp3\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 165;","export default __webpack_public_path__ + \"static/media/af.a1c157c0.mp3\";","export default __webpack_public_path__ + \"static/media/da.5ac41aaa.mp3\";","export const MAX_HAND_SIZE = 8;\nexport const MAX_GROWTH_MINDSET = 5;\nexport const STATIC_ROOT = process.env.PUBLIC_URL;\nexport const MAX_TURN_COUNT = 48;\nexport const AREA_TYPE = {\n  Opportunities: \"Opportunities\",\n  Hand: \"Hand\",\n  Deck: \"Deck\",\n  DiscardPile: \"Discard Pile\",\n};\n","import { MAX_HAND_SIZE } from \"./Constants\";\n\n// A weighted set of outcomes.\n// The key represents the lowest roll of a 20-sided dice that will result in that outcome.\n// Example: {\n//  0: [], // 50%\n//  10: [BadEvent], // 45%\n//  19: [CatastrophicEvent], // 5%\n// }\n//\n// Generate no events by default.\nexport const RollOutcome = function(roll, weightedOutcomes) {\n  const threshold = roll - 1;\n\tconst rollIndices = Object.keys(weightedOutcomes).map(k => parseInt(k));\n  const selectedIndex = rollIndices.find(k => threshold >= k);\n\treturn weightedOutcomes[\"\" + selectedIndex];\n};\n\nexport const DrawCard = function(G, ctx) {\n  if (G.hand.length >= MAX_HAND_SIZE) {\n    return false;\n  }\n  if (G.deck.length <= 0) {\n    while (G.discard.length > 0) {\n      G.deck.push(G.discard.pop());\n    }\n  }\n  // If the deck is still empty, no draw.\n  // In other words, all cards are already in your hand.\n  if (G.deck.length <= 0) {\n    return false;\n  }\n  G.hand.push(G.deck.pop());\n  return true;\n}\n","import { MAX_GROWTH_MINDSET, MAX_HAND_SIZE } from './Constants';\nimport { DrawCard } from './Util';\n\n\nexport const BaseAction = {\n  displayName: null,\n  displayNameInShop: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  moneyCost: 0,\n  energyCost: 0,\n  producesGrowthMindset: 0,\n  producesMoney: 0,\n  producesAttention: 0,\n  producesEnergy: 0,\n  producesStudyPoints: 0,\n  drawsCards: 0,\n  discardsCards: 0,\n  gainsCards: [],\n  forgetsOnDiscard: false,\n  forgetsSelf: false,\n  forgetsCards: 0,\n  // TODO: This is \"inheritance\" without any protection. Bad idea.\n  perform: function(G, ctx) {\n    // First check if we can afford the move.\n    if (G.energy <= 0) {\n      return false;\n    }\n    // Pay for the action.\n    G.energy--;\n    G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + this.producesGrowthMindset);\n    G.money += this.producesMoney;\n    G.attention += this.producesAttention;\n    G.energy += this.producesEnergy;\n    for (let i = 0; i < this.drawsCards; i++) {\n      DrawCard(G, ctx);\n    }\n    if (this.discardsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToDiscard = this.discardsCards;\n      ctx.events.setStage('discard');\n    }\n    if (this.forgetsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToForget = this.forgetsCards;\n      ctx.events.setStage('forget');\n    }\n    this.gainsCards.forEach((c) => G.discard.push(c));\n    return true;\n  },\n  buy: function(G, ctx) {\n    if (G.attention <= 0 || G.money < this.moneyCost || G.energy < this.energyCost) {\n      return false;\n    }\n    // Pay for the action.\n    G.attention--;\n    G.money -= this.moneyCost;\n    G.energy -= this.energyCost;\n    G.discard.push(this.id);\n    return true;\n  },\n};\n\nconst actionList = [\n  {\n    id: \"Card01\",\n    displayName: \"Card1\",\n    description: \"Make sure to play this every turn!\",\n    producesGrowthMindset: 1,\n  },\n  {\n    id: \"Card02\",\n    displayName: \"Card2\",\n    description: \"Getting money lets you buy stuff.\",\n    producesMoney: 1,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card03\",\n    displayName: \"Card3\",\n    description: \"Sometimes you just want to forget everything.\",\n    moneyCost: 2,\n    forgetsSelf: true,\n    forgetsCards: MAX_HAND_SIZE,\n  },\n  {\n    id: \"Card04\",\n    displayName: \"Card4\",\n    description: \"If you play this, you'll have to pick another card in your hand to discard.\",\n    moneyCost: 2,\n    drawsCards: 3,\n    discardsCards: 1,\n  },\n  {\n    id: \"Card05\",\n    displayName: \"Card5\",\n    description: \"Doing too much can make you tired.\",\n    moneyCost: 2,\n    producesGrowthMindset: 1,\n    producesMoney: 1,\n    producesEnergy: 1,\n    drawsCards: 1,\n    gainsCards: [\"fatigue\"],\n  },\n  {\n    id: \"Card06\",\n    displayName: \"Card6\",\n    description: \"More energy means you can play more actions!\",\n    moneyCost: 3,\n    producesEnergy: 2,\n    drawsCards: 1,\n  },\n  {\n    id: \"Card07\",\n    displayName: \"Card7\",\n    description: \"IDK\",\n    moneyCost: 3,\n  },\n  {\n    id: \"Card08\",\n    displayName: \"Card8\",\n    description: \"IDK\",\n    moneyCost: 4,\n  },\n  {\n    id: \"Card09\",\n    displayName: \"Card9\",\n    description: \"More money\",\n    moneyCost: 4,\n    producesMoney: 2,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card10\",\n    displayName: \"Card10\",\n    description: \"That's a lot of energy.\",\n    moneyCost: 4,\n    producesAttention: 1,\n    producesEnergy: 4,\n  },\n  {\n    id: \"Card11\",\n    displayName: \"Card11\",\n    description: \"Maybe there are better options.\",\n    moneyCost: 5,\n    producesEnergy: 1,\n    drawsCards: 2,\n  },\n  {\n    id: \"Card12\",\n    displayName: \"Card12\",\n    description: \"More more money\",\n    moneyCost: 6,\n    producesMoney: 3,\n    producesEnergy: 1,\n  },\n  {\n    id: \"fatigue\",\n    displayName: \"Fatigue\",\n    description: \"Better rest up or I'll just get even more tired later.\",\n    forgetsSelf: true,\n  },\n  {\n    id: \"summerHomework\",\n    displayName: \"Summer Homework\",\n    description: \"So tedious...\",\n    producesGrowthMindset: 1,\n    forgetsSelf: true,\n    forgetsOnDiscard: true,\n  },\n].map(c => ({\n  ...BaseAction,\n  ...c,\n}));\n\nexport const PatchDisplayName = function(action) {\n  return {\n    ...BaseAction,\n    ...action,\n    ...{\n      // Hack to back-populate the displayName.\n      displayNameInShop: action.displayNameInShop ? action.displayNameInShop : action.displayName\n    }\n  };\n}\nexport const PatchDisplayNames = function(actions) {\n  const patchedActions = {};\n  for (let [id, action] of Object.entries(actions)) {\n    patchedActions[id] = PatchDisplayName(action);\n  }\n  return patchedActions;\n}\n\nconst Actions = actionList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport const ActionsPlugin = (options) => {\n  const {\n    initialActions,\n  } = options;\n  return {\n    name: \"actions\",\n    setup: () => ({\n      actions: initialActions,\n    }),\n    api: ({ctx, data}) => ({\n      getActions: function():object {\n        // Get the nice re-hydrated version of events.\n        const patchedActions = {}\n        for (let id in data.actions) {\n          patchedActions[id] = this.getAction(id);\n        }\n        return patchedActions;\n      },\n      getAction: (actionId) => PatchDisplayName(data.actions[actionId]),\n    }),\n  };\n};\n\nexport default Actions;\n","export const BaseEvent = {\n  displayName: null,\n  image: null,\n  song: null,\n  description: \"<FLAVOR>\",\n  clearsShop: false,\n  studyPointsThreshold: 0,\n  engrossedTurns: 0,\n  inspiredTurns: 0,\n  indebtedTurns: 0,\n  energizedTurns: 0,\n  addsCardsToShop: [],\n  addsCardsToDiscardPile: [],\n  apply: function(G, ctx) {\n    // TBD: Events can potentially have choices that spawn other events later.\n    if (this.inspiredTurns > 0) {\n      G.statuses.inspired = Math.max((G.statuses.inspired || 0), this.inspiredTurns);\n    }\n    if (this.energizedTurns > 0) {\n      G.statuses.energized = Math.max((G.statuses.energized || 0), this.energizedTurns);\n    }\n    if (this.engrossedTurns > 0) {\n      G.statuses.engrossed = Math.max((G.statuses.engrossed || 0), this.engrossedTurns);\n    }\n    if (this.indebtedTurns > 0) {\n      G.statuses.indebted = Math.max((G.statuses.indebted || 0), this.indebtedTurns);\n    }\n\n    if (this.clearsShop) {\n      G.actionShop.splice(0, G.actionShop.length);\n    }\n    for (let card of this.addsCardsToShop) {\n      G.actionShop.push(card);\n    }\n    for (let card of this.addsCardsToDiscardPile) {\n      G.discard.push(card);\n    }\n  }\n};\n\nconst eventList = [\n  {\n    id: \"SummerStart\",\n    image: \"middle_school_graduation.png\",\n    song: \"af.mp3\",\n    displayName: \"Congratulations\",\n    description: \"After a long year, you've finally graduated from middle school.\",\n    inspiredTurns: 2, // No growth mindset lost.\n    energizedTurns: 2, // One extra energy per turn.\n    addsCardsToDiscardPile: [\n      \"summerHomework\",\n      \"summerHomework\",\n      \"Card01\",\n    ],\n  },\n  {\n    id: \"SchoolStart\",\n    image: \"welcome_back.png\",\n    song: \"da.mp3\",\n    displayName: \"High School Begins\",\n    description: \"And just like that High School begins.\",\n    addsCardsToDiscardPile: [\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card01\",\n      \"Card01\",\n    ],\n    addsCardsToShop: [\n      \"Card02\",\n      \"Card02\",\n      \"Card04\",\n      \"Card05\",\n    ],\n  },\n].map(c => ({\n  ...BaseEvent,\n  ...c,\n}));\n\nconst Events = eventList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Events;\n","import { BaseEvent } from \"./Event\";\nimport {\n  MAX_TURN_COUNT,\n} from \"./Constants\";\n\nexport class Schedule {\n  eventsByDay:object;\n\n  constructor(eventsByDay: object) {\n    this.eventsByDay = eventsByDay || {};\n  }\n\n  addEvent(turnNumber: number, eventId: string):void {\n    if (!(turnNumber in this.eventsByDay)) {\n      this.eventsByDay[turnNumber] = [];\n    }\n    this.eventsByDay[turnNumber].push(eventId);\n  }\n\n  getEvents(turnNumber: number):Array<string> {\n    if (turnNumber in this.eventsByDay) {\n      return this.eventsByDay[turnNumber]\n    }\n    return [];\n  }\n}\n\nexport const SchedulePlugin = (options) => {\n  const {\n    initialSchedule,\n    initialEvents,\n  } = options;\n  return {\n    name: \"schedule\",\n    setup: () => ({\n      schedule: initialSchedule,\n      events: initialEvents,\n    }),\n    api: ({ctx, data}) => ({\n      getCurrentEvents: function():Array<object> {\n        return new Schedule(data.schedule)\n          .getEvents(ctx.turn)\n          .map((eventId)=>({\n            id:eventId,\n            event: this.getEvent(eventId),\n          }));\n      },\n      addEvent: (turnNumber, eventId) => {\n        new Schedule(data.schedule).addEvent(turnNumber, eventId);\n      },\n      getEvents: function():object {\n        // Get the nice re-hydrated version of events.\n        const patchedEvents = {}\n        for (let id in data.events) {\n          patchedEvents[id] = this.getEvent(id);\n        }\n        return patchedEvents;\n      },\n      getEvent: (eventId) => ({\n        // Re-hydrate functions for use in the Game engine.\n        ...BaseEvent,\n        ...data.events[eventId]\n      }),\n      getTurnsUntilNextExam: function():object {\n        const s = new Schedule(data.schedule);\n        for (let turn = ctx.turn + 1; turn <= MAX_TURN_COUNT; turn++) {\n          const events = s.getEvents(turn);\n          if (events.some(ev => this.getEvent(ev).studyPointsThreshold > 0)) {\n            return turn - ctx.turn;\n          }\n        }\n        return null;\n      },\n      getStudyThresholdForNextExam: function():object {\n        const s = new Schedule(data.schedule);\n        const turnsUntilNextExam = this.getTurnsUntilNextExam();\n        if (turnsUntilNextExam === null) {\n          return null;\n        }\n        const nextExamTurn = ctx.turn + turnsUntilNextExam;\n        const events = s.getEvents(nextExamTurn);\n        for (let eventId of events) {\n          const event = this.getEvent(eventId);\n          if (event.studyPointsThreshold > 0) {\n            return event.studyPointsThreshold;\n          }\n        }\n        return null;\n      },\n      getRaw: () => {\n        return data;\n      }\n    }),\n  }\n}\n\nexport const INITIAL_SCHEDULE = {\n    0: [\"SummerStart\"],\n    2: [\"SchoolStart\"],\n};\n\nexport default Schedule;\n","import {\n  createContext,\n} from \"react\";\n\nconst LocalStorageContext = createContext({});\n\nexport default LocalStorageContext;\n","import { MAX_GROWTH_MINDSET } from \"./Constants\";\n\nexport const BaseStatus = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  apply: function(G, ctx) { }\n};\n\nconst statusList = [\n  {\n    id: \"energized\",\n    displayName: \"Energized\",\n    description: \"Gain an extra energy at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.energy += 1;\n    },\n  },\n  {\n    id: \"inspired\",\n    displayName: \"Inspired\",\n    description: \"Nullify the usual loss of growth mindset at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + 1);\n    },\n  },\n  {\n    id: \"engrossed\",\n    displayName: \"Engrossed\",\n    description: \"Start the turn with 0 attention.\",\n    apply: function(G, ctx) {\n      G.attention -= 1;\n    },\n  },\n  {\n    id: \"indebted\",\n    displayName: \"Indebted\",\n    description: \"Start the turn with -1 money.\",\n    apply: function(G, ctx) {\n      G.money -= 1;\n    },\n  },\n].map(c => ({\n  ...BaseStatus,\n  ...c,\n}));\n\nconst Statuses = statusList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Statuses;\n","import { INVALID_MOVE } from 'boardgame.io/core';\n\nimport Statuses from './Status';\n\nimport {\n  DrawCard\n} from './Util';\n\nconst INITIAL_BOARD = {\n  actionShop: [\n    /*\n    ...Array(2).fill(\"Card02\"),\n    ...Array(1).fill(\"Card06\"),\n    ...Array(2).fill(\"Card09\"),\n    ...Array(1).fill(\"Card10\"),\n    ...Array(1).fill(\"Card12\"),\n    ...(Object.keys(Actions).filter((c)=>Actions[c].isBuyable))\n    */\n  ].sort(),\n  deck: [\n    /*\n    // Turn 2. Will require some sacrifice.\n    \"Card02\", \"Card01\",\n    // Turn 1.\n    \"Card02\", \"Card02\", \"Card01\",\n    */\n  ],\n  hand: [],\n  discard: [],\n  growthMindsetPoints: 1,\n  cardsLeftToDiscard: 0,\n  cardsLeftToForget: 0,\n  statuses: {},\n  currentEvent: null,\n  backgroundImage: null,\n};\n\nconst STARTS_TURN_WITH = {\n  money: 0,\n  attention: 1,\n  energy: 1,\n};\n\nfunction SetupNewTurn(G, ctx) {\n  // First process any events.\n  console.log(ctx);\n  const events = ctx.schedule.getCurrentEvents();\n  console.log(events);\n  events.forEach(({id, event}) => {\n    event.apply(G, ctx);\n    G.currentEvent = id;\n  });\n  if (events.length === 0) {\n    // Don't bother with the Events UI if there's no events.\n    ctx.events.endStage();\n  }\n  // Discard the remainder of your hand.\n  while (G.hand.length > 0) {\n    let remainingCard = G.hand.pop();\n    if (!ctx.actions.getAction(remainingCard).forgetsOnDiscard) {\n      // You only get one chance to play certain kinds of cards.\n      G.discard.push(remainingCard);\n    }\n  }\n  const cardsToDraw = Math.min(5, G.growthMindsetPoints);\n  for (let i = 0; i < cardsToDraw; i++) {\n    DrawCard(G, ctx);\n  }\n  Object.assign(G, STARTS_TURN_WITH);\n  G.growthMindsetPoints--;\n\n  // Apply status effects last.\n  for (let [stat, dur] of Object.entries(G.statuses)) {\n    console.log(stat, dur);\n    if (dur > 0) {\n      Statuses[stat].apply(G, ctx);\n      G.statuses[stat]--;\n    } else {\n      delete G.statuses[stat];\n    }\n  }\n}\n\nexport const Apex2021 = {\n  setup: (ctx, setupData) => ({\n    ...INITIAL_BOARD,\n    ...STARTS_TURN_WITH\n  }),\n  moves: {\n    performAction: (G, ctx, handIndex) => {\n      const actionId = G.hand[handIndex];\n      const action = ctx.actions.getAction(actionId);\n      // Remove the card to be plpayed from the hand. Otherwise, weird\n      // self-interactions are possible.\n      G.hand.splice(handIndex, 1);\n      if (!action.perform(G, ctx)) {\n        // Return the card to its original location.\n        G.hand.splice(handIndex, 0, actionId);\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      if (!action.forgetsSelf) {\n        // YOLO cards don't do this.\n        G.discard.push(actionId);\n      }\n    },\n    buyAction: (G, ctx, shopIndex) => {\n      const actionId = G.actionShop[shopIndex];\n      const action = ctx.actions.getAction(actionId);\n      if (!action.buy(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      G.actionShop.splice(shopIndex, 1);\n    },\n    endTurn: (G, ctx) => {\n      ctx.events.endTurn();\n    },\n  },\n  turn: {\n    activePlayers: { all: \"showEvent\" },\n    onBegin: (G, ctx) => ( SetupNewTurn(G, ctx) ),\n    onEnd: (G, ctx) => {\n      if (G.growthMindsetPoints <= 0) {\n         ctx.events.endGame(\"fixed-mindset\");\n      }\n      //return G;\n    },\n    stages: {\n      showEvent: {\n        moves: {\n          chooseOption: (G, ctx, optionIndex) => {\n            // TBD: Events don't have any choices yet.\n          },\n          dismiss: (G, ctx) => {\n            G.backgroundImage = ctx.schedule.getEvent(G.currentEvent).image;\n            G.currentEvent = null;\n            ctx.events.endStage();\n          },\n        },\n      },\n      discard: {\n        moves: {\n          discardAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToDiscard);\n            const actionId = G.hand[handIndex];\n            G.hand.splice(handIndex, 1);\n            G.discard.push(actionId);\n            if (G.hand.length === 0) {\n              G.cardsLeftToDiscard = 0;\n            } else {\n              G.cardsLeftToDiscard--;\n            }\n            if (G.cardsLeftToDiscard <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      },\n      forget: {\n        moves: {\n          forgetAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToForget);\n            G.hand.splice(handIndex, 1);\n            if (G.hand.length === 0) {\n              G.cardsLeftToForget = 0;\n            } else {\n              G.cardsLeftToForget--;\n            }\n            if (G.cardsLeftToForget <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      }\n    }\n  },\n};\n","import React from 'react';\r\n\r\nconst GameContext = React.createContext({});\r\n\r\nexport default GameContext;\r\n","import React, {\n  useEffect,\n  useContext,\n} from \"react\";\n\nimport {\n  Badge,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport {\n  MAX_TURN_COUNT,\n} from \"../Constants\";\n\nimport GameContext from \"../GameContext\";\n\nfunction CardOrCards(number) {\n  return \"\" + number + \" \" + (number > 1 ? \"cards\" : \"card\");\n}\n\nexport const Description = (props) => {\n  const { description, runEffect, className, passthrough } = props;\n  useEffect(\n    () => {\n      if (runEffect) {\n        runEffect();\n      }\n    }\n  );\n  return (\n    <Tooltip id=\"keyword-description\" className={className} {...passthrough}>\n      {description}\n    </Tooltip>\n  );\n};\n\nexport const Keyword = (props) => {\n  const { children, description, tooltipClassName, runEffect } = props;\n  const renderDescription = (descriptionProps) => (\n    <Description\n      description={description}\n      className={tooltipClassName}\n      runEffect={runEffect}\n      passthrough={descriptionProps}\n    />\n  );\n  return (\n    <OverlayTrigger\n      placement=\"right\"\n      overlay={renderDescription}\n    >\n      <span className=\"card-keyword\">{children}</span>\n    </OverlayTrigger>\n  );\n};\n\nexport const Discard = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      description={\"Place cards from your hand into your discard pile until you have placed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    >\n      {\"Discard \" + number}\n    </Keyword>\n  );\n};\n\nexport const Draw = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      description={\"Place \" + CardOrCards(number) + \" from your deck into your hand. If your deck is empty, your discard pile will automatically be shuffled into your deck.\"}\n    >\n      {\"Draw \" + number}\n    </Keyword>\n  );\n};\n\nexport const Forget = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      description={\"Permanently remove cards from your hand until you have removed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    >\n      {\"Forget \" + number}\n    </Keyword>\n  );\n};\n\nexport const ForgetSelf = () => {\n  return (\n    <Keyword\n      description={\"Permanently remove this card from your hand upon being played.\"}\n    >\n      Forget Self\n    </Keyword>\n  );\n};\n\nexport const Gain = (props) => {\n  const { cardId, renderCard, tooltipClassName, runEffect } = props;\n  const {\n    actions\n  } = useContext(GameContext);\n  const card = renderCard({\n    cardId: cardId,\n    onClick: s=>{},\n    ...actions[cardId],\n  });\n  return (\n    <Keyword\n      description={card}\n      tooltipClassName={tooltipClassName}\n      runEffect={runEffect}\n    >\n      {\"Gain \" + actions[cardId].displayName}\n    </Keyword>\n  );\n};\n\nexport const BoostGrowthMindset = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      description={\"Growth Mindset represents the number of cards you can draw at the beginning of the next turn. You lose one point per turn, and Growth Mindset is capped at 5.\"}\n    >\n      {\"+\" + number + \" Growth Mindset\"}\n    </Keyword>\n  );\n};\n\nexport const BoostStudy = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      description={\"Study Points are necessary to progress through the story. Prioritize obtaining actions with Study Points!\"}\n    >\n      <span className=\"study-points\">{\"+\" + number + \" Study Points\"}</span>\n    </Keyword>\n  );\n};\n\nexport const YOLO = (props) => {\n  return (\n    <Keyword\n      description={\"If this card remains in your hand at the end of the turn, it will be permanently removed from your deck.\"}\n    >\n      #YOLO\n    </Keyword>\n  );\n};\n\n// GameInfo Keywords\n\nexport const GrowthMindset = (props) => {\n  const {\n    G,\n  } = useContext(GameContext);\n  const isInspired = (G.statuses.inspired || 0) > 0;\n  const maybeStatusDescription = isInspired ?\n    \" The Inspired status prevents Growth Mindset from decreasing while active.\" : \"\";\n  return (\n    <Keyword\n      description={\n        \"Growth Mindset represents the number of cards you can draw at the beginning of the next turn. You lose one point per turn, and Growth Mindset is capped at 5.\"\n        + maybeStatusDescription\n      }\n    >\n      Growth Mindset {isInspired && <Badge pill variant=\"info\" className=\"status\">Inspired</Badge>}\n    </Keyword>\n  );\n};\n\nexport const Money = (props) => {\n  const {\n    G,\n  } = useContext(GameContext);\n  const isIndebted = (G.statuses.indebted || 0) > 0;\n  const maybeStatusDescription = isIndebted ?\n    \" The Indebted status causes you to start with 1 fewer Money each turn.\" : \"\";\n  return (\n    <Keyword\n      description={\n        \"Money is refreshed each turn and can be gained by performing certain actions. Most opportunities cost Money to obtain.\"\n        + maybeStatusDescription\n      }\n    >\n      Money {isIndebted && <Badge pill variant=\"danger\" className=\"status\">Indebted</Badge>}\n    </Keyword>\n  );\n};\n\n\nexport const Attention = (props) => {\n  const {\n    G,\n  } = useContext(GameContext);\n  const isEngrossed = (G.statuses.engrossed || 0) > 0;\n  const maybeStatusDescription = isEngrossed ?\n    \" The Engrossed status causes you to start with 1 fewer Attention each turn.\" : \"\";\n  return (\n    <Keyword\n      description={\n        \"Attention represents the maximum number of opportunities you can obtain per turn.\"\n        + maybeStatusDescription\n      }\n      >\n        Attention {isEngrossed && <Badge pill variant=\"danger\" className=\"status\">Engrossed</Badge>}\n      </Keyword>\n  );\n};\n\nexport const Energy = (props) => {\n  const {\n    G,\n  } = useContext(GameContext);\n  const isEnergized = (G.statuses.energized || 0) > 0;\n  const maybeStatusDescription = isEnergized ?\n    \" The Energized status causes you to start with 1 extra Energy each turn.\" : \"\";\n  return (\n    <Keyword\n      description={\n        \"Energy represents the number of actions you can perform per turn. Some opportunities also cost Energy to obtain.\"\n        + maybeStatusDescription\n      }\n      >\n        Energy {isEnergized && <Badge pill variant=\"info\" className=\"status\">Energized</Badge>}\n      </Keyword>\n  );\n};\n\nexport const Turn = (props) => {\n  const {\n    plugins,\n  } = useContext(GameContext);\n  const turnsRemaining = plugins.schedule.api.getTurnsUntilNextExam();\n  const examStudyThreshold = plugins.schedule.api.getStudyThresholdForNextExam();\n  const pointOrPoints = \"point\" + (examStudyThreshold > 1 ? \"s\" : \"\");\n  const extraDescription = examStudyThreshold ?\n    ` The next exam will require ${examStudyThreshold} ${pointOrPoints} to pass.` : \"\";\n  return (\n    <Keyword\n      description={`You have ${MAX_TURN_COUNT} turns to play in total.${extraDescription}`}\n    >\n      Turn {turnsRemaining && <Badge pill variant=\"warning\" className=\"status\">{turnsRemaining} until next exam</Badge>}\n    </Keyword>\n  );\n};\n","import React, {\n  useContext,\n} from \"react\";\n\nimport {\n  Badge,\n  ProgressBar,\n  Table,\n} from \"react-bootstrap\";\n\nimport { MAX_GROWTH_MINDSET } from \"../Constants\";\nimport GameContext from \"../GameContext\";\nimport {\n  GrowthMindset,\n  Money,\n  Attention,\n  Energy,\n  Turn,\n} from \"./Keyword\";\n\nconst GROWTH_MINDSET_COLOR = {\n  0: \"danger\",\n  1: \"danger\",\n  2: \"danger\",\n  3: \"warning\",\n  4: \"success\",\n  5: \"info\",\n};\n\n\nfunction GameInfo() {\n  const {\n    G,\n    ctx,\n  } = useContext(GameContext);\n  const {\n    growthMindsetPoints,\n    money,\n    attention,\n    energy\n  } = G;\n  return (\n    <Table responsive bordered id=\"player-info\">\n      <thead>\n        <tr className=\"info-label-row\">\n          <th><Turn/></th>\n          <th><GrowthMindset/></th>\n          <th><Money/></th>\n          <th><Attention/></th>\n          <th><Energy/></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"info-data-row\">\n          <td><Badge variant=\"dark\">{ctx.turn}</Badge></td>\n          <td>\n            <ProgressBar\n              now={(growthMindsetPoints * 100.0 /MAX_GROWTH_MINDSET).toPrecision(3)}\n              label={growthMindsetPoints}\n              variant={GROWTH_MINDSET_COLOR[growthMindsetPoints]}\n              animated={growthMindsetPoints === MAX_GROWTH_MINDSET}\n            />\n          </td>\n          <td><Badge variant=\"warning\">{money}</Badge></td>\n          <td><Badge variant=\"primary\">{attention}</Badge></td>\n          <td><Badge variant=\"success\">{energy}</Badge></td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GameInfo;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Badge,\n  Button,\n  Container,\n  Col,\n  Card,\n  ListGroup,\n  Pagination,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\n\nimport {\n  AREA_TYPE,\n  STATIC_ROOT,\n} from \"../Constants\";\nimport GameContext from \"../GameContext\";\nimport {\n  BoostGrowthMindset,\n  BoostStudy,\n  Discard,\n  Draw,\n  Forget,\n  ForgetSelf,\n  Gain,\n  YOLO,\n} from \"./Keyword\";\n\nconst _ = require(\"lodash\");\nconst classNames = require(\"classnames\");\n\nfunction Paginated(props) {\n  const {\n    children,\n    ...remainingProps\n  } = props;\n  const [ currentPageIndex, setCurrentPageIndex ] = useState(0);\n  const navs = (\n    <Pagination>\n      {\n        children.map((child, index) => (\n          <Pagination.Item\n            key={index + 1}\n            active={index===currentPageIndex}\n            onClick={()=>setCurrentPageIndex(index)}\n          >\n            {index + 1}\n          </Pagination.Item>\n        ))\n      }\n    </Pagination>\n  );\n  return <div {...remainingProps}>\n    {children[currentPageIndex]}\n    {navs}\n  </div>;\n}\n\nexport function CardGroup(props) {\n  const {\n    label,\n    maxColumns,\n    maxRows,\n    children,\n    ...remainingProps\n  } = props;\n  const rows = _.chunk(children, (maxColumns || 4));\n  const listGroups = rows.map((childRow, rowIndex) =>\n    <ListGroup horizontal className=\"card-row\" key={rowIndex}>\n      {\n        childRow.map((child) => (\n          <ListGroup.Item>\n            {child}\n          </ListGroup.Item>\n        ))\n      }\n    </ListGroup>\n  );\n  return <div {...remainingProps}>\n    {children.length > 0 && label && <p><Badge>{label}</Badge></p> }\n    {\n      rows.length > (maxRows || 0) ?\n        <Paginated>{listGroups}</Paginated> : listGroups\n    }\n  </div>;\n}\n\nfunction ActionCardFromStaticActions(props) {\n  const { cardId } = props;\n  const {\n    actions,\n  } = useContext(GameContext);\n  console.log(actions);\n  return <ActionCard {...props} {...actions[cardId]} />\n}\n\nexport function ActionCard(props) {\n  const [isSelected, setIsSelected] = useState(false);\n  const {\n    areaType,\n    onClick,\n    ref,\n    gameStage,\n    displayName,\n    displayNameInShop,\n    image,\n    description,\n    moneyCost,\n    energyCost,\n    producesGrowthMindset,\n    producesMoney,\n    producesAttention,\n    producesEnergy,\n    producesStudyPoints,\n    drawsCards,\n    discardsCards,\n    gainsCards,\n    forgetsOnDiscard,\n    forgetsSelf,\n    forgetsCards,\n  } = props;\n  const isSpecialHandSelectionStage = (\n    (areaType === AREA_TYPE.Hand) &&\n    (gameStage === \"discard\" || gameStage === \"forget\")\n  );\n  const bg = isSpecialHandSelectionStage ? \"danger\" : null;\n  const className = classNames({\n    \"action-card\": true,\n    \"special-condition\": isSpecialHandSelectionStage\n  });\n  return (\n    <Card\n      ref = {ref}\n      onClick={onClick}\n      onMouseEnter={() => setIsSelected(true)}\n      onMouseLeave={() => setIsSelected(false)}\n      bg={bg}\n      border={isSelected ? \"warning\" : \"secondary\"}\n      className={className}\n    >\n      <Card.Header>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Makes:\n            </Col>\n            <Col xs={3}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {producesMoney}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"primary\">\n                {producesAttention}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {producesEnergy}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{areaType === AREA_TYPE.Opportunities && displayNameInShop ? displayNameInShop : displayName}</Card.Title>\n        <Card.Img src={image !== null ? `${STATIC_ROOT}/${image}` : `${STATIC_ROOT}/images/card/Placeholder_16_9.svg`} className=\"card-image\"/>\n        <ListGroup className=\"extra-rules\">\n          {\n            (producesGrowthMindset > 0) && (\n              <ListGroup.Item key=\"growth-mindset\"><BoostGrowthMindset number={producesGrowthMindset}/></ListGroup.Item>\n            )\n          }\n          {\n            (producesStudyPoints > 0) && (\n              <ListGroup.Item key=\"boost-study\"><BoostStudy number={producesStudyPoints}/></ListGroup.Item>\n            )\n          }\n          {\n            (drawsCards > 0) && (\n              <ListGroup.Item key=\"draws-cards\"><Draw number={drawsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (discardsCards > 0) && (\n              <ListGroup.Item key=\"discards-cards\"><Discard number={discardsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsOnDiscard) && (\n              <ListGroup.Item key=\"forgets-on-discard\"><YOLO/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsSelf) && (\n              <ListGroup.Item key=\"forgets-self\"><ForgetSelf/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsCards > 0) && (\n              <ListGroup.Item key=\"forgets-cards\"><Forget number={forgetsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            gainsCards.map((cardId, gainedCardIndex) =>\n              <ListGroup.Item key={\"gains-\" + gainedCardIndex}>\n                <Gain\n                  cardId={cardId}\n                  renderCard={ActionCard}\n                  tooltipClassName=\"card-preview\"\n                  runEffect={()=>{}}\n                />\n              </ListGroup.Item>\n            )\n          }\n        </ListGroup>\n        <Card.Text className=\"flavor\">\n          {description}\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Costs:\n            </Col>\n            <Col xs={3}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {moneyCost}\n              </Badge>\n            </Col>\n            <Col xs={1}/>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {energyCost}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction ActionList(props) {\n  const { actionsList, className, onClick, gameStage } = props;\n  const actionCards = actionsList.map((actionId, slotId) => (\n    <ActionCardFromStaticActions\n      areaType={className}\n      cardId={actionId}\n      key={slotId}\n      onClick={() => onClick(slotId)}\n      gameStage={gameStage} />\n  ));\n  return (\n    <CardGroup className={\"action-list-\" + className} maxRows={2}>\n      {actionCards.length > 0 ? actionCards :\n        <Badge><h1>No Actions Available</h1></Badge>}\n    </CardGroup>\n  );\n}\n\nfunction ActionArea() {\n  const {\n    G,\n    ctx,\n    moves,\n  } = useContext(GameContext);\n  const {\n    hand,\n    actionShop,\n    deck,\n    discard,\n  } = G;\n  const noop = (x) => {};\n  const isDiscard = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"discard\";\n  const isForget = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"forget\";\n  const gameStage = isDiscard ? \"discard\" : isForget ? \"forget\" : null;\n  const actionData = {\n    [AREA_TYPE.Hand]: {\n      actions: hand,\n      onClick: isDiscard ? moves.discardAction: isForget ? moves.forgetAction : moves.performAction\n    },\n    [AREA_TYPE.Opportunities]: {\n      actions: actionShop,\n      onClick: isDiscard ? noop : moves.buyAction\n    },\n    [AREA_TYPE.Deck]: {\n      actions: [...deck].sort(), // Hide the order of the cards.\n      onClick: noop\n    },\n    [AREA_TYPE.DiscardPile]: {\n      actions: discard,\n      onClick: noop\n    },\n  };\n  const [tab, setTab] = useState(AREA_TYPE.Hand);\n  const [hasNewOpps, setHasNewOpps] = useState(false);\n  const switchTo = (tab) => {\n    setTab(tab);\n    switch (tab) {\n      case AREA_TYPE.Opportunities:\n        setHasNewOpps(false);\n        break;\n      default:\n        break;\n    }\n  };\n  // Whenever we update the action shop, update this flag.\n  useEffect(() => {\n    if (actionShop.length > 0 && tab !== AREA_TYPE.Opportunities) {\n      setHasNewOpps(true);\n    }\n    // We take an undeclared dependency on `tab` because changes to the tab\n    // should never trigger this effect.\n    // eslint-disable-next-line\n  }, [actionShop, setHasNewOpps]);\n  const getTitle = (areaType) => {\n    switch (areaType) {\n      case AREA_TYPE.Opportunities:\n        return <p>{areaType} {hasNewOpps && <Badge variant=\"info\">New</Badge>}</p>\n      default:\n        return <p>{areaType}</p>;\n    }\n  }\n  const tabs = Object.keys(actionData).map((areaType) => (\n    <Tab eventKey={areaType} title={getTitle(areaType)} key={areaType} disabled={actionData[areaType].actions.length === 0}>\n      <ActionList\n        actionsList={actionData[areaType].actions}\n        className={areaType}\n        onClick={actionData[areaType].onClick}\n        gameStage={gameStage}\n      />\n    </Tab>\n  ));\n  return (\n    <div className=\"game-tabs\">\n      <Tabs id=\"actions\" activeKey={tab} onSelect={(k)=>switchTo(k)}>\n        {tabs}\n        <Tab eventKey=\"next-turn\" title=\"Next Turn\" key=\"next-turn\">\n          <div className=\"confirm-next-turn\">\n            <Button\n              onClick={() => {\n                moves.endTurn();\n                setTab(AREA_TYPE.Hand);\n              }}\n            >\n              Confirm End Turn\n            </Button>\n          </div>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default ActionArea;\n","import React, {\n  createRef,\n  useEffect,\n  useState,\n} from \"react\";\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nconst MusicPlayer = (props) => {\n  const {\n    songUrl\n  } = props;\n  const [currentSong, setCurrentSong] = useState(null);\n  const player = createRef();\n  useEffect(() => {\n    if (songUrl === currentSong) {\n      return;\n    }\n    player.current.pause();\n    player.current.src = `${STATIC_ROOT}/${songUrl}`;\n    player.current.play();\n    console.log(`Switching song from: ${currentSong} to ${player.current.src}`);\n    setCurrentSong(songUrl);\n  }, [currentSong, player, songUrl]);\n  return (\n    <audio ref={player} loop/>\n  );\n};\n\nexport default MusicPlayer;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Button,\n  Container,\n  Col,\n  Modal,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\n\nimport {\n  AREA_TYPE,\n  STATIC_ROOT,\n} from \"../Constants\";\n\nimport GameContext from \"../GameContext\";\nimport GameInfo from \"./GameInfo\";\nimport ActionArea, {\n  ActionCard,\n  CardGroup,\n} from \"./ActionArea\";\nimport MusicPlayer from \"./MusicPlayer\";\n\nexport function EventModal(props) {\n  const {\n    actions,\n    event,\n    show,\n    onHide,\n    ...remainingProps\n  } = props;\n  const {\n    addsCardsToDiscardPile,\n    addsCardsToShop,\n    displayName,\n    description,\n    image,\n  } = event;\n  const styles = {\n    backgroundImage: image == null ? null : `url(${STATIC_ROOT}/${image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n  };\n  const getTab = (actionList, key, label) => {\n    if (actionList.length === 0) {\n      return [];\n    }\n    const actionCards = actionList.map((actionId, index) => (\n      <ActionCard\n        areaType={label}\n        key={index}\n        cardId={actionId}\n        onClick={()=>{}}\n        {...actions[actionId]}\n      />\n    ));\n    return <Tab eventKey={key} title={label}>\n      <CardGroup>\n        {actionCards}\n      </CardGroup>\n    </Tab>;\n  };\n  const newActionsTab = getTab(\n    addsCardsToDiscardPile, \"new-actions\", \"Actions\"\n  );\n  const newOpportunitiesTab = getTab(\n    addsCardsToShop, \"new-opportunites\", AREA_TYPE.Opportunities\n  );\n  return (\n    <Modal\n      size = \"xl\"\n      show = {show}\n      onHide = {onHide}\n      style = {styles}\n      className = \"event-modal\"\n      centered\n      {...remainingProps}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          {displayName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"game-tabs\">\n        <p>{description}</p>\n        <Tabs>\n          {newActionsTab}\n          {newOpportunitiesTab}\n        </Tabs>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>Continue</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nfunction Event(props) {\n  const {\n    G,\n    moves,\n    actions,\n    events,\n    playSong,\n  } = useContext(GameContext);\n  const show = G.currentEvent in events;\n  const onHide = () => moves.dismiss();\n  const ev = events[G.currentEvent];\n  useEffect(() => {\n    if (ev && ev.song && show) {\n      playSong(ev.song);\n    }\n  }, [ev, playSong, show]);\n  if (!show) {\n    return <></>;\n  }\n  return <EventModal\n    actions={actions}\n    event={ev}\n    show={show}\n    onHide={onHide}\n  />\n}\n\nconst Board = function(props) {\n  const {\n    G,\n    ctx,\n    moves,\n    plugins,\n  } = useContext(GameContext);\n  const actions = plugins.actions.api.getActions();\n  const events = plugins.schedule.api.getEvents();\n  const [songUrl, playSong] = useState(null);\n  const {\n    backgroundImage\n  } = G;\n  const styles = {\n    backgroundImage: backgroundImage == null ? null : `url(${STATIC_ROOT}/${backgroundImage})`,\n    backgroundSize: \"cover\",\n  };\n  // Game has started.\n  return (\n    <GameContext.Provider value={{\n      G: G,\n      ctx: ctx,\n      moves: moves,\n      actions: actions,\n      plugins: plugins,\n      events: events,\n      songUrl: songUrl,\n      playSong: playSong,\n    }}>\n      <div style={styles} id=\"bg-container\"/>\n      <div id=\"game-wrapper\">\n        <Container fluid id=\"game-container\">\n          <Row>\n            <Col>\n              <GameInfo/>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <ActionArea/>\n            </Col>\n          </Row>\n        </Container>\n        <Event/>\n      </div>\n      <MusicPlayer songUrl={songUrl}/>\n    </GameContext.Provider>\n  );\n}\n\nexport default Board;\n","const StripPrefix = (x, p, t) => {\n  let cleaned = x.replace(/^\\.\\//, \"\");\n  let value = `${p}/${cleaned}`;\n  return {\n    [value]: {\n      label: cleaned,\n      value: value,\n      type: t,\n    }\n  }\n};\n\nconst FromRequireContext = (rc, p, t) => Object.assign(\n  {},\n  ...rc.keys().map(k => StripPrefix(k, p, t))\n);\n\nconst CardImages = FromRequireContext(\n  require.context('../public/images/card', false, /.png$/),\n  \"images/card\",\n  \"img\"\n);\nconst EventImages = FromRequireContext(\n  require.context('../public/images/event', false, /.png$/),\n  \"images/event\",\n  \"img\"\n);\nconst Songs = FromRequireContext(\n  require.context('../public/songs', false, /.mp3$/),\n  \"songs\",\n  \"audio\"\n);\nexport { CardImages, EventImages, Songs };\n\nconst PreloadAssetList = [\n  ...Object.values(CardImages),\n  ...Object.values(EventImages),\n  ...Object.values(Songs),\n].map(x=>({[x.value]: x.type}));\n\nconsole.log(CardImages);\n\nconst Assets = Object.assign(\n  {},\n  ...PreloadAssetList\n);\n\nconsole.log(Assets);\nexport default Assets;\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  ListGroup,\r\n  Modal,\r\n  Nav,\r\n  OverlayTrigger,\r\n  Row,\r\n  Tab,\r\n  Table,\r\n  Tabs,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  Multiselect,\r\n} from \"multiselect-react-dropdown\";\r\n\r\nimport { EventModal } from \"./Board\";\r\nimport MusicPlayer from \"./MusicPlayer\";\r\nimport { CardImages, EventImages, Songs } from \"../Assets\";\r\nimport GameContext from \"../GameContext\";\r\nimport { MAX_TURN_COUNT } from \"../Constants\";\r\nimport { ActionCard } from \"./ActionArea\";\r\nimport {\r\n  BaseAction,\r\n} from \"../Action\";\r\nimport { BaseEvent } from \"../Event\";\r\nimport LocalStorageContext from \"../LocalStorageContext\";\r\n\r\nconst GameEditorContext = createContext({});\r\n// Cute hack from https://gist.github.com/mattwiebe/1005915\r\nfunction unCamelCase(input){return input.replace(/([a-z])([A-Z])/g,'$1 $2').replace(/\\b([A-Z]+)([A-Z])([a-z])/,'$1 $2$3').replace(/^./,function(s){return s.toUpperCase();})}\r\n\r\nfunction EntityEditor(props) {\r\n  const { actionId, eventId } = props;\r\n  const {\r\n    actions, setActions,\r\n    events, setEvents,\r\n  } = useContext(GameEditorContext);\r\n  const entityId = actionId ? actionId : eventId;\r\n  const entityType = actionId ? \"action\" : \"event\";\r\n  const entity = actionId ? actions[actionId] : events[eventId];\r\n  const entities = actionId ? actions : events;\r\n  const updaters = {};\r\n  const getValueType = (field, value) => {\r\n    if (field === \"image\") {\r\n      if (entityType === \"event\") {\r\n        return \"event-image\";\r\n      } else {\r\n        return \"card-image\";\r\n      }\r\n    } else if (field === \"song\") {\r\n      return \"song\";\r\n    } else {\r\n      return typeof(value);\r\n    }\r\n  };\r\n  for (let field of Object.keys(entity)) {\r\n    updaters[field] = (e, maybeOption) => {\r\n      const oldValue = entities[entityId][field];\r\n      let newValue;\r\n      let valueType = getValueType(field, oldValue);\r\n      switch (valueType) {\r\n        case \"card-image\":\r\n        case \"event-image\":\r\n        case \"song\":\r\n          switch(maybeOption.action) {\r\n            case \"deselect-option\":\r\n            case \"clear\":\r\n              newValue = null;\r\n              break;\r\n            case \"select-option\":\r\n              newValue = e.value;\r\n              break;\r\n            default:\r\n              throw new Error(`Don't know how to serialize ${maybeOption.action}.`);\r\n          }\r\n          break;\r\n        case \"string\":\r\n          newValue = e.target.value;\r\n          break;\r\n        case \"number\":\r\n          newValue = parseInt(e.target.value);\r\n          break;\r\n        case \"boolean\":\r\n          newValue = e.target.checked;\r\n          break;\r\n        case \"object\":\r\n          switch(maybeOption.action) {\r\n            case \"deselect-option\":\r\n              newValue = [\r\n                ...oldValue,\r\n                maybeOption.option.value,\r\n              ];\r\n              break;\r\n            case \"remove-value\":\r\n              let sequenceIdToRemove = maybeOption.removedValue.sequenceId;\r\n              newValue = [...oldValue];\r\n              newValue.splice(sequenceIdToRemove, 1);\r\n              break;\r\n            default:\r\n              newValue = e.map(o=>o.value);\r\n              break;\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Don't know how to serialize ${valueType}.`);\r\n      }\r\n      const updatedEntities = {\r\n        ...entities,\r\n        ...{\r\n          [entityId]: {\r\n            ...entities[entityId],\r\n            [field]: newValue\r\n          }\r\n        }\r\n      };\r\n      const updateEntities = actionId ? setActions : setEvents;\r\n      updateEntities(updatedEntities);\r\n    }\r\n  }\r\n  const assetSelector = (field, repo) => (\r\n    <Select\r\n      id={`${entityId}.${field}`}\r\n      value={entity[field] === null ? null : repo[entity[field]]}\r\n      isClearable={true}\r\n      onChange={updaters[field]}\r\n      options={Object.values(repo)}\r\n    />\r\n  );\r\n  const formGroups = Object.entries(entity)\r\n    .filter(([field, value]) => (\r\n      typeof(value) !== \"function\" &&\r\n      // TODO: Support re-identifying.\r\n      field !== \"id\"\r\n    ))\r\n    .map(([field, value]) => {\r\n      let input;\r\n      let valueType = getValueType(field, value);\r\n\r\n      // The bogus key is a cute hack to force re-render of the defaultValue.\r\n      switch (valueType) {\r\n        case \"card-image\":\r\n          input = assetSelector(field, CardImages);\r\n          break;\r\n        case \"event-image\":\r\n          input = assetSelector(field, EventImages);\r\n          break;\r\n        case \"song\":\r\n          input = assetSelector(field, Songs);\r\n          break;\r\n        case \"string\":\r\n          input = (\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={entity[field]}\r\n              onChange={updaters[field]}\r\n            />\r\n          );\r\n          break;\r\n        case \"number\":\r\n          input = (\r\n            <OverlayTrigger\r\n              placement=\"left\"\r\n              overlay={<Tooltip>{entity[field]}</Tooltip>}\r\n            >\r\n              <Form.Control\r\n                type=\"range\"\r\n                value={entity[field]}\r\n                max={10}\r\n                onChange={updaters[field]}\r\n              />\r\n            </OverlayTrigger>\r\n          );\r\n          break;\r\n        case \"boolean\":\r\n          input = (\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={entity[field]}\r\n              onChange={updaters[field]}\r\n            />\r\n          );\r\n          break;\r\n        case \"object\":\r\n          // TODO: Bogus check. Actually add a type schema.\r\n          if (field.indexOf(\"Cards\") >= 0) {\r\n            let relations = actions;\r\n            const options = Object.entries(relations).map(([id, value])=>({\r\n              label: value.displayName,\r\n              value: id\r\n            }));\r\n            const selectedValues = entity[field].map((id, sequenceId)=>({\r\n              label: relations[id].displayName,\r\n              value: id,\r\n              // This is just so we know which item was removed from the widget.\r\n              sequenceId: sequenceId\r\n            }));\r\n            input = (\r\n              <Select\r\n                id={`${entityId}.${field}`}\r\n                isMulti\r\n                hideSelectedOptions={false}\r\n                value={selectedValues}\r\n                onChange={updaters[field]}\r\n                options={options}\r\n                displayValue=\"name\"\r\n              />\r\n            );\r\n          } else {\r\n            throw new Error(`Unrecognized value ${value} for ${field}.`);\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Unrecognized value type ${value} for ${field}.`);\r\n      }\r\n      return (\r\n        <Form.Group as={Row} key={`edit-${field}`} controlId={`${entityId}.${field}`}>\r\n          <Form.Label column sm={4}>{unCamelCase(field)}</Form.Label>\r\n          <Col sm={8}>\r\n            {input}\r\n          </Col>\r\n        </Form.Group>\r\n      );\r\n    });\r\n  return <>\r\n      {formGroups}\r\n  </>\r\n}\r\n\r\nfunction ActionsTab(props) {\r\n  const {\r\n    actions,\r\n    setActions,\r\n  } = useContext(GameEditorContext);\r\n  const [ selectedAction, setSelectedAction ] = useState(Object.keys(actions)[0]);\r\n  const navs = Object.entries(actions).map(([id, action]) => (\r\n    <Nav.Item key={id}>\r\n      <Nav.Link eventKey={id}>{action.displayName}</Nav.Link>\r\n    </Nav.Item>\r\n  ));\r\n  const newAction = () => {\r\n    const newActionId = \"Card\" + (Object.keys(actions).length + 1);\r\n    const updatedActions = {\r\n      ...actions,\r\n      [newActionId] : {\r\n        ...BaseAction,\r\n        id: newActionId,\r\n        displayName: newActionId,\r\n        displayNameInShop: newActionId,\r\n      }\r\n    };\r\n    setActions(updatedActions);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col id=\"action-nav\" sm={2}>\r\n        <Nav\r\n          variant=\"pills\"\r\n          className=\"flex-column\"\r\n          defaultActiveKey={selectedAction}\r\n          onSelect={setSelectedAction}\r\n        >\r\n          {navs}\r\n          <Button onClick={newAction} variant=\"light\">+</Button>\r\n        </Nav>\r\n      </Col>\r\n      <Col sm={8}>\r\n        <div id=\"card-editor-card-container\">\r\n          <ActionCard cardId={selectedAction} onClick={()=>{}} {...actions[selectedAction]}/>\r\n        </div>\r\n        <EntityEditor actionId={selectedAction}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction EventPreview(props) {\r\n  const {\r\n    eventId\r\n  } = props;\r\n  const {\r\n    actions,\r\n    events,\r\n    // Music management is different in the editor since we don't let the songs\r\n    // persist once the preview is closed.\r\n    setSongUrl,\r\n  } = useContext(GameEditorContext);\r\n  const event = events[eventId];\r\n  const [ showEventPreview, setShowEventPreview ] = useState(false);\r\n  useEffect(() => {\r\n    if (showEventPreview) {\r\n      setSongUrl(`${event.song}`);\r\n    } else {\r\n      setSongUrl(null);\r\n    }\r\n  }, [event, setSongUrl, showEventPreview]);\r\n  const onButtonClick = () => setShowEventPreview(true);\r\n  const onEventPreviewClose = () => setShowEventPreview(false);\r\n  return <>\r\n    <Button onClick={onButtonClick}>Show Preview</Button>\r\n    <EventModal\r\n      actions={actions}\r\n      event={event}\r\n      show={showEventPreview}\r\n      onHide={onEventPreviewClose}\r\n    />\r\n  </>\r\n}\r\n\r\nfunction EventsTab(props) {\r\n  const {\r\n    events,\r\n    setEvents,\r\n  } = useContext(GameEditorContext);\r\n  const [ selectedEvent, setSelectedEvent ] = useState(Object.keys(events)[0]);\r\n  const navs = Object.entries(events).map(([id, event]) => (\r\n    <Nav.Item key={id}>\r\n      <Nav.Link eventKey={id}>{event.displayName}</Nav.Link>\r\n    </Nav.Item>\r\n  ));\r\n  const newEvent = () => {\r\n    const newEventId = \"Event\" + (Object.keys(events).length + 1);\r\n    const updatedEvents = {\r\n      ...events,\r\n      [newEventId] : {\r\n        ...BaseEvent,\r\n        id: newEventId,\r\n        displayName: newEventId,\r\n      }\r\n    };\r\n    setEvents(updatedEvents);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col id=\"action-nav\" sm={2}>\r\n        <Nav\r\n          variant=\"pills\"\r\n          className=\"flex-column\"\r\n          onSelect={setSelectedEvent}\r\n          defaultActiveKey={selectedEvent}\r\n        >\r\n          {navs}\r\n          <Button onClick={newEvent} variant=\"light\">+</Button>\r\n        </Nav>\r\n      </Col>\r\n      <Col sm={8}>\r\n        <EventPreview eventId={selectedEvent}/>\r\n        <EntityEditor eventId={selectedEvent}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction ScheduleTab(props) {\r\n  const {\r\n    schedule,\r\n    setSchedule,\r\n    events,\r\n  } = useContext(GameEditorContext);\r\n  const scheduleUpdater = (turn, updatedEvents) => {\r\n    setSchedule({\r\n      ...schedule,\r\n      [turn]: updatedEvents.map((e) => e.id),\r\n    });\r\n  };\r\n  const options = Object.entries(events).map(([eventId, event]) => ({\r\n    id: eventId,\r\n    name: event.displayName,\r\n  }));\r\n  const MAX_TURNS_PER_ROW = 6;\r\n  // Assume divisibility by 6.\r\n  const MAX_TURNS_PER_COLUMN = MAX_TURN_COUNT / MAX_TURNS_PER_ROW;\r\n  const rows = [...Array(MAX_TURNS_PER_COLUMN).keys()].map((row) => {\r\n    const cols = [...Array(MAX_TURNS_PER_ROW).keys()].map((col) => {\r\n      const turn = row * MAX_TURNS_PER_ROW + col;\r\n      const selectedValues = (schedule[turn] || []).map((eventId) => ({\r\n        id: eventId,\r\n        name: events[eventId].displayName,\r\n      }));\r\n      return (\r\n        <ListGroup.Item sm={4} key={`${row}.${col}`}>\r\n          <p>Turn {turn + 1}:</p>\r\n          <Multiselect\r\n            id={`${turn}.events`}\r\n            selectedValues={selectedValues}\r\n            onSelect={(l)=>scheduleUpdater(turn, l)}\r\n            onRemove={(l)=>scheduleUpdater(turn, l)}\r\n            options={options}\r\n            displayValue=\"name\"\r\n          />\r\n        </ListGroup.Item>\r\n      );\r\n    });\r\n    return (\r\n      <ListGroup horizontal={\"lg\"} key={row}>\r\n        {cols}\r\n      </ListGroup>\r\n    );\r\n  });\r\n  return <div id=\"schedule-editor\">\r\n    {rows}\r\n  </div>;\r\n}\r\n\r\nfunction ImportButton(props) {\r\n  const { dispatch } = props;\r\n  const [showImport, setShowImport] = useState(false);\r\n  const [newSaveFileName, setNewSaveFileName] = useState(\"<UNKNOWN>\");\r\n  const [newSaveData, setNewSaveData] = useState(null);\r\n  const [newSaveDataRaw, setNewSaveDataRaw] = useState(\"\");\r\n  const [dataErrors, setDataErrors] = useState(\"Please paste your data.\");\r\n  const importSave = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (newSaveData) {\r\n      dispatch({\r\n        type: \"new-save\",\r\n        saveFile: newSaveData\r\n      });\r\n      setShowImport(false);\r\n    }\r\n  };\r\n  const validateData = (evt) => {\r\n    setNewSaveDataRaw(evt.target.value)\r\n  };\r\n  const doValidate = (rawSaveData) => {\r\n    try {\r\n      const parsedData = JSON.parse(rawSaveData);\r\n      if (!parsedData.name) {\r\n        throw new Error(\"Could not parse save file name.\");\r\n      }\r\n      if (!parsedData.actions) {\r\n        throw new Error(\"Could not parse actions.\");\r\n      }\r\n      if (!parsedData.events) {\r\n        throw new Error(\"Could not parse events.\");\r\n      }\r\n      if (!parsedData.schedule) {\r\n        throw new Error(\"Could not parse schedule.\");\r\n      }\r\n      setNewSaveFileName(parsedData.name);\r\n      setNewSaveData(parsedData);\r\n      setDataErrors(null);\r\n    } catch (error) {\r\n      setNewSaveFileName(\"<UNKNOWN>\");\r\n      setNewSaveData(null);\r\n      setDataErrors(error.toString());\r\n    }\r\n  }\r\n  useEffect(()=> {\r\n    doValidate(newSaveDataRaw);\r\n  }, [newSaveDataRaw]);\r\n  return (\r\n    <>\r\n      <Button onClick={()=>setShowImport(true)}>Import</Button>\r\n      <Modal\r\n        size=\"lg\"\r\n        show={showImport}\r\n        onHide={() => setShowImport(false)}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Form noValidate onSubmit={importSave}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal title</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"import-name\">\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control type=\"text\" value={newSaveFileName} required disabled/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"import-data\">\r\n              <Form.Label>Data:</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={16}\r\n                value={newSaveDataRaw}\r\n                onChange={validateData}\r\n                placeholder=\"Paste your data here.\"\r\n                isValid={dataErrors === null}\r\n                isInvalid={dataErrors !== null}\r\n              />\r\n              <Form.Control.Feedback type={dataErrors ? \"invalid\" : \"valid\"}>\r\n                {dataErrors}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => setShowImport(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={newSaveData === null}>Import Save</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TestChanges(props) {\r\n  const {\r\n    saveId,\r\n    isDirty,\r\n  } = props;\r\n  const history = useHistory();\r\n  const handleSave = (state, action) => {\r\n    switch (action.type) {\r\n      case \"load-all\":\r\n        return action.saveFiles;\r\n      case \"new-save\":\r\n        const newSaveId = Object.keys(state).length;\r\n        return {\r\n          ...state,\r\n          [newSaveId]: {\r\n            ...action.saveFile,\r\n            timestamp: Date.now(),\r\n          }\r\n        };\r\n      default:\r\n        throw new Error(`Unrecognized action type: ${action.type}`);\r\n    }\r\n  };\r\n  const [ saveFiles, dispatch ] = useReducer(handleSave, {});\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"saveFiles\");\r\n    const knownSaves = JSON.parse(json);\r\n    if (knownSaves) {\r\n      dispatch({\r\n        type: \"load-all\",\r\n        saveFiles: knownSaves\r\n      });\r\n    }\r\n  }, [saveId]);\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"saveFiles\");\r\n    const knownSaves = json ? JSON.parse(json) : {};\r\n    if (Object.keys(saveFiles).length <= Object.keys(knownSaves).length) {\r\n      return;\r\n    }\r\n    localStorage.setItem(\"saveFiles\", JSON.stringify(saveFiles));\r\n    const newSaveId = Object.keys(saveFiles).length - 1;\r\n    if (newSaveId >= 0 && newSaveId.toString() !== saveId) {\r\n      history.push(`/${newSaveId}/edit`);\r\n    }\r\n\r\n  }, [history, saveFiles]);\r\n  const {\r\n    actions,\r\n    events,\r\n    schedule,\r\n  } = useContext(GameEditorContext);\r\n  const [newSaveFileName, updateNewSaveFileName] = useState(\"Some Name\");\r\n  const newSave = () => {\r\n    dispatch({\r\n      type: \"new-save\",\r\n      saveFile: {\r\n        name: newSaveFileName,\r\n        actions: actions,\r\n        events: events,\r\n        schedule: schedule,\r\n      }\r\n    });\r\n  };\r\n  const doCopy = (saveId) => {\r\n    navigator.clipboard.writeText(JSON.stringify(saveFiles[saveId]));\r\n  };\r\n  const newSaveRow = (\r\n    <tr id=\"unsaved-row\" key=\"unsaved-row\">\r\n      <td>{Object.keys(saveFiles).length}</td>\r\n      <td>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={newSaveFileName}\r\n          onChange={(ev) => updateNewSaveFileName(ev.target.value)}\r\n        />\r\n      </td>\r\n      <td>Now</td>\r\n      <td>\r\n        <Button onClick={newSave} disabled={!isDirty}>Save Current</Button>&nbsp;\r\n        <ImportButton dispatch={dispatch}/>\r\n      </td>\r\n      <td><Button disabled>Save to export</Button></td>\r\n      <td>Save to launch</td>\r\n    </tr>\r\n  );\r\n  const generateRow = (saveId, name, timestamp) => (\r\n    <tr key={`save-${saveId}`}>\r\n      <td>{saveId}</td>\r\n      <td>{name}</td>\r\n      <td>{timestamp ? new Date(timestamp).toLocaleString() : \"N/A\"}</td>\r\n      <td><Link to={`/${saveId}/edit`}><Button>Load</Button></Link></td>\r\n      <td><Button onClick={()=>doCopy(saveId)}>Copy to Clipboard</Button></td>\r\n      <td><Link to={`/${saveId}/game`} target=\"_blank\"><Button>Launch Game</Button></Link></td>\r\n    </tr>\r\n  );\r\n  const saveRows = Object.entries(saveFiles).map(([saveId, saveFile]) => (\r\n    generateRow(saveId, saveFile.name, saveFile.timestamp)\r\n  )).reverse();\r\n  return (\r\n    <Table striped bordered hover size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>Save/Load</th>\r\n          <th>Export</th>\r\n          <th>Launch</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {newSaveRow}\r\n        {saveRows}\r\n        {generateRow(\"static\", \"Hard Coded Configuration\", null)}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nfunction CheckDirty(original, edited) {\r\n  for (let [id, entity] of Object.entries(edited)) {\r\n    if (!(id in original)) {\r\n      return true;\r\n    }\r\n    for (let [k, v] of Object.entries(entity)) {\r\n      if (v !== original[id][k]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction GameEditor(props) {\r\n  const { saveId } = props;\r\n  const localStorageContext = useContext(LocalStorageContext);\r\n  const {\r\n    actions,\r\n    setActions,\r\n    events,\r\n    setEvents,\r\n    schedule,\r\n    setSchedule,\r\n    isDebug,\r\n    setIsDebug,\r\n    ...remainder\r\n  } = localStorageContext;\r\n  // We need to store dirty copies of the game configuration to avoid reloading\r\n  // whenever we edit anything.\r\n  // TODO: Migrate this to redux.\r\n  const [editedActions, setEditedActions] = useState(actions);\r\n  const [editedEvents, setEditedEvents] = useState(events);\r\n  const [editedSchedule, setEditedSchedule] = useState(schedule);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [songUrl, setSongUrl] = useState(null);\r\n  useEffect(() => {\r\n    // Once dirty, always dirty. Don't bother re-checking.\r\n    if (isDirty) {\r\n      return;\r\n    }\r\n    if (CheckDirty(actions, editedActions) ||\r\n        CheckDirty(events, editedEvents) ||\r\n        CheckDirty(schedule, editedSchedule)\r\n    ) {\r\n      setIsDirty(true);\r\n    } else {\r\n      setIsDirty(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editedActions, editedEvents, editedSchedule]);\r\n\r\n  useEffect(() => {\r\n    // No point in having debug mode on for the editor.\r\n    if (isDebug) {\r\n      setIsDebug(false);\r\n    }\r\n  }, [isDebug, setIsDebug]);\r\n  return (\r\n    <GameEditorContext.Provider value={{\r\n      actions: editedActions,\r\n      setActions: setEditedActions,\r\n      events: editedEvents,\r\n      setEvents: setEditedEvents,\r\n      schedule: editedSchedule,\r\n      setSchedule: setEditedSchedule,\r\n      saveId: saveId,\r\n      songUrl: songUrl,\r\n      setSongUrl: setSongUrl,\r\n      ...remainder\r\n    }}>\r\n      <Tabs id=\"editor-root\" defaultActiveKey=\"actions\">\r\n        <Tab disabled title={isDirty ? \"Unsaved Changes\" : `Save Slot: ${saveId}`}>\r\n        </Tab>\r\n        <Tab eventKey=\"actions\" title=\"Actions\" key=\"edit-actions\">\r\n          <GameContext.Provider value={{\r\n            // We need to override the locally edited actions in order for\r\n            // linked card previews (e.g. from \"Gain\") to be up-to-date.\r\n            actions: editedActions,\r\n          }}>\r\n            <ActionsTab/>\r\n          </GameContext.Provider>\r\n        </Tab>\r\n        <Tab eventKey=\"events\" title=\"Events\" key=\"edit-events\">\r\n          <GameContext.Provider value={{\r\n            // We need to override the locally edited actions in order for\r\n            // linked card previews (e.g. from \"Gain\") to be up-to-date.\r\n            actions: editedActions,\r\n          }}>\r\n            <EventsTab/>\r\n          </GameContext.Provider>\r\n        </Tab>\r\n        <Tab eventKey=\"schedule\" title=\"Schedule\" key=\"edit-schedule\">\r\n          <ScheduleTab/>\r\n        </Tab>\r\n        <Tab eventKey=\"test\" title=\"Test Changes\" key=\"test\">\r\n          <TestChanges saveId={saveId} isDirty={isDirty}/>\r\n        </Tab>\r\n      </Tabs>\r\n      <MusicPlayer songUrl={songUrl}/>\r\n    </GameEditorContext.Provider>\r\n  );\r\n}\r\n\r\nexport default GameEditor;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\n\r\nimport {\r\n  STATIC_ROOT,\r\n} from \"../Constants\";\r\n\r\nimport Assets from \"../Assets\";\r\nimport GameContext from \"../GameContext\";\r\nimport LocalStorageContext from \"../LocalStorageContext\";\r\n\r\nconst Loading = function(props) {\r\n  const {\r\n    count,\r\n    total,\r\n    percent,\r\n    startGame\r\n  } = props;\r\n  return (\r\n    <div id=\"loading\">\r\n      <ProgressBar now={percent}/>\r\n      <hr/>\r\n      <p>\r\n        {\r\n          count < total ? (\r\n            `Loaded ${count}/${total} assets...`\r\n          ) : (\r\n            <Button onClick={startGame}>Begin</Button>\r\n          )\r\n        }\r\n      </p>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst LoadAsset = (asset, src, updateProgress, resolve) => {\r\n  // Incrementally update progress bar.\r\n  updateProgress();\r\n  resolve(asset);\r\n};\r\n\r\n// Pattern ripped from\r\n// https://jack72828383883.medium.com/ff1642708240\r\nconst Preload = async (assets: object, updateProgress) => {\r\n  const promises = await Object.keys(assets).map((src) => {\r\n    if (src === \"undefined\") {\r\n      throw new Error(\"Could not resolve URL for asset.\")\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n      const assetType = assets[src];\r\n      let asset;\r\n      switch (assetType) {\r\n        case \"img\":\r\n          asset = new Image();\r\n          asset.onload = () => {\r\n            LoadAsset(asset, src, updateProgress, resolve);\r\n          };\r\n          break;\r\n        case \"audio\":\r\n          asset = new Audio();\r\n          // Audio files have different handlers.\r\n          asset.oncanplaythrough = () => {\r\n            LoadAsset(asset, src, updateProgress, resolve);\r\n          };\r\n          break;\r\n        default:\r\n          throw new Error(`Unrecognized asset type: ${assetType}`);\r\n      }\r\n      asset.src = `${STATIC_ROOT}/${src}`;\r\n      asset.onerror = () => {\r\n        reject(`Could not load ${assetType}: ${asset.src}`);\r\n      };\r\n    });\r\n  });\r\n  await Promise.all(promises);\r\n};\r\n\r\nconst LoadingScreen = (props) => {\r\n  const {\r\n    children,\r\n    isLoading,\r\n    setIsLoading,\r\n    ...nonChildren\r\n  } = props;\r\n  const {\r\n    plugins\r\n  } = nonChildren;\r\n  const parentContext = useContext(LocalStorageContext);\r\n  const actions = plugins.actions.api.getActions();\r\n  const events = plugins.schedule.api.getEvents();\r\n  const [hasPreloaded, setHasPreloaded] = useState(false);\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"increment\":\r\n        return {\r\n          count: state.count + 1,\r\n          total: state.total,\r\n          percent: (100.0 * (state.count + 1) / state.total)\r\n        };\r\n      default:\r\n        throw new Error(`Unsupported action type ${action.type}`);\r\n    }\r\n  };\r\n  // TODO: Clean up this assets computation.\r\n  const assetsToLoad = Assets;\r\n  const [loadingState, dispatch] = useReducer(reducer, {\r\n    count: 0,\r\n    total: Object.keys(assetsToLoad).length,\r\n    percent: 0,\r\n  });\r\n  useEffect(() => {\r\n    Preload(\r\n      // Preload all the images and audio.\r\n      Assets,\r\n      // And update the progress bar when each item is loaded.\r\n      () => {\r\n        if (!hasPreloaded) {\r\n          dispatch({type: \"increment\"})\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      setHasPreloaded(true);\r\n    };\r\n  }, [dispatch, hasPreloaded, plugins]);\r\n\r\n  if (isLoading) {\r\n    // TODO: In theory we should introduce an intermediate \"loaded-but-not-started\" state.\r\n    return <Loading startGame={() => setIsLoading(false)} {...loadingState} />;\r\n  }\r\n  return (\r\n    <LocalStorageContext.Provider value={{\r\n      // Patch in the cleaned actions and events.\r\n      ...parentContext,\r\n      actions: actions,\r\n      events: events,\r\n    }}>\r\n      <GameContext.Provider value={{\r\n        ...nonChildren\r\n      }}>\r\n        {children}\r\n      </GameContext.Provider>\r\n    </LocalStorageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React, {\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Route,\n} from 'react-router-dom';\n\nimport { Client } from 'boardgame.io/react';\n\nimport Actions, {\n  ActionsPlugin,\n} from \"./Action\";\n\nimport Events from \"./Event\";\nimport {\n  SchedulePlugin,\n  INITIAL_SCHEDULE,\n} from \"./Schedule\";\n\nimport LocalStorageContext from \"./LocalStorageContext\";\nimport { Apex2021 } from './Game';\nimport Board from './component/Board';\nimport GameEditor from './component/GameEditor';\nimport LoadingScreen from './component/LoadingScreen';\n\nconst LocalStorageRouter = (props) => {\n  const {\n    match,\n  } = props;\n  const [isDebug, setIsDebug] = useState(true);\n  const [actions, setActions] = useState(Actions);\n  const [events, setEvents] = useState(Events);\n  const [schedule, setSchedule] = useState(INITIAL_SCHEDULE);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const json = localStorage.getItem(\"saveFiles\");\n    const knownSaves = JSON.parse(json);\n    if (knownSaves && match.params.configId) {\n      const saveFile = knownSaves[match.params.configId];\n      if (saveFile) {\n        setActions(saveFile.actions);\n        setEvents(saveFile.events);\n        setSchedule(saveFile.schedule);\n      }\n    }\n  }, [match]);\n  const game = {\n    ...Apex2021,\n    plugins: [\n      SchedulePlugin({\n        initialSchedule: schedule,\n        initialEvents: events,\n      }),\n      ActionsPlugin({\n        initialActions: actions,\n      }),\n    ]\n  };\n  const MaybeBoardOrEditor = (props) => (\n    <LocalStorageContext.Provider value={{\n      actions: actions,\n      setActions: setActions,\n      events: events,\n      setEvents: setEvents,\n      schedule: schedule,\n      setSchedule: setSchedule,\n      isDebug: isDebug,\n      setIsDebug: setIsDebug,\n    }}>\n      <LoadingScreen\n        // The \"is-loading\" state has to be owned at the root, else the child\n        // editor will re-trigger the loading screen every time an edit is made.\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        {...props}\n        >\n        <Route exact path=\"/:configId/game\" component={Board} />\n        <Route exact path=\"/:configId/edit\">\n          <GameEditor saveId={match.params.configId ? match.params.configId : 0 } />\n        </Route>\n      </LoadingScreen>\n    </LocalStorageContext.Provider>\n  );\n  const GameClient = Client({\n    game: game,\n    board: MaybeBoardOrEditor,\n    numPlayers: 1,\n    debug: isDebug,\n  });\n  return <GameClient {...props}/>\n};\n\nexport default LocalStorageRouter;\n","import {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport LocalStorageRouter from \"./LocalStorageRouter\";\r\n\r\nconst App = function(props) {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/:configId/edit\" component={LocalStorageRouter} />\r\n      <Route path=\"/:configId/game\" component={LocalStorageRouter} />\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/static/game\" />\r\n      </Route>\r\n      <Route exact path=\"/editor\">\r\n        <Redirect to=\"/static/edit\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}