{"version":3,"sources":["Constants.js","Util.js","Action.js","Event.js","Schedule.js","Status.js","Game.js","GameContext.js","component/GameInfo.jsx","component/Keyword.js","component/ActionArea.jsx","component/Board.jsx","component/GameEditor.jsx","App.js","reportWebVitals.js","index.js"],"names":["MAX_HAND_SIZE","STATIC_ROOT","process","DrawCard","G","ctx","hand","length","deck","discard","push","pop","BaseAction","displayName","image","description","moneyCost","energyCost","producesGrowthMindset","producesMoney","producesAttention","producesEnergy","drawsCards","discardsCards","gainsCards","forgetsOnDiscard","forgetsSelf","forgetsCards","perform","energy","growthMindsetPoints","Math","min","this","money","attention","i","cardsLeftToDiscard","events","setStage","cardsLeftToForget","forEach","c","buy","id","Actions","map","reduce","rv","x","ActionsPlugin","options","initialActions","name","setup","actions","api","data","getAction","actionId","BaseEvent","inspiredTurns","energizedTurns","addsCardsToShop","addsCardsToDiscardPile","apply","statuses","inspired","max","energized","card","actionShop","Events","Schedule","eventsByDay","turnNumber","eventId","SchedulePlugin","initialSchedule","initialEvents","schedule","getCurrentEvents","getEvents","turn","event","getEvent","addEvent","getRaw","INITIAL_SCHEDULE","0","2","BaseStatus","Statuses","INITIAL_BOARD","sort","currentEvent","backgroundImage","STARTS_TURN_WITH","Apex2021","setupData","moves","performAction","handIndex","action","INVALID_MOVE","splice","buyAction","shopIndex","getActions","endTurn","activePlayers","all","onBegin","console","log","endStage","remainingCard","cardsToDraw","Object","assign","entries","stat","dur","SetupNewTurn","onEnd","endGame","stages","showEvent","chooseOption","optionIndex","dismiss","discardAction","forget","forgetAction","GameContext","React","createContext","GROWTH_MINDSET_COLOR","1","3","4","5","GameInfo","useContext","Table","responsive","bordered","className","Badge","variant","ProgressBar","now","toPrecision","label","animated","CardOrCards","number","Description","props","runEffect","passthrough","useEffect","Tooltip","Keyword","value","tooltipClassName","OverlayTrigger","placement","overlay","descriptionProps","Discard","Draw","Forget","ForgetSelf","Gain","cardId","renderCard","onClick","s","BoostGrowthMindset","YOLO","ActionCardFromStaticActions","ActionCard","useState","isSelected","setIsSelected","ref","gameStage","runHolder","Card","onMouseEnter","onMouseLeave","bg","border","Header","Container","fluid","Row","Col","xs","Body","Title","Img","src","ListGroup","Item","Text","Footer","ActionList","actionsList","actionCards","slotId","CardColumns","ActionArea","noop","isDiscard","playOrderPos","isForget","actionData","tab","setTab","tabs","keys","areaType","Tab","eventKey","title","Tabs","activeKey","onSelect","k","Button","EventModal","show","onHide","ev","styles","backgroundRepeat","backgroundSize","Modal","size","style","centered","Assets","assets","values","Loading","count","total","percent","startGame","Board","isLoading","setIsLoading","assetsToLoad","useReducer","state","type","Error","loadingState","dispatch","preload","a","Promise","resolve","reject","img","Image","onload","onerror","promises","Provider","unCamelCase","input","replace","toUpperCase","EntityEditor","updateActions","updateEvents","entityId","entity","entities","updaters","field","e","newValue","target","parseInt","checked","item","updatedEntities","formGroups","filter","Form","Control","defaultValue","onChange","_","debounce","Check","indexOf","relations","selectedValues","onRemove","displayValue","Group","as","controlId","Label","column","sm","ActionsTab","navs","Nav","Link","cards","Pane","defaultActiveKey","newActionId","updatedActions","Content","EventsTab","eventPanes","newEventId","updatedEvents","ScheduleTab","updateSchedule","Array","scheduleUpdater","schedulePanes","l","TestChanges","saveFiles","updateSaveFiles","newSaveFileName","updateNewSaveFileName","json","localStorage","getItem","knownSaves","JSON","parse","stringify","setItem","newSave","newSaveId","timestamp","Date","newSaveRow","saveRows","saveId","saveFile","toLocaleString","saveToLoad","doLoad","navigator","clipboard","writeText","doCopy","to","reverse","striped","hover","GameEditor","ConfigurableGameClient","match","setActions","setEvents","setSchedule","params","configId","game","plugins","GameClient","Client","board","numPlayers","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b7d2e44e.chunk.js","sourcesContent":["export const MAX_HAND_SIZE = 8;\nexport const MAX_GROWTH_MINDSET = 5;\nexport const STATIC_ROOT = process.env.PUBLIC_URL;\nexport const MAX_TURN_COUNT = 48;\n","import { MAX_HAND_SIZE } from \"./Constants\";\n\n// A weighted set of outcomes.\n// The key represents the lowest roll of a 20-sided dice that will result in that outcome.\n// Example: {\n//  0: [], // 50%\n//  10: [BadEvent], // 45%\n//  19: [CatastrophicEvent], // 5%\n// }\n//\n// Generate no events by default.\nexport const RollOutcome = function(roll, weightedOutcomes) {\n  const threshold = roll - 1;\n\tconst rollIndices = Object.keys(weightedOutcomes).map(k => parseInt(k));\n  const selectedIndex = rollIndices.find(k => threshold >= k);\n\treturn weightedOutcomes[\"\" + selectedIndex];\n};\n\nexport const DrawCard = function(G, ctx) {\n  if (G.hand.length >= MAX_HAND_SIZE) {\n    return false;\n  }\n  if (G.deck.length <= 0) {\n    while (G.discard.length > 0) {\n      G.deck.push(G.discard.pop());\n    }\n  }\n  // If the deck is still empty, no draw.\n  if (G.deck.length <= 0) {\n    return false;\n  }\n  G.hand.push(G.deck.pop());\n  return true;\n}\n","import { MAX_GROWTH_MINDSET, MAX_HAND_SIZE } from './Constants';\nimport { DrawCard } from './Util';\n\n\nexport const BaseAction = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  moneyCost: 0,\n  energyCost: 0,\n  producesGrowthMindset: 0,\n  producesMoney: 0,\n  producesAttention: 0,\n  producesEnergy: 0,\n  drawsCards: 0,\n  discardsCards: 0,\n  gainsCards: [],\n  forgetsOnDiscard: false,\n  forgetsSelf: false,\n  forgetsCards: 0,\n  // TODO: This is \"inheritance\" without any protection. Bad idea.\n  perform: function(G, ctx) {\n    // First check if we can afford the move.\n    if (G.energy <= 0) {\n      return false;\n    }\n    // Pay for the action.\n    G.energy--;\n    G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + this.producesGrowthMindset);\n    G.money += this.producesMoney;\n    G.attention += this.producesAttention;\n    G.energy += this.producesEnergy;\n    for (let i = 0; i < this.drawsCards; i++) {\n      DrawCard(G, ctx);\n    }\n    if (this.discardsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToDiscard = this.discardsCards;\n      ctx.events.setStage('discard');\n    }\n    if (this.forgetsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToForget = this.forgetsCards;\n      ctx.events.setStage('forget');\n    }\n    this.gainsCards.forEach((c) => G.discard.push(c));\n    return true;\n  },\n  buy: function(G, ctx) {\n    if (G.attention <= 0 || G.money < this.moneyCost || G.energy < this.energyCost) {\n      return false;\n    }\n    // Pay for the action.\n    G.attention--;\n    G.money -= this.moneyCost;\n    G.energy -= this.energyCost;\n    G.discard.push(this.id);\n    return true;\n  },\n};\n\nconst actionList = [\n  {\n    id: \"Card01\",\n    displayName: \"Card1\",\n    description: \"Make sure to play this every turn!\",\n    producesGrowthMindset: 1,\n  },\n  {\n    id: \"Card02\",\n    displayName: \"Card2\",\n    description: \"Getting money lets you buy stuff.\",\n    producesMoney: 1,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card03\",\n    displayName: \"Card3\",\n    description: \"Sometimes you just want to forget everything.\",\n    moneyCost: 2,\n    forgetsSelf: true,\n    forgetsCards: MAX_HAND_SIZE,\n  },\n  {\n    id: \"Card04\",\n    displayName: \"Card4\",\n    description: \"If you play this, you'll have to pick another card in your hand to discard.\",\n    moneyCost: 2,\n    drawsCards: 3,\n    discardsCards: 1,\n  },\n  {\n    id: \"Card05\",\n    displayName: \"Card5\",\n    description: \"Doing too much can make you tired.\",\n    moneyCost: 2,\n    producesGrowthMindset: 1,\n    producesMoney: 1,\n    producesEnergy: 1,\n    drawsCards: 1,\n    gainsCards: [\"fatigue\"],\n  },\n  {\n    id: \"Card06\",\n    displayName: \"Card6\",\n    description: \"More energy means you can play more actions!\",\n    moneyCost: 3,\n    producesEnergy: 2,\n    drawsCards: 1,\n  },\n  {\n    id: \"Card07\",\n    displayName: \"Card7\",\n    description: \"IDK\",\n    moneyCost: 3,\n  },\n  {\n    id: \"Card08\",\n    displayName: \"Card8\",\n    description: \"IDK\",\n    moneyCost: 4,\n  },\n  {\n    id: \"Card09\",\n    displayName: \"Card9\",\n    description: \"More money\",\n    moneyCost: 4,\n    producesMoney: 2,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card10\",\n    displayName: \"Card10\",\n    description: \"That's a lot of energy.\",\n    moneyCost: 4,\n    producesAttention: 1,\n    producesEnergy: 4,\n  },\n  {\n    id: \"Card11\",\n    displayName: \"Card11\",\n    description: \"Maybe there are better options.\",\n    moneyCost: 5,\n    producesEnergy: 1,\n    drawsCards: 2,\n  },\n  {\n    id: \"Card12\",\n    displayName: \"Card12\",\n    description: \"More more money\",\n    moneyCost: 6,\n    producesMoney: 3,\n    producesEnergy: 1,\n  },\n  {\n    id: \"fatigue\",\n    displayName: \"Fatigue\",\n    description: \"Better rest up or I'll just get even more tired later.\",\n    forgetsSelf: true,\n  },\n  {\n    id: \"summerHomework\",\n    displayName: \"Summer Homework\",\n    description: \"So tedious...\",\n    producesGrowthMindset: 1,\n    forgetsSelf: true,\n    forgetsOnDiscard: true,\n  },\n].map(c => ({\n  ...BaseAction,\n  ...c,\n}));\n\nconst Actions = actionList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport const ActionsPlugin = (options) => {\n  const {\n    initialActions,\n  } = options;\n  return {\n    name: \"actions\",\n    setup: () => ({\n      actions: initialActions,\n    }),\n    api: ({ctx, data}) => ({\n      getAction: (actionId) => ({\n        // Re-hydrate functions for use in Game logic.\n        ...BaseAction,\n        ...data.actions[actionId]\n      })\n    }),\n  };\n};\n\nexport default Actions;\n","export const BaseEvent = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  inspiredTurns: 0,\n  energizedTurns: 0,\n  addsCardsToShop: [],\n  addsCardsToDiscardPile: [],\n  apply: function(G, ctx) {\n    // TBD: Events can potentially have choices that spawn other events later.\n    if (this.inspiredTurns > 0) {\n      G.statuses.inspired = Math.max((G.statuses.inspired || 0), this.inspiredTurns);\n    }\n    if (this.energizedTurns > 0) {\n      G.statuses.energized = Math.max((G.statuses.energized || 0), this.energizedTurns);\n    }\n    for (let card of this.addsCardsToShop) {\n      G.actionShop.push(card);\n    }\n    for (let card of this.addsCardsToDiscardPile) {\n      G.discard.push(card);\n    }\n  }\n};\n\nconst eventList = [\n  {\n    id: \"SummerStart\",\n    image: \"middle_school_graduation.png\",\n    displayName: \"Congratulations\",\n    description: \"After a long year, you've finally graduated from middle school.\",\n    inspiredTurns: 2, // No growth mindset lost.\n    energizedTurns: 2, // One extra energy per turn.\n    addsCardsToDiscardPile: [\n      \"summerHomework\",\n      \"summerHomework\",\n      \"Card01\",\n    ],\n  },\n  {\n    id: \"SchoolStart\",\n    displayName: \"High School Begins\",\n    description: \"And just like that High School begins.\",\n    image: \"welcome_back.png\",\n    addsCardsToDiscardPile: [\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card01\",\n      \"Card01\",\n    ],\n    addsCardsToShop: [\n      \"Card02\",\n      \"Card02\",\n      \"Card04\",\n      \"Card05\",\n    ],\n  },\n].map(c => ({\n  ...BaseEvent,\n  ...c,\n}));\n\nconst Events = eventList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Events;\n","import { BaseEvent } from \"./Event\";\n\nexport class Schedule {\n  eventsByDay:object;\n\n  constructor(eventsByDay: object) {\n    this.eventsByDay = eventsByDay || {};\n  }\n\n  addEvent(turnNumber: number, eventId: string):void {\n    if (!(turnNumber in this.eventsByDay)) {\n      this.eventsByDay[turnNumber] = [];\n    }\n    this.eventsByDay[turnNumber].push(eventId);\n  }\n\n  getEvents(turnNumber: number):Array<string> {\n    if (turnNumber in this.eventsByDay) {\n      return this.eventsByDay[turnNumber]\n    }\n    return [];\n  }\n}\n\nexport const SchedulePlugin = (options) => {\n  const {\n    initialSchedule,\n    initialEvents,\n  } = options;\n  return {\n    name: \"schedule\",\n    setup: () => ({\n      schedule: initialSchedule,    \n      events: initialEvents,\n    }),\n    api: ({ctx, data}) => ({\n      getCurrentEvents: function():Array<object> {\n        return new Schedule(data.schedule)\n          .getEvents(ctx.turn)\n          .map((eventId)=>({\n            id:eventId,\n            event: this.getEvent(eventId),\n          }));\n      },\n      addEvent: (turnNumber, eventId) => {\n        new Schedule(data.schedule).addEvent(turnNumber, eventId);\n      },\n      getEvent: (eventId) => ({\n        // Re-hydrate functions for use in the Game engine.\n        ...BaseEvent,\n        ...data.events[eventId]\n      }),\n      getRaw: () => {\n        return data;\n      }\n    }),\n  }\n}\n\nexport const INITIAL_SCHEDULE = {\n    0: [\"SummerStart\"],\n    2: [\"SchoolStart\"],\n};\n\nexport default Schedule;\n","import { MAX_GROWTH_MINDSET } from \"./Constants\";\n\nexport const BaseStatus = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  apply: function(G, ctx) { }\n};\n\nconst statusList = [\n  {\n    id: \"energized\",\n    displayName: \"Energized\",\n    description: \"Gain an extra energy at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.energy += 1;\n    },\n  },\n  {\n    id: \"inspired\",\n    displayName: \"Inspired\",\n    description: \"Nullify the usual loss of growth mindset at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + 1);\n    },\n  },\n].map(c => ({\n  ...BaseStatus,\n  ...c,\n}));\n\nconst Statuses = statusList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Statuses;\n","import { INVALID_MOVE } from 'boardgame.io/core';\n\nimport Statuses from './Status';\n\nimport {\n  DrawCard\n} from './Util';\n\nconst INITIAL_BOARD = {\n  actionShop: [\n    /*\n    ...Array(2).fill(\"Card02\"),\n    ...Array(1).fill(\"Card06\"),\n    ...Array(2).fill(\"Card09\"),\n    ...Array(1).fill(\"Card10\"),\n    ...Array(1).fill(\"Card12\"),\n    ...(Object.keys(Actions).filter((c)=>Actions[c].isBuyable))\n    */\n  ].sort(),\n  deck: [\n    /*\n    // Turn 2. Will require some sacrifice.\n    \"Card02\", \"Card01\",\n    // Turn 1.\n    \"Card02\", \"Card02\", \"Card01\",\n    */\n  ],\n  hand: [],\n  discard: [],\n  growthMindsetPoints: 1,\n  cardsLeftToDiscard: 0,\n  cardsLeftToForget: 0,\n  statuses: {},\n  currentEvent: null,\n  backgroundImage: null,\n};\n\nconst STARTS_TURN_WITH = {\n  money: 0,\n  attention: 1,\n  energy: 1,\n};\n\nfunction SetupNewTurn(G, ctx) {\n  // First process any events.\n  console.log(ctx);\n  const events = ctx.schedule.getCurrentEvents();\n  console.log(events);\n  events.forEach(({id, event}) => {\n    event.apply(G, ctx);\n    G.currentEvent = id;\n  });\n  if (events.length === 0) {\n    // Don't bother with the Events UI if there's no events.\n    ctx.events.endStage();\n  }\n  // Discard the remainder of your hand.\n  while (G.hand.length > 0) {\n    let remainingCard = G.hand.pop();\n    if (!ctx.actions.getAction(remainingCard).forgetsOnDiscard) {\n      // You only get one chance to play certain kinds of cards.\n      G.discard.push(remainingCard);\n    }\n  }\n  const cardsToDraw = Math.min(5, G.growthMindsetPoints);\n  for (let i = 0; i < cardsToDraw; i++) {\n    DrawCard(G, ctx);\n  }\n  Object.assign(G, STARTS_TURN_WITH);\n  G.growthMindsetPoints--;\n\n  // Apply status effects last.\n  for (let [stat, dur] of Object.entries(G.statuses)) {\n    console.log(stat, dur);\n    if (dur > 0) {\n      Statuses[stat].apply(G, ctx);\n      G.statuses[stat]--;\n    } else {\n      delete G.statuses[stat];\n    }\n  }\n}\n\nexport const Apex2021 = {\n  setup: (ctx, setupData) => ({\n    ...INITIAL_BOARD,\n    ...STARTS_TURN_WITH\n  }),\n  moves: {\n    performAction: (G, ctx, handIndex) => {\n      const actionId = G.hand[handIndex];\n      const action = ctx.actions.getAction(actionId);\n      if (!action.perform(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      G.hand.splice(handIndex, 1);\n      if (!action.forgetsSelf) {\n        G.discard.push(actionId);\n      }\n    },\n    buyAction: (G, ctx, shopIndex) => {\n      const actionId = G.actionShop[shopIndex];\n      const action = ctx.actions.getActions(actionId);\n      if (!action.buy(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      G.actionShop.splice(shopIndex, 1);\n    },\n    endTurn: (G, ctx) => {\n      ctx.events.endTurn();\n    },\n  },\n  turn: {\n    activePlayers: { all: \"showEvent\" },\n    onBegin: (G, ctx) => ( SetupNewTurn(G, ctx) ),\n    onEnd: (G, ctx) => {\n      if (G.growthMindsetPoints <= 0) {\n         ctx.events.endGame(\"fixed-mindset\");\n      }\n      //return G;\n    },\n    stages: {\n      showEvent: {\n        moves: {\n          chooseOption: (G, ctx, optionIndex) => {\n            // TBD: Events don't have any choices yet.\n          },\n          dismiss: (G, ctx) => {\n            G.backgroundImage = ctx.schedule.getEvent(G.currentEvent).image;\n            G.currentEvent = null;\n            ctx.events.endStage();\n          },\n        },\n      },\n      discard: {\n        moves: {\n          discardAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToDiscard);\n            const actionId = G.hand[handIndex];\n            G.hand.splice(handIndex, 1);\n            G.discard.push(actionId);\n            if (G.hand.length === 0) {\n              G.cardsLeftToDiscard = 0;\n            } else {\n              G.cardsLeftToDiscard--;\n            }\n            if (G.cardsLeftToDiscard <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      },\n      forget: {\n        moves: {\n          forgetAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToForget);\n            G.hand.splice(handIndex, 1);\n            if (G.hand.length === 0) {\n              G.cardsLeftToForget = 0;\n            } else {\n              G.cardsLeftToForget--;\n            }\n            if (G.cardsLeftToForget <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      }\n    }\n  },\n};\n","import React from 'react';\n\nconst GameContext = React.createContext({});\n\nexport default GameContext;\n","import React, {\n  useContext,\n} from \"react\";\n\nimport {\n  Badge,\n  ProgressBar,\n  Table,\n} from \"react-bootstrap\";\n\nimport { MAX_GROWTH_MINDSET } from \"../Constants\";\nimport GameContext from \"../GameContext\";\n\nconst GROWTH_MINDSET_COLOR = {\n  0: \"danger\",\n  1: \"danger\",\n  2: \"danger\",\n  3: \"warning\",\n  4: \"success\",\n  5: \"info\",\n};\n\n\nfunction GameInfo() {\n  const {\n    G,\n    ctx,\n  } = useContext(GameContext);\n  const {\n    growthMindsetPoints,\n    money,\n    attention,\n    energy\n  } = G;\n  return (\n    <Table responsive bordered id=\"player-info\">\n      <thead>\n        <tr className=\"info-label-row\">\n          <th>Day #</th>\n          <th>Growth Mindset</th>\n          <th>Money</th>\n          <th>Attention</th>\n          <th>Energy</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"info-data-row\">\n          <td><Badge variant=\"dark\">{ctx.turn}</Badge></td>\n          <td>\n            <ProgressBar\n              now={(growthMindsetPoints * 100.0 /MAX_GROWTH_MINDSET).toPrecision(3)}\n              label={growthMindsetPoints}\n              variant={GROWTH_MINDSET_COLOR[growthMindsetPoints]}\n              animated={growthMindsetPoints === MAX_GROWTH_MINDSET}\n            />\n          </td>\n          <td><Badge variant=\"warning\">{money}</Badge></td>\n          <td><Badge variant=\"primary\">{attention}</Badge></td>\n          <td><Badge variant=\"success\">{energy}</Badge></td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GameInfo;\n","import React, {\n  useEffect,\n  useContext,\n} from \"react\";\n\nimport {\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport GameContext from \"../GameContext\";\n\nfunction CardOrCards(number) {\n  return \"\" + number + \" \" + (number > 1 ? \"cards\" : \"card\");\n}\n\nexport const Description = (props) => {\n  const { description, runEffect, className, passthrough } = props;\n  useEffect(\n    () => {\n      if (runEffect) {\n        runEffect();\n      }\n    }\n  );\n  return (\n    <Tooltip id=\"keyword-description\" className={className} {...passthrough}>\n      {description}\n    </Tooltip>\n  );\n};\n\nexport const Keyword = (props) => {\n  const { value, description, tooltipClassName, runEffect } = props;\n  const renderDescription = (descriptionProps) => (\n    <Description\n      description={description}\n      className={tooltipClassName}\n      runEffect={runEffect}\n      passthrough={descriptionProps}\n    />\n  );\n  return (\n    <OverlayTrigger\n      placement=\"right\"\n      overlay={renderDescription}\n    >\n      <span className=\"card-keyword\">{value}</span>\n    </OverlayTrigger>\n  );\n};\n\nexport const Discard = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Discard \" + number}\n      description={\"Place cards from your hand into your discard pile until you have placed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const Draw = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Draw \" + number}\n      description={\"Place \" + CardOrCards(number) + \" from your deck into your hand. If your deck is empty, your discard pile will automatically be shuffled into your deck.\"}\n    />\n  );\n};\n\nexport const Forget = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Forget \" + number}\n      description={\"Permanently remove cards from your hand until you have removed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const ForgetSelf = () => {\n  return (\n    <Keyword\n      value={\"Forget Self\"}\n      description={\"Permanently remove this card from your hand upon being played.\"}\n    />\n  );\n};\n\nexport const Gain = (props) => {\n  const { cardId, renderCard, tooltipClassName, runEffect } = props;\n  const {\n    actions\n  } = useContext(GameContext);\n  const card = renderCard({\n    cardId: cardId,\n    onClick: s=>{},\n    ...actions[cardId],\n  });\n  return (\n    <Keyword\n      value={\"Gain \" + actions[cardId].displayName}\n      description={card}\n      tooltipClassName={tooltipClassName}\n      runEffect={runEffect}\n    />\n  );\n};\n\nexport const BoostGrowthMindset = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"+\" + number + \" Growth Mindset\"}\n      description={\"Growth Mindset represents the number of cards you can draw at the beginning of the next turn. You lose one point per turn, and Growth Mindset is capped at 5.\"}\n    />\n  );\n};\n\nexport const YOLO = (props) => {\n  return (\n    <Keyword\n      value={\"#YOLO\"}\n      description={\"If this card remains in your hand at the end of the turn, it will be permanently removed from your deck.\"}\n    />\n  );\n};\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Badge,\n  Button,\n  Container,\n  Col,\n  Card,\n  CardColumns,\n  ListGroup,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\n\nimport { run as runHolder } from 'holderjs/holder';\nimport GameContext from \"../GameContext\";\nimport {\n  BoostGrowthMindset,\n  Discard,\n  Draw,\n  Forget,\n  ForgetSelf,\n  Gain,\n  YOLO,\n} from \"./Keyword\";\n\nfunction ActionCardFromStaticActions(props) {\n  const { cardId } = props;\n  const {\n    actions,\n  } = useContext(GameContext);\n  console.log(actions);\n  return <ActionCard {...props} {...actions[cardId]} />\n}\n\nexport function ActionCard(props) {\n  const [isSelected, setIsSelected] = useState(false);\n  const {\n    onClick,\n    ref,\n    gameStage,\n    displayName,\n    image,\n    description,\n    moneyCost,\n    energyCost,\n    producesGrowthMindset,\n    producesMoney,\n    producesAttention,\n    producesEnergy,\n    drawsCards,\n    discardsCards,\n    gainsCards,\n    forgetsOnDiscard,\n    forgetsSelf,\n    forgetsCards,\n  } = props;\n  // Hack to render sized placeholder before we have assets.\n  useEffect(() => {\n    runHolder(\"card-image\");\n  });\n\n  return (\n    <Card\n      ref = {ref}\n      onClick={onClick}\n      onMouseEnter={() => setIsSelected(true)}\n      onMouseLeave={() => setIsSelected(false)}\n      bg={gameStage === \"discard\" || gameStage === \"forget\" ? \"danger\" : null}\n      border={isSelected ? \"warning\" : \"secondary\"}\n      className=\"action-card\"\n    >\n      <Card.Header>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Makes:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {producesMoney}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"primary\">\n                {producesAttention}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {producesEnergy}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{displayName}</Card.Title>\n        <Card.Img src={image != null ? image : \"holder.js/256x128\"} className=\"card-image\"/>\n        <ListGroup className=\"extra-rules\">\n          { \n            (producesGrowthMindset > 0) && (\n              <ListGroup.Item key=\"growth-mindset\"><BoostGrowthMindset number={producesGrowthMindset}/></ListGroup.Item>\n            )\n          }\n          { \n            (drawsCards > 0) && (\n              <ListGroup.Item key=\"draws-cards\"><Draw number={drawsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (discardsCards > 0) && (\n              <ListGroup.Item key=\"discards-cards\"><Discard number={discardsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsOnDiscard) && (\n              <ListGroup.Item key=\"forgets-on-discard\"><YOLO/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsSelf) && (\n              <ListGroup.Item key=\"forgets-self\"><ForgetSelf/></ListGroup.Item>\n            )\n          }\n          { \n            (forgetsCards > 0) && (\n              <ListGroup.Item key=\"forgets-cards\"><Forget number={forgetsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            gainsCards.map((cardId) =>\n              <ListGroup.Item key={\"gains-\" + cardId}>\n                <Gain\n                  cardId={cardId}\n                  renderCard={ActionCard}\n                  tooltipClassName=\"card-preview\"\n                  runEffect={()=>runHolder(\"card-image\")}\n                />\n              </ListGroup.Item>\n            )\n          }\n        </ListGroup>\n        <Card.Text className=\"flavor\">\n          {description}\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Costs:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {moneyCost}\n              </Badge>\n            </Col>\n            <Col xs={1}/>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {energyCost}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction ActionList(props) {\n  const { actionsList, className, onClick, gameStage } = props;\n  const actionCards = actionsList.map((actionId, slotId) => (\n    <ActionCardFromStaticActions\n      cardId={actionId}\n      key={slotId}\n      onClick={() => onClick(slotId)}\n      gameStage={gameStage} />\n  ));\n  return (\n    <CardColumns className={\"action-list-\" + className}>\n      {actionCards.length > 0 ? actionCards :\n        <Badge><h1>No Actions Available</h1></Badge>}\n    </CardColumns>\n  );\n}\n\nfunction ActionArea() {\n  const {\n    G,\n    ctx,\n    moves,\n  } = useContext(GameContext);\n  const {\n    hand,\n    actionShop,\n    deck,\n    discard,\n  } = G;\n  const noop = (x) => {};\n  const isDiscard = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"discard\";\n  const isForget = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"forget\";\n  const gameStage = isDiscard ? \"discard\" : isForget ? \"forget\" : null;\n  const actionData = {\n    \"Hand\": {\n      actions: hand,\n      onClick: isDiscard ? moves.discardAction: isForget ? moves.forgetAction : moves.performAction\n    },\n    \"Shop\": {\n      actions: actionShop,\n      onClick: isDiscard ? noop : moves.buyAction\n    },\n    \"Deck\": {\n      actions: [...deck].sort(), // Hide the order of the cards.\n      onClick: noop\n    },\n    \"Discard Pile\": {\n      actions: discard,\n      onClick: noop\n    },\n  };\n  const [tab, setTab] = useState(\"Hand\");\n  const tabs = Object.keys(actionData).map((areaType) => (\n    <Tab eventKey={areaType} title={areaType} key={areaType}>\n      <ActionList\n        actionsList={actionData[areaType].actions}\n        onClick={actionData[areaType].onClick}\n        className={areaType}\n        gameStage={gameStage}\n      />\n    </Tab>\n  ));\n  return (\n    <div id=\"game-tabs\">\n      <Tabs id=\"actions\" activeKey={tab} onSelect={(k)=>setTab(k)}>\n        {tabs}\n        <Tab eventKey=\"next-turn\" title=\"Next Turn\" key=\"next-turn\">\n          <Button\n            onClick={() => {\n              moves.endTurn();\n              setTab(\"Hand\");\n            }}\n            className=\"confirm-next-turn\"\n          >\n            Confirm End Turn\n          </Button>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default ActionArea;\n","import React, {\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\n\nimport {\n  Button,\n  Container,\n  Col,\n  Modal,\n  Row,\n  ProgressBar,\n} from \"react-bootstrap\";\n\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nimport GameContext from \"../GameContext\";\nimport GameInfo from \"./GameInfo\";\nimport ActionArea from \"./ActionArea\";\n\nfunction EventModal(props) {\n  const {\n    G,\n    moves,\n    events,\n  } = useContext(GameContext);\n  const show = G.currentEvent in events;\n  if (!show) {\n    return <></>;\n  }\n  const onHide = () => moves.dismiss();\n  const ev = events[G.currentEvent];\n  const {\n    displayName,\n    description,\n    image,\n  } = ev;\n  const styles = {\n    backgroundImage: image == null ? null : `url(${STATIC_ROOT}/${image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n  };\n  return (\n    <Modal\n      size = \"lg\"\n      show = {show}\n      onHide = {onHide}\n      style = {styles} \n      className = \"event-modal\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title>\n          {displayName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {description}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>Continue</Button>\n      </Modal.Footer>\n    </Modal>\n  ); \n}\n\nconst Assets = function(actions, events) {\n  const assets = {}; \n  for (let action of Object.values(assets)) {\n    if (action.image !== null) {\n      assets[action.image] = \"img\";\n    }\n  }\n  for (let ev of Object.values(events)) {\n    if (ev.image !== null) {\n      assets[ev.image] = \"img\";\n    }\n  }\n  return assets;\n}\n\nconst Loading = function(props) {\n  const {\n    count,\n    total,\n    percent,\n    startGame\n  } = props;\n  return (\n    <div id=\"loading\">\n      <ProgressBar now={percent}/>\n      <hr/>\n      <p>\n        {\n          count < total ? (\n            `Loaded ${count}/${total} assets...`\n          ) : (\n            <Button onClick={startGame}>New Game</Button>\n          )\n        }\n      </p>\n    </div>\n  )\n};\n\nconst Board = function(props) {\n  const {\n    G,\n    ctx,\n    moves,\n  } = props;\n\n  // Pull these in from plugins instead.\n  const {\n    actions,\n    events\n  } = useContext(GameContext);\n\n  // Pattern ripped from\n  // https://jack72828383883.medium.com/ff1642708240\n  const [isLoading, setIsLoading] = useState(true);\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"increment\":\n        return {\n          count: state.count + 1,\n          total: state.total,\n          percent: (100.0 * (state.count + 1) / state.total)\n        };\n      default:\n        throw new Error(`Unsupported action type ${action.type}`);\n    }\n  };\n  const assetsToLoad = Assets(actions, events);\n  const [loadingState, dispatch] = useReducer(reducer, {\n    count: 0,\n    total: Object.keys(assetsToLoad).length,\n    percent: 0,\n  });\n  const preload = async (assets: object) => {\n    const promises = await Object.keys(assets).map((src) => {\n      return new Promise(function (resolve, reject) {\n        const assetType = assets[src];\n        if (assetType === \"img\") {\n          const img = new Image();\n          img.src = `${STATIC_ROOT}/${src}`;\n          img.onload = () => {\n            // Incrementally update progress bar.\n            dispatch({type: \"increment\"});\n            console.log(`Loaded ${img.src}`);\n            resolve(img);\n          };\n          img.onerror = () => {\n            reject(`Could not load ${img.src}`);\n          };\n        }\n      });\n    });\n    await Promise.all(promises);\n  };\n  useEffect(() => {\n    preload(Assets(actions, events));\n  }, [actions, events]);\n  const {\n    backgroundImage\n  } = G;\n  const styles = {\n    backgroundImage: backgroundImage == null ? null : `url(${STATIC_ROOT}/${backgroundImage})`,\n    backgroundSize: \"cover\",\n  };\n  if (isLoading) {\n    // TODO: In theory we should introduce an intermediate \"loaded-but-not-started\" state.\n    return <Loading startGame={() => setIsLoading(false)} {...loadingState} />;\n  }\n  // Game has started.\n  return (\n    <GameContext.Provider value={{\n      G: G,\n      ctx: ctx,\n      moves: moves,\n      actions: actions,\n      events: events,\n    }}>\n      <div style={styles} id=\"bg-container\"/>\n      <div id=\"game-wrapper\">\n        <Container fluid id=\"game-container\">\n          <Row>\n            <Col>\n              <GameInfo/> \n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <ActionArea/>\n            </Col>\n          </Row>\n        </Container>\n        <EventModal/>\n      </div>\n    </GameContext.Provider>\n  );\n}\n\nexport default Board;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport _ from \"lodash\";\n\nimport {\n  Button,\n  Col,\n  Form,\n  Nav,\n  OverlayTrigger,\n  Row,\n  Tab,\n  Table,\n  Tabs,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport {\n  Multiselect,\n} from \"multiselect-react-dropdown\";\n\nimport GameContext from \"../GameContext\";\nimport { MAX_TURN_COUNT } from \"../Constants\";\nimport { ActionCard } from \"./ActionArea\";\nimport Actions, { BaseAction } from \"../Action\";\nimport Events, { BaseEvent } from \"../Event\";\nimport { INITIAL_SCHEDULE } from \"../Schedule\";\n\n// Cute hack from https://gist.github.com/mattwiebe/1005915\nfunction unCamelCase(input){return input.replace(/([a-z])([A-Z])/g,'$1 $2').replace(/\\b([A-Z]+)([A-Z])([a-z])/,'$1 $2$3').replace(/^./,function(s){return s.toUpperCase();})}\n\nfunction EntityEditor(props) {\n  const { actionId, eventId } = props;\n  const {\n    actions, updateActions,\n    events, updateEvents,\n  } = useContext(GameContext);\n  const entityId = actionId ? actionId : eventId;\n  const entity = actionId ? actions[actionId] : events[eventId];\n  const entities = actionId ? actions : events;\n  const updaters = {};\n\n  for (let field of Object.keys(entity)) {\n    updaters[field] = (e) => {\n      const oldValue = entities[entityId][field];\n      let newValue;\n      switch (typeof(oldValue)) {\n        case \"string\":\n          newValue = e.target.value;\n          break;\n        case \"number\":\n          newValue = parseInt(e.target.value);\n          break;\n        case \"boolean\":\n          newValue = e.target.checked;\n          break;\n        case \"object\":\n          newValue = e.map((item)=>item.id);\n          break;\n        default:\n          throw new Error(`Don't know how to serialize ${field} for value ${e.target.value}`);\n      }\n      const updatedEntities = {\n        ...entities,\n        ...{\n          [entityId]: {\n            ...entities[entityId],\n            [field]: newValue\n          }\n        }\n      };\n      const updateEntities = actionId ? updateActions : updateEvents;\n      updateEntities(updatedEntities);\n    }\n  }\n  const formGroups = Object.entries(entity)\n    .filter(([field, value]) => (\n      value !== null &&\n      typeof(value) !== \"function\" &&\n      // TODO: Support image uploading.\n      field !== \"image\" &&\n      // TODO: Support re-identifying.\n      field !== \"id\"\n    ))\n    .map(([field, value]) => {\n      let input;\n      switch (typeof(value)) {\n        case \"string\":\n          input = (\n            <Form.Control\n              type=\"text\"\n              defaultValue={entity[field]}\n              onChange={_.debounce(updaters[field], 300)}\n            />\n          );\n          break;\n        case \"number\":\n          input = (\n            <OverlayTrigger\n              placement=\"left\"\n              overlay={<Tooltip>{entity[field]}</Tooltip>}\n            >\n              <Form.Control\n                type=\"range\"\n                defaultValue={entity[field]}\n                max={10}\n                onChange={_.debounce(updaters[field], 300)}\n              />\n            </OverlayTrigger>\n          );\n          break;\n        case \"boolean\":\n          input = (\n            <Form.Check\n              type=\"checkbox\"\n              defaultValue={entity[field]}\n              onChange={updaters[field]}\n            />\n          );\n          break;\n        case \"object\":\n          // TODO: Bogus check. Actually add a type schema.\n          if (field.indexOf(\"Cards\") >= 0) {\n            let relations = actions;\n            const options = Object.entries(relations).map(([id, value])=>({\n              name: value.displayName,\n              id: id\n            }));\n            const selectedValues = entity[field].map((id)=>({\n              name: relations[id].displayName,\n              id: id\n            }));\n            input = (\n              <Multiselect\n                id={`${entityId}.${field}`}\n                selectedValues={selectedValues}\n                onSelect={updaters[field]}\n                onRemove={updaters[field]}\n                options={options}\n                displayValue=\"name\"\n              />\n            );\n          } else {\n            throw new Error(`Unrecognized value ${value} for ${field}.`);\n          }\n          break;\n        default:\n          throw new Error(`Unrecognized value type ${value} for ${field}.`);\n      }\n      return (\n        <Form.Group as={Row} key={`edit-${field}`} controlId={`${entityId}.${field}`}>\n          <Form.Label column sm={4}>{unCamelCase(field)}</Form.Label>\n          <Col sm={8}>\n            {input}\n          </Col>\n        </Form.Group>\n      );\n    });\n  return <>\n      {formGroups}\n  </>\n}\n\nfunction ActionsTab(props) {\n  const {\n    actions,\n    updateActions,\n  } = useContext(GameContext);\n  const navs = Object.entries(actions).map(([id, action]) => (\n    <Nav.Item key={id}>\n      <Nav.Link eventKey={id}>{action.id}</Nav.Link>\n    </Nav.Item>\n  ));\n  const cards = Object.entries(actions).map(([id, action]) => (\n    <Tab.Pane eventKey={id} key={id}>\n      <div id=\"card-editor-card-container\">\n        <ActionCard cardId={id} onClick={()=>{}} {...action}/> \n      </div>\n      <EntityEditor actionId={id}/>\n    </Tab.Pane>\n  ));\n  const newAction = () => {\n    const newActionId = \"Card\" + (Object.keys(actions).length + 1);\n    const updatedActions = {\n      ...actions,\n      [newActionId] : {\n        ...BaseAction,\n        id: newActionId,\n        displayName: newActionId,\n      }\n    };\n    updateActions(updatedActions);\n  };\n  return (\n    <Tab.Container defaultActiveKey={Object.keys(actions)[0]}>\n      <Row>\n        <Col id=\"action-nav\" sm={2}>\n          <Nav variant=\"pills\" className=\"flex-column\">\n            {navs}\n            <Button onClick={newAction} variant=\"light\">+</Button>\n          </Nav>\n        </Col>\n        <Col sm={8}>\n          <Tab.Content>\n            {cards}\n          </Tab.Content>\n        </Col>\n      </Row>\n    </Tab.Container>\n  );\n}\n\nfunction EventsTab(props) {\n  const {\n    events,\n    updateEvents,\n  } = useContext(GameContext);\n  const navs = Object.entries(events).map(([id, event]) => (\n    <Nav.Item key={id}>\n      <Nav.Link eventKey={id}>{event.id}</Nav.Link>\n    </Nav.Item>\n  ));\n  const eventPanes = Object.entries(events).map(([id, event]) => (\n    <Tab.Pane eventKey={id} key={id}>\n      <EntityEditor eventId={id}/>\n    </Tab.Pane>\n  ));\n  const newEvent = () => {\n    const newEventId = \"Event\" + (Object.keys(events).length + 1);\n    const updatedEvents = {\n      ...events,\n      [newEventId] : {\n        ...BaseEvent,\n        id: newEventId,\n        displayName: newEventId,\n      }\n    };\n    updateEvents(updatedEvents);\n  };\n  return (\n    <Tab.Container defaultActiveKey={Object.keys(events)[0]}>\n      <Row>\n        <Col id=\"action-nav\" sm={2}>\n          <Nav variant=\"pills\" className=\"flex-column\">\n            {navs}\n            <Button onClick={newEvent} variant=\"light\">+</Button>\n          </Nav>\n        </Col>\n        <Col sm={8}>\n          <Tab.Content>\n            {eventPanes}\n          </Tab.Content>\n        </Col>\n      </Row>\n    </Tab.Container>\n  );\n}\n\nfunction ScheduleTab(props) {\n  const {\n    schedule,\n    updateSchedule,\n    events,\n  } = useContext(GameContext);\n  const navs = [...Array(MAX_TURN_COUNT).keys()].map((turn) => (\n    <Nav.Item key={turn}>\n      <Nav.Link eventKey={turn}>{\"Turn \" + (turn + 1)}</Nav.Link>\n    </Nav.Item>\n  ));\n  const scheduleUpdater = (turn, updatedEvents) => {\n    console.log(turn, updatedEvents);\n    updateSchedule({\n      ...schedule,\n      [turn]: updatedEvents.map((e) => e.id),\n    });\n  };\n  const options = Object.entries(events).map(([eventId, event]) => ({\n    id: eventId,\n    name: event.displayName,\n  }));\n  const schedulePanes = [...Array(MAX_TURN_COUNT).keys()].map((turn) => {\n    const selectedValues = (schedule[turn] || []).map((eventId) => ({\n      id: eventId,\n      name: events[eventId].displayName,\n    }));\n    return (\n      <Tab.Pane eventKey={turn} key={turn}>\n        <Multiselect\n          id={`${turn}.events`}\n          selectedValues={selectedValues}\n          onSelect={(l)=>scheduleUpdater(turn, l)}\n          onRemove={(l)=>scheduleUpdater(turn, l)}\n          options={options}\n          displayValue=\"name\"\n        />\n      </Tab.Pane>\n    );\n  });\n  return (\n    <Tab.Container defaultActiveKey={0}>\n      <Row>\n        <Col id=\"action-nav\" sm={2}>\n          <Nav variant=\"pills\" className=\"flex-column\">\n            {navs}\n          </Nav>\n        </Col>\n        <Col sm={8}>\n          <Tab.Content>\n            {schedulePanes}\n          </Tab.Content>\n        </Col>\n      </Row>\n    </Tab.Container>\n  );\n}\n\nfunction TestChanges(props) {\n  const {\n    actions,\n    updateActions,\n    events,\n    updateEvents,\n    schedule,\n    updateSchedule,\n  } = useContext(GameContext);\n  const [saveFiles, updateSaveFiles] = useState({});\n  const [newSaveFileName, updateNewSaveFileName] = useState(\"Some Name\");\n  useEffect(() => {\n    const json = localStorage.getItem(\"saveFiles\");\n    const knownSaves = JSON.parse(json);\n    if (knownSaves) {\n      updateSaveFiles(knownSaves);\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(saveFiles);\n    localStorage.setItem(\"saveFiles\", json);\n  }, [saveFiles]);\n  const newSave = () => {\n    const newSaveId = Object.keys(saveFiles).length;\n    const newSave = {\n        ...saveFiles,\n        [newSaveId]: {\n          name: newSaveFileName,\n          actions: actions,\n          events: events,\n          schedule: schedule,\n          timestamp: Date.now(),\n        }\n    };\n    updateSaveFiles(newSave);\n  };\n  const doLoad = (saveId) => {\n    // Always save before loading.\n    newSave();\n    const saveToLoad = saveFiles[saveId];\n    updateActions(saveToLoad.actions);\n    updateEvents(saveToLoad.events);\n    updateSchedule(saveToLoad.schedule);\n  };\n  const doCopy = (saveId) => {\n    navigator.clipboard.writeText(JSON.stringify(saveFiles[saveId]));\n  };\n  const newSaveRow = (\n    <tr id=\"unsaved-row\" key=\"unsaved-row\">\n      <td>{Object.keys(saveFiles).length}</td>\n      <td>\n        <Form.Control\n          type=\"text\"\n          value={newSaveFileName}\n          onChange={(ev) => updateNewSaveFileName(ev.target.value)}\n        />\n      </td>\n      <td>Now</td>\n      <td><Button onClick={newSave}>Save</Button></td>\n      <td>Save to export</td>\n      <td>Save to launch</td>\n    </tr>\n  );\n  const saveRows = Object.entries(saveFiles).map(([saveId, saveFile]) => (\n    <tr key={`save-${saveId}`}>\n      <td>{saveId}</td>\n      <td>{saveFile.name}</td>\n      <td>{new Date(saveFile.timestamp).toLocaleString()}</td>\n      <td><Button onClick={()=>doLoad(saveId)}>Load</Button></td>\n      <td><Button onClick={()=>doCopy(saveId)}>Copy to Clipboard</Button></td>\n      <td><Link to={`/load-config/${saveId}`} target=\"_blank\">Launch Game</Link></td>\n    </tr>\n  )).reverse();\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Name</th>\n          <th>Date</th> \n          <th>Save/Load</th>\n          <th>Export</th> \n          <th>Launch</th> \n        </tr>\n      </thead>\n      <tbody>\n        {newSaveRow}\n        {saveRows}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction GameEditor(props) {\n  const [ actions, updateActions ] = useState({...Actions});\n  const [ events, updateEvents ] = useState({...Events});\n  const [ schedule, updateSchedule ] = useState({...INITIAL_SCHEDULE});\n  return (\n    <GameContext.Provider value={{\n      actions: actions, updateActions: updateActions,\n      events: events, updateEvents: updateEvents,\n      schedule: schedule, updateSchedule: updateSchedule,\n    }}>\n      <Tabs id=\"editor-root\" defaultActiveKey=\"actions\">\n        <Tab eventKey=\"actions\" title=\"Actions\" key=\"edit-actions\">\n          <ActionsTab/>\n        </Tab>\n        <Tab eventKey=\"events\" title=\"Events\" key=\"edit-events\">\n          <EventsTab/>\n        </Tab>\n        <Tab eventKey=\"schedule\" title=\"Schedule\" key=\"edit-schedule\">\n          <ScheduleTab/>\n        </Tab>\n        <Tab eventKey=\"test\" title=\"Test Changes\" key=\"test\">\n          <TestChanges/>\n        </Tab>\n      </Tabs>\n    </GameContext.Provider>\n  );\n}\n\nexport default GameEditor;\n","import React, {\n  useEffect,\n  useState,\n} from \"react\";\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Client } from 'boardgame.io/react';\n\nimport Actions, {\n  ActionsPlugin,\n} from \"./Action\";\nimport Events, {\n} from \"./Event\";\nimport {\n  SchedulePlugin,\n  INITIAL_SCHEDULE,\n} from \"./Schedule\";\nimport { Apex2021 } from './Game';\nimport Board from './component/Board';\nimport GameEditor from './component/GameEditor';\nimport GameContext from \"./GameContext\";\n\nconst ConfigurableGameClient = function(props) {\n  const {\n    match,\n  } = props;\n  const [actions, setActions] = useState(Actions);\n  const [events, setEvents] = useState(Events);\n  const [schedule, setSchedule] = useState(INITIAL_SCHEDULE);\n  useEffect(() => {\n    const json = localStorage.getItem(\"saveFiles\");\n    const knownSaves = JSON.parse(json);\n    if (knownSaves && match.params.configId) {\n      const saveFile = knownSaves[match.params.configId];\n      setActions(saveFile.actions);\n      setEvents(saveFile.events);\n      setSchedule(saveFile.schedule);\n    }\n  }, [match]);\n  console.log(actions, events, schedule);\n  const game = {\n    ...Apex2021,\n    plugins: [\n      SchedulePlugin({\n        initialSchedule: schedule,\n        initialEvents: events,\n      }),\n      ActionsPlugin({\n        initialActions: actions,\n      }),\n    ]\n  };\n  const GameClient = Client({\n    game: game,\n    board: Board,\n    numPlayers: 1\n  });\n  return (\n    <GameContext.Provider value={{\n      actions: actions,\n      events: events,\n    }}>\n      <GameClient {...props}/>\n    </GameContext.Provider>\n  );\n}\n\nconst App = function(props) {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ConfigurableGameClient} />\n      <Route exact path=\"/load-config/:configId\" component={ConfigurableGameClient} />\n      <Route exact path=\"/editor\" component={GameEditor} />\n    </Switch>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  STATIC_ROOT\n} from './Constants';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Router basename={STATIC_ROOT}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}