{"version":3,"sources":["Constants.js","Util.js","Action.js","Event.js","Schedule.js","LocalStorageContext.js","Status.js","Game.js","GameContext.js","component/GameInfo.jsx","component/Keyword.js","component/ActionArea.jsx","component/MusicPlayer.jsx","component/Board.jsx","component/GameEditor.jsx","component/LoadingScreen.jsx","LocalStorageRouter.js","App.js","reportWebVitals.js","index.js"],"names":["MAX_HAND_SIZE","STATIC_ROOT","process","DrawCard","G","ctx","hand","length","deck","discard","push","pop","BaseAction","displayName","displayNameInShop","image","description","moneyCost","energyCost","producesGrowthMindset","producesMoney","producesAttention","producesEnergy","drawsCards","discardsCards","gainsCards","forgetsOnDiscard","forgetsSelf","forgetsCards","perform","energy","growthMindsetPoints","Math","min","this","money","attention","i","cardsLeftToDiscard","events","setStage","cardsLeftToForget","forEach","c","buy","id","actionList","map","PatchDisplayName","action","Actions","reduce","rv","x","ActionsPlugin","options","initialActions","name","setup","actions","api","data","getActions","patchedActions","getAction","actionId","BaseEvent","song","engrossedTurns","inspiredTurns","indebtedTurns","energizedTurns","addsCardsToShop","addsCardsToDiscardPile","apply","statuses","inspired","max","energized","engrossed","indebted","card","actionShop","Events","Schedule","eventsByDay","turnNumber","eventId","SchedulePlugin","initialSchedule","initialEvents","schedule","getCurrentEvents","getEvents","turn","event","getEvent","addEvent","patchedEvents","getRaw","INITIAL_SCHEDULE","0","2","LocalStorageContext","createContext","BaseStatus","Statuses","INITIAL_BOARD","sort","currentEvent","backgroundImage","STARTS_TURN_WITH","Apex2021","setupData","moves","performAction","handIndex","INVALID_MOVE","splice","buyAction","shopIndex","endTurn","activePlayers","all","onBegin","console","log","endStage","remainingCard","cardsToDraw","Object","assign","entries","stat","dur","SetupNewTurn","onEnd","endGame","stages","showEvent","chooseOption","optionIndex","dismiss","discardAction","forget","forgetAction","GameContext","React","GROWTH_MINDSET_COLOR","1","3","4","5","GameInfo","useContext","Table","responsive","bordered","className","Badge","variant","ProgressBar","now","toPrecision","label","animated","CardOrCards","number","Description","props","runEffect","passthrough","useEffect","Tooltip","Keyword","value","tooltipClassName","OverlayTrigger","placement","overlay","descriptionProps","Discard","Draw","Forget","ForgetSelf","Gain","cardId","renderCard","onClick","s","BoostGrowthMindset","YOLO","ActionCardFromStaticActions","ActionCard","useState","isSelected","setIsSelected","areaType","ref","gameStage","runHolder","Card","onMouseEnter","onMouseLeave","bg","border","Header","Container","fluid","Row","Col","xs","Body","Title","Img","src","ListGroup","Item","gainedCardIndex","Text","Footer","ActionList","actionsList","actionCards","slotId","CardColumns","ActionArea","noop","isDiscard","playOrderPos","isForget","actionData","tab","setTab","tabs","keys","Tab","eventKey","title","Tabs","activeKey","onSelect","k","Button","MusicPlayer","songUrl","currentSong","setCurrentSong","player","createRef","current","play","loop","EventModal","show","onHide","styles","backgroundRepeat","backgroundSize","Modal","size","style","centered","Event","playSong","ev","Board","plugins","Provider","unCamelCase","input","replace","toUpperCase","EntityEditor","setActions","setEvents","entityId","entity","entities","updaters","field","e","maybeOption","newValue","oldValue","target","parseInt","checked","option","sequenceIdToRemove","removedValue","sequenceId","o","Error","updatedEntities","formGroups","filter","Form","Control","type","onChange","Check","indexOf","relations","selectedValues","isMulti","hideSelectedOptions","displayValue","Group","as","controlId","Label","column","sm","ActionsTab","selectedAction","setSelectedAction","navs","Nav","Link","defaultActiveKey","newActionId","updatedActions","EventPreview","showEventPreview","setShowEventPreview","EventsTab","selectedEvent","setSelectedEvent","newEventId","updatedEvents","ScheduleTab","setSchedule","scheduleUpdater","rows","Array","MAX_TURN_COUNT","row","cols","col","l","onRemove","horizontal","ImportButton","dispatch","showImport","setShowImport","newSaveFileName","setNewSaveFileName","newSaveData","setNewSaveData","newSaveDataRaw","setNewSaveDataRaw","dataErrors","setDataErrors","rawSaveData","parsedData","JSON","parse","error","toString","doValidate","backdrop","keyboard","noValidate","onSubmit","preventDefault","stopPropagation","saveFile","closeButton","required","disabled","evt","placeholder","isValid","isInvalid","Feedback","TestChanges","saveId","useReducer","state","saveFiles","newSaveId","timestamp","Date","json","localStorage","getItem","knownSaves","stringify","setItem","updateNewSaveFileName","newSaveRow","generateRow","toLocaleString","to","navigator","clipboard","writeText","doCopy","saveRows","reverse","striped","hover","CheckDirty","original","edited","GameEditor","localStorageContext","isDebug","setIsDebug","remainder","editedActions","setEditedActions","editedEvents","setEditedEvents","editedSchedule","setEditedSchedule","isDirty","setIsDirty","Assets","assets","values","Loading","count","total","percent","startGame","LoadAsset","asset","updateProgress","resolve","Preload","a","Promise","reject","assetType","Image","onload","Audio","oncanplaythrough","onerror","promises","LoadingScreen","children","isLoading","setIsLoading","nonChildren","parentContext","hasPreloaded","setHasPreloaded","assetsToLoad","loadingState","LocalStorageRouter","match","params","configId","game","GameClient","Client","board","exact","path","component","numPlayers","debug","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oPAAaA,EAAgB,EAEhBC,EAAcC,YCgBdC,EAAW,SAASC,EAAGC,GAClC,GAAID,EAAEE,KAAKC,QAAUP,EACnB,OAAO,EAET,GAAII,EAAEI,KAAKD,QAAU,EACnB,KAAOH,EAAEK,QAAQF,OAAS,GACxBH,EAAEI,KAAKE,KAAKN,EAAEK,QAAQE,OAK1B,QAAIP,EAAEI,KAAKD,QAAU,KAGrBH,EAAEE,KAAKI,KAAKN,EAAEI,KAAKG,QACZ,IC7BIC,EAAa,CACxBC,YAAa,KACbC,kBAAmB,KACnBC,MAAO,KACPC,YAAa,WACbC,UAAW,EACXC,WAAY,EACZC,sBAAuB,EACvBC,cAAe,EACfC,kBAAmB,EACnBC,eAAgB,EAChBC,WAAY,EACZC,cAAe,EACfC,WAAY,GACZC,kBAAkB,EAClBC,aAAa,EACbC,aAAc,EAEdC,QAAS,SAASzB,EAAGC,GAEnB,GAAID,EAAE0B,QAAU,EACd,OAAO,EAGT1B,EAAE0B,SACF1B,EAAE2B,oBAAsBC,KAAKC,IF5BC,EE4BuB7B,EAAE2B,oBAAsBG,KAAKf,uBAClFf,EAAE+B,OAASD,KAAKd,cAChBhB,EAAEgC,WAAaF,KAAKb,kBACpBjB,EAAE0B,QAAUI,KAAKZ,eACjB,IAAK,IAAIe,EAAI,EAAGA,EAAIH,KAAKX,WAAYc,IACnClC,EAASC,GAWX,OATI8B,KAAKV,cAAgB,GAAKpB,EAAEE,KAAKC,OAAS,IAC5CH,EAAEkC,mBAAqBJ,KAAKV,cAC5BnB,EAAIkC,OAAOC,SAAS,YAElBN,KAAKN,aAAe,GAAKxB,EAAEE,KAAKC,OAAS,IAC3CH,EAAEqC,kBAAoBP,KAAKN,aAC3BvB,EAAIkC,OAAOC,SAAS,WAEtBN,KAAKT,WAAWiB,SAAQ,SAACC,GAAD,OAAOvC,EAAEK,QAAQC,KAAKiC,OACvC,GAETC,IAAK,SAASxC,EAAGC,GACf,QAAID,EAAEgC,WAAa,GAAKhC,EAAE+B,MAAQD,KAAKjB,WAAab,EAAE0B,OAASI,KAAKhB,cAIpEd,EAAEgC,YACFhC,EAAE+B,OAASD,KAAKjB,UAChBb,EAAE0B,QAAUI,KAAKhB,WACjBd,EAAEK,QAAQC,KAAKwB,KAAKW,KACb,KAILC,EAAa,CACjB,CACED,GAAI,SACJhC,YAAa,QACbG,YAAa,qCACbG,sBAAuB,GAEzB,CACE0B,GAAI,SACJhC,YAAa,QACbG,YAAa,oCACbI,cAAe,EACfE,eAAgB,GAElB,CACEuB,GAAI,SACJhC,YAAa,QACbG,YAAa,gDACbC,UAAW,EACXU,aAAa,EACbC,aAAc5B,GAEhB,CACE6C,GAAI,SACJhC,YAAa,QACbG,YAAa,8EACbC,UAAW,EACXM,WAAY,EACZC,cAAe,GAEjB,CACEqB,GAAI,SACJhC,YAAa,QACbG,YAAa,qCACbC,UAAW,EACXE,sBAAuB,EACvBC,cAAe,EACfE,eAAgB,EAChBC,WAAY,EACZE,WAAY,CAAC,YAEf,CACEoB,GAAI,SACJhC,YAAa,QACbG,YAAa,+CACbC,UAAW,EACXK,eAAgB,EAChBC,WAAY,GAEd,CACEsB,GAAI,SACJhC,YAAa,QACbG,YAAa,MACbC,UAAW,GAEb,CACE4B,GAAI,SACJhC,YAAa,QACbG,YAAa,MACbC,UAAW,GAEb,CACE4B,GAAI,SACJhC,YAAa,QACbG,YAAa,aACbC,UAAW,EACXG,cAAe,EACfE,eAAgB,GAElB,CACEuB,GAAI,SACJhC,YAAa,SACbG,YAAa,0BACbC,UAAW,EACXI,kBAAmB,EACnBC,eAAgB,GAElB,CACEuB,GAAI,SACJhC,YAAa,SACbG,YAAa,kCACbC,UAAW,EACXK,eAAgB,EAChBC,WAAY,GAEd,CACEsB,GAAI,SACJhC,YAAa,SACbG,YAAa,kBACbC,UAAW,EACXG,cAAe,EACfE,eAAgB,GAElB,CACEuB,GAAI,UACJhC,YAAa,UACbG,YAAa,yDACbW,aAAa,GAEf,CACEkB,GAAI,iBACJhC,YAAa,kBACbG,YAAa,gBACbG,sBAAuB,EACvBQ,aAAa,EACbD,kBAAkB,IAEpBqB,KAAI,SAAAJ,GAAC,kCACF/B,GACA+B,MAGQK,EAAmB,SAASC,GACvC,OAAO,uCACFrC,GACAqC,GACA,CAEDnC,kBAAmBmC,EAAOnC,kBAAoBmC,EAAOnC,kBAAoBmC,EAAOpC,eAYhFqC,EAAUJ,EAAWK,QAAO,SAASC,EAAIC,GAE7C,OADAD,EAAGC,EAAER,IAAMQ,EACJD,IACN,IAEUE,EAAgB,SAACC,GAAa,IAEvCC,EACED,EADFC,eAEF,MAAO,CACLC,KAAM,UACNC,MAAO,iBAAO,CACZC,QAASH,IAEXI,IAAK,cAAEvD,IAAF,IAAOwD,EAAP,EAAOA,KAAP,MAAkB,CACrBC,WAAY,WAEV,IAAMC,EAAiB,GACvB,IAAK,IAAIlB,KAAMgB,EAAKF,QAClBI,EAAelB,GAAMX,KAAK8B,UAAUnB,GAEtC,OAAOkB,GAETC,UAAW,SAACC,GAAD,OAAcjB,EAAiBa,EAAKF,QAAQM,SAK9Cf,I,QC1NFgB,EAAY,CACvBrD,YAAa,KACbE,MAAO,KACPoD,KAAM,KACNnD,YAAa,WACboD,eAAgB,EAChBC,cAAe,EACfC,cAAe,EACfC,eAAgB,EAChBC,gBAAiB,GACjBC,uBAAwB,GACxBC,MAAO,SAAStE,EAAGC,GAEb6B,KAAKmC,cAAgB,IACvBjE,EAAEuE,SAASC,SAAW5C,KAAK6C,IAAKzE,EAAEuE,SAASC,UAAY,EAAI1C,KAAKmC,gBAE9DnC,KAAKqC,eAAiB,IACxBnE,EAAEuE,SAASG,UAAY9C,KAAK6C,IAAKzE,EAAEuE,SAASG,WAAa,EAAI5C,KAAKqC,iBAEhErC,KAAKkC,eAAiB,IACxBhE,EAAEuE,SAASI,UAAY/C,KAAK6C,IAAKzE,EAAEuE,SAASI,WAAa,EAAI7C,KAAKkC,iBAEhElC,KAAKoC,cAAgB,IACvBlE,EAAEuE,SAASK,SAAWhD,KAAK6C,IAAKzE,EAAEuE,SAASK,UAAY,EAAI9C,KAAKoC,gBAZ5C,oBAeLpC,KAAKsC,iBAfA,IAetB,2BAAuC,CAAC,IAA/BS,EAA8B,QACrC7E,EAAE8E,WAAWxE,KAAKuE,IAhBE,kDAkBL/C,KAAKuC,wBAlBA,IAkBtB,2BAA8C,CAAC,IAAtCQ,EAAqC,QAC5C7E,EAAEK,QAAQC,KAAKuE,IAnBK,iCAuEXE,EA/CG,CAChB,CACEtC,GAAI,cACJ9B,MAAO,+BACPoD,KAAM,SACNtD,YAAa,kBACbG,YAAa,kEACbqD,cAAe,EACfE,eAAgB,EAChBE,uBAAwB,CACtB,iBACA,iBACA,WAGJ,CACE5B,GAAI,cACJ9B,MAAO,mBACPoD,KAAM,SACNtD,YAAa,qBACbG,YAAa,yCACbyD,uBAAwB,CACtB,SACA,SACA,SACA,SACA,SACA,SACA,UAEFD,gBAAiB,CACf,SACA,SACA,SACA,YAGJzB,KAAI,SAAAJ,GAAC,kCACFuB,GACAvB,MAGoBQ,QAAO,SAASC,EAAIC,GAE3C,OADAD,EAAGC,EAAER,IAAMQ,EACJD,IACN,I,gBC9EUgC,EAAb,WAGE,WAAYC,GAAsB,oBAChCnD,KAAKmD,YAAcA,GAAe,GAJtC,4CAOE,SAASC,EAAoBC,GACrBD,KAAcpD,KAAKmD,cACvBnD,KAAKmD,YAAYC,GAAc,IAEjCpD,KAAKmD,YAAYC,GAAY5E,KAAK6E,KAXtC,uBAcE,SAAUD,GACR,OAAIA,KAAcpD,KAAKmD,YACdnD,KAAKmD,YAAYC,GAEnB,OAlBX,KAsBaE,EAAiB,SAACjC,GAAa,IAExCkC,EAEElC,EAFFkC,gBACAC,EACEnC,EADFmC,cAEF,MAAO,CACLjC,KAAM,WACNC,MAAO,iBAAO,CACZiC,SAAUF,EACVlD,OAAQmD,IAEV9B,IAAK,gBAAEvD,EAAF,EAAEA,IAAKwD,EAAP,EAAOA,KAAP,MAAkB,CACrB+B,iBAAkB,WAA0B,IAAD,OACzC,OAAO,IAAIR,EAASvB,EAAK8B,UACtBE,UAAUxF,EAAIyF,MACd/C,KAAI,SAACwC,GAAD,MAAY,CACf1C,GAAG0C,EACHQ,MAAO,EAAKC,SAAST,QAG3BU,SAAU,SAACX,EAAYC,GACrB,IAAIH,EAASvB,EAAK8B,UAAUM,SAASX,EAAYC,IAEnDM,UAAW,WAET,IAAMK,EAAgB,GACtB,IAAK,IAAIrD,KAAMgB,EAAKtB,OAClB2D,EAAcrD,GAAMX,KAAK8D,SAASnD,GAEpC,OAAOqD,GAETF,SAAU,SAACT,GAAD,mBAAC,eAENrB,GACAL,EAAKtB,OAAOgD,KAEjBY,OAAQ,WACN,OAAOtC,OAMFuC,EAAmB,CAC5BC,EAAG,CAAC,eACJC,EAAG,CAAC,gBC/DOC,EAFaC,wBAAc,I,OCF7BC,EAAa,CACxB5F,YAAa,KACbE,MAAO,KACPC,YAAa,WACb0D,MAAO,SAAStE,EAAGC,MA8CNqG,EA3CI,CACjB,CACE7D,GAAI,YACJhC,YAAa,YACbG,YAAa,kDACb0D,MAAO,SAAStE,EAAGC,GACjBD,EAAE0B,QAAU,IAGhB,CACEe,GAAI,WACJhC,YAAa,WACbG,YAAa,sEACb0D,MAAO,SAAStE,EAAGC,GACjBD,EAAE2B,oBAAsBC,KAAKC,INtBD,EMsByB7B,EAAE2B,oBAAsB,KAGjF,CACEc,GAAI,YACJhC,YAAa,YACbG,YAAa,mCACb0D,MAAO,SAAStE,EAAGC,GACjBD,EAAEgC,WAAa,IAGnB,CACES,GAAI,WACJhC,YAAa,WACbG,YAAa,gCACb0D,MAAO,SAAStE,EAAGC,GACjBD,EAAE+B,OAAS,KAGfY,KAAI,SAAAJ,GAAC,kCACF8D,GACA9D,MAGuBQ,QAAO,SAASC,EAAIC,GAE9C,OADAD,EAAGC,EAAER,IAAMQ,EACJD,IACN,IC1CGuD,EAAgB,CACpBzB,WAAY,GASV0B,OACFpG,KAAM,GAQNF,KAAM,GACNG,QAAS,GACTsB,oBAAqB,EACrBO,mBAAoB,EACpBG,kBAAmB,EACnBkC,SAAU,GACVkC,aAAc,KACdC,gBAAiB,MAGbC,EAAmB,CACvB5E,MAAO,EACPC,UAAW,EACXN,OAAQ,GA2CH,IAAMkF,EAAW,CACtBtD,MAAO,SAACrD,EAAK4G,GAAN,mBAAC,eACHN,GACAI,IAELG,MAAO,CACLC,cAAe,SAAC/G,EAAGC,EAAK+G,GACtB,IAAMnD,EAAW7D,EAAEE,KAAK8G,GAClBnE,EAAS5C,EAAIsD,QAAQK,UAAUC,GACrC,IAAKhB,EAAOpB,QAAQzB,EAAGC,GACrB,OAAOgH,IAGTjH,EAAEE,KAAKgH,OAAOF,EAAW,GACpBnE,EAAOtB,aAEVvB,EAAEK,QAAQC,KAAKuD,IAGnBsD,UAAW,SAACnH,EAAGC,EAAKmH,GAClB,IAAMvD,EAAW7D,EAAE8E,WAAWsC,GAE9B,IADenH,EAAIsD,QAAQK,UAAUC,GACzBrB,IAAIxC,EAAGC,GACjB,OAAOgH,IAGTjH,EAAE8E,WAAWoC,OAAOE,EAAW,IAEjCC,QAAS,SAACrH,EAAGC,GACXA,EAAIkC,OAAOkF,YAGf3B,KAAM,CACJ4B,cAAe,CAAEC,IAAK,aACtBC,QAAS,SAACxH,EAAGC,GAAJ,OA1Eb,SAAsBD,EAAGC,GAEvBwH,QAAQC,IAAIzH,GACZ,IAAMkC,EAASlC,EAAIsF,SAASC,mBAW5B,IAVAiC,QAAQC,IAAIvF,GACZA,EAAOG,SAAQ,YAAkB,IAAhBG,EAAe,EAAfA,GAAe,EAAXkD,MACbrB,MAAMtE,EAAGC,GACfD,EAAEyG,aAAehE,KAEG,IAAlBN,EAAOhC,QAETF,EAAIkC,OAAOwF,WAGN3H,EAAEE,KAAKC,OAAS,GAAG,CACxB,IAAIyH,EAAgB5H,EAAEE,KAAKK,MACtBN,EAAIsD,QAAQK,UAAUgE,GAAetG,kBAExCtB,EAAEK,QAAQC,KAAKsH,GAInB,IADA,IAAMC,EAAcjG,KAAKC,IAAI,EAAG7B,EAAE2B,qBACzBM,EAAI,EAAGA,EAAI4F,EAAa5F,IAC/BlC,EAASC,GAEX8H,OAAOC,OAAO/H,EAAG2G,GACjB3G,EAAE2B,sBAGF,cAAwBmG,OAAOE,QAAQhI,EAAEuE,UAAzC,eAAoD,CAAC,IAAD,sBAA1C0D,EAA0C,KAApCC,EAAoC,KAClDT,QAAQC,IAAIO,EAAMC,GACdA,EAAM,GACR5B,EAAS2B,GAAM3D,MAAMtE,EAAGC,GACxBD,EAAEuE,SAAS0D,aAEJjI,EAAEuE,SAAS0D,IAuCGE,CAAanI,EAAGC,IACvCmI,MAAO,SAACpI,EAAGC,GACLD,EAAE2B,qBAAuB,GAC1B1B,EAAIkC,OAAOkG,QAAQ,kBAIxBC,OAAQ,CACNC,UAAW,CACTzB,MAAO,CACL0B,aAAc,SAACxI,EAAGC,EAAKwI,KAGvBC,QAAS,SAAC1I,EAAGC,GACXD,EAAE0G,gBAAkBzG,EAAIsF,SAASK,SAAS5F,EAAEyG,cAAc9F,MAC1DX,EAAEyG,aAAe,KACjBxG,EAAIkC,OAAOwF,cAIjBtH,QAAS,CACPyG,MAAO,CACL6B,cAAe,SAAC3I,EAAGC,EAAK+G,GACtBS,QAAQC,IAAI1H,EAAEkC,oBACd,IAAM2B,EAAW7D,EAAEE,KAAK8G,GACxBhH,EAAEE,KAAKgH,OAAOF,EAAW,GACzBhH,EAAEK,QAAQC,KAAKuD,GACO,IAAlB7D,EAAEE,KAAKC,OACTH,EAAEkC,mBAAqB,EAEvBlC,EAAEkC,qBAEAlC,EAAEkC,oBAAsB,GAC1BjC,EAAIkC,OAAOwF,cAKnBiB,OAAQ,CACN9B,MAAO,CACL+B,aAAc,SAAC7I,EAAGC,EAAK+G,GACrBS,QAAQC,IAAI1H,EAAEqC,mBACdrC,EAAEE,KAAKgH,OAAOF,EAAW,GACH,IAAlBhH,EAAEE,KAAKC,OACTH,EAAEqC,kBAAoB,EAEtBrC,EAAEqC,oBAEArC,EAAEqC,mBAAqB,GACzBpC,EAAIkC,OAAOwF,iB,6CClKVmB,EAFKC,IAAM3C,cAAc,I,kCCWlC4C,EAAuB,CAC3B/C,EAAG,SACHgD,EAAG,SACH/C,EAAG,SACHgD,EAAG,UACHC,EAAG,UACHC,EAAG,QA8CUC,MA1Cf,WAAqB,IAAD,EAIdC,qBAAWR,GAFb9I,EAFgB,EAEhBA,EACAC,EAHgB,EAGhBA,IAGA0B,EAIE3B,EAJF2B,oBACAI,EAGE/B,EAHF+B,MACAC,EAEEhC,EAFFgC,UACAN,EACE1B,EADF0B,OAEF,OACE,eAAC6H,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAAChH,GAAG,cAA9B,UACE,gCACE,qBAAIiH,UAAU,iBAAd,UACE,uCACA,gDACA,uCACA,2CACA,6CAGJ,gCACE,qBAAIA,UAAU,gBAAd,UACE,6BAAI,cAACC,EAAA,EAAD,CAAOC,QAAQ,OAAf,SAAuB3J,EAAIyF,SAC/B,6BACE,cAACmE,EAAA,EAAD,CACEC,KAA4B,IAAtBnI,ETjDc,GSiDmCoI,YAAY,GACnEC,MAAOrI,EACPiI,QAASZ,EAAqBrH,GAC9BsI,STpDoB,ISoDVtI,MAGd,6BAAI,cAACgI,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0B7H,MAC9B,6BAAI,cAAC4H,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0B5H,MAC9B,6BAAI,cAAC2H,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0BlI,e,kFC9CxC,SAASwI,GAAYC,GACnB,OAAYA,EAAS,KAAOA,EAAS,EAAI,QAAU,QAG9C,IAAMC,GAAc,SAACC,GAAW,IAC7BzJ,EAAmDyJ,EAAnDzJ,YAAa0J,EAAsCD,EAAtCC,UAAWZ,EAA2BW,EAA3BX,UAAWa,EAAgBF,EAAhBE,YAQ3C,OAPAC,qBACE,WACMF,GACFA,OAKJ,cAACG,GAAA,EAAD,yBAAShI,GAAG,sBAAsBiH,UAAWA,GAAea,GAA5D,aACG3J,MAKM8J,GAAU,SAACL,GAAW,IACzBM,EAAoDN,EAApDM,MAAO/J,EAA6CyJ,EAA7CzJ,YAAagK,EAAgCP,EAAhCO,iBAAkBN,EAAcD,EAAdC,UAS9C,OACE,cAACO,GAAA,EAAD,CACEC,UAAU,QACVC,QAXsB,SAACC,GAAD,OACxB,cAAC,GAAD,CACEpK,YAAaA,EACb8I,UAAWkB,EACXN,UAAWA,EACXC,YAAaS,KAIf,SAIE,sBAAMtB,UAAU,eAAhB,SAAgCiB,OAKzBM,GAAU,SAACZ,GAAW,IACzBF,EAAWE,EAAXF,OACR,OACE,cAAC,GAAD,CACEQ,MAAO,WAAaR,EACpBvJ,YAAa,2EAA6EsJ,GAAYC,GAAU,6BAKzGe,GAAO,SAACb,GAAW,IACtBF,EAAWE,EAAXF,OACR,OACE,cAAC,GAAD,CACEQ,MAAO,QAAUR,EACjBvJ,YAAa,SAAWsJ,GAAYC,GAAU,6HAKvCgB,GAAS,SAACd,GAAW,IACxBF,EAAWE,EAAXF,OACR,OACE,cAAC,GAAD,CACEQ,MAAO,UAAYR,EACnBvJ,YAAa,kEAAoEsJ,GAAYC,GAAU,6BAKhGiB,GAAa,WACxB,OACE,cAAC,GAAD,CACET,MAAO,cACP/J,YAAa,oEAKNyK,GAAO,SAAChB,GAAW,IACtBiB,EAAoDjB,EAApDiB,OAAQC,EAA4ClB,EAA5CkB,WAAYX,EAAgCP,EAAhCO,iBAAkBN,EAAcD,EAAdC,UAE5C/G,EACE+F,qBAAWR,GADbvF,QAEIsB,EAAO0G,EAAW,aACtBD,OAAQA,EACRE,QAAS,SAAAC,MACNlI,EAAQ+H,KAEb,OACE,cAAC,GAAD,CACEX,MAAO,QAAUpH,EAAQ+H,GAAQ7K,YACjCG,YAAaiE,EACb+F,iBAAkBA,EAClBN,UAAWA,KAKJoB,GAAqB,SAACrB,GAAW,IACpCF,EAAWE,EAAXF,OACR,OACE,cAAC,GAAD,CACEQ,MAAO,IAAMR,EAAS,kBACtBvJ,YAAa,mKAKN+K,GAAO,SAACtB,GACnB,OACE,cAAC,GAAD,CACEM,MAAO,QACP/J,YAAa,8GC9FnB,SAASgL,GAA4BvB,GAAQ,IACnCiB,EAAWjB,EAAXiB,OAEN/H,EACE+F,qBAAWR,GADbvF,QAGF,OADAkE,QAAQC,IAAInE,GACL,cAACsI,GAAD,2BAAgBxB,GAAW9G,EAAQ+H,KAGrC,SAASO,GAAWxB,GAAQ,IAAD,EACIyB,oBAAS,GADb,mBACzBC,EADyB,KACbC,EADa,KAG9BC,EAoBE5B,EApBF4B,SACAT,EAmBEnB,EAnBFmB,QACAU,EAkBE7B,EAlBF6B,IACAC,EAiBE9B,EAjBF8B,UACA1L,EAgBE4J,EAhBF5J,YACAC,EAeE2J,EAfF3J,kBACAC,EAcE0J,EAdF1J,MACAC,EAaEyJ,EAbFzJ,YACAC,EAYEwJ,EAZFxJ,UACAC,EAWEuJ,EAXFvJ,WACAC,EAUEsJ,EAVFtJ,sBACAC,EASEqJ,EATFrJ,cACAC,EAQEoJ,EARFpJ,kBACAC,EAOEmJ,EAPFnJ,eACAC,EAMEkJ,EANFlJ,WACAC,EAKEiJ,EALFjJ,cACAC,EAIEgJ,EAJFhJ,WACAC,EAGE+I,EAHF/I,iBACAC,EAEE8I,EAFF9I,YACAC,EACE6I,EADF7I,aAOF,OAJAgJ,qBAAU,WACR4B,eAAU,iBAIV,eAACC,EAAA,EAAD,CACEH,IAAOA,EACPV,QAASA,EACTc,aAAc,kBAAMN,GAAc,IAClCO,aAAc,kBAAMP,GAAc,IAClCQ,GAAkB,YAAdL,GAAyC,WAAdA,EAAyB,SAAW,KACnEM,OAAQV,EAAa,UAAY,YACjCrC,UAAU,cAPZ,UASE,cAAC2C,EAAA,EAAKK,OAAN,UACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGrD,UAAU,aAAtB,oBAGA,cAACoD,EAAA,EAAD,CAAKC,GAAI,IACT,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACpD,EAAA,EAAD,CAAOC,QAAQ,UAAf,SACG5I,MAGL,cAAC8L,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACpD,EAAA,EAAD,CAAOC,QAAQ,UAAf,SACG3I,MAGL,cAAC6L,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACpD,EAAA,EAAD,CAAOC,QAAQ,UAAf,SACG1I,aAMX,eAACmL,EAAA,EAAKW,KAAN,WACE,cAACX,EAAA,EAAKY,MAAN,UAA0B,SAAbhB,GAAuBvL,EAAoBA,EAAoBD,IAC5E,cAAC4L,EAAA,EAAKa,IAAN,CAAUC,IAAc,MAATxM,EAAgBA,EAAQ,oBAAqB+I,UAAU,eACtE,eAAC0D,EAAA,EAAD,CAAW1D,UAAU,cAArB,UAEK3I,EAAwB,GACvB,cAACqM,EAAA,EAAUC,KAAX,UAAqC,cAAC,GAAD,CAAoBlD,OAAQpJ,KAA7C,kBAIrBI,EAAa,GACZ,cAACiM,EAAA,EAAUC,KAAX,UAAkC,cAAC,GAAD,CAAMlD,OAAQhJ,KAA5B,eAIrBC,EAAgB,GACf,cAACgM,EAAA,EAAUC,KAAX,UAAqC,cAAC,GAAD,CAASlD,OAAQ/I,KAAlC,kBAIrBE,GACC,cAAC8L,EAAA,EAAUC,KAAX,UAAyC,cAAC,GAAD,KAArB,sBAIrB9L,GACC,cAAC6L,EAAA,EAAUC,KAAX,UAAmC,cAAC,GAAD,KAAf,gBAIrB7L,EAAe,GACd,cAAC4L,EAAA,EAAUC,KAAX,UAAoC,cAAC,GAAD,CAAQlD,OAAQ3I,KAAhC,iBAItBH,EAAWsB,KAAI,SAAC2I,EAAQgC,GAAT,OACb,cAACF,EAAA,EAAUC,KAAX,UACE,cAAC,GAAD,CACE/B,OAAQA,EACRC,WAAYM,GACZjB,iBAAiB,eACjBN,UAAW,kBAAI8B,eAAU,kBALR,SAAWkB,SAWtC,cAACjB,EAAA,EAAKkB,KAAN,CAAW7D,UAAU,SAArB,SACG9I,OAGL,cAACyL,EAAA,EAAKmB,OAAN,UACE,cAACb,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGrD,UAAU,aAAtB,oBAGA,cAACoD,EAAA,EAAD,CAAKC,GAAI,IACT,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACpD,EAAA,EAAD,CAAOC,QAAQ,UAAf,SACG/I,MAGL,cAACiM,EAAA,EAAD,CAAKC,GAAI,IACT,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACpD,EAAA,EAAD,CAAOC,QAAQ,UAAf,SACG9I,gBAUjB,SAAS2M,GAAWpD,GAAQ,IAClBqD,EAA+CrD,EAA/CqD,YAAahE,EAAkCW,EAAlCX,UAAW8B,EAAuBnB,EAAvBmB,QAASW,EAAc9B,EAAd8B,UACnCwB,EAAcD,EAAY/K,KAAI,SAACkB,EAAU+J,GAAX,OAClC,cAAChC,GAAD,CACEK,SAAUvC,EACV4B,OAAQzH,EAER2H,QAAS,kBAAMA,EAAQoC,IACvBzB,UAAWA,GAFNyB,MAIT,OACE,cAACC,EAAA,EAAD,CAAanE,UAAW,eAAiBA,EAAzC,SACGiE,EAAYxN,OAAS,EAAIwN,EACxB,cAAChE,EAAA,EAAD,UAAO,0DAsEAmE,OAjEf,WAAuB,IAAD,EAKhBxE,qBAAWR,GAHb9I,EAFkB,EAElBA,EACAC,EAHkB,EAGlBA,IACA6G,EAJkB,EAIlBA,MAGA5G,EAIEF,EAJFE,KACA4E,EAGE9E,EAHF8E,WACA1E,EAEEJ,EAFFI,KACAC,EACEL,EADFK,QAEI0N,EAAO,SAAC9K,KACR+K,EAAY/N,EAAIqH,eAAyD,YAAxCrH,EAAIqH,cAAcrH,EAAIgO,cACvDC,EAAWjO,EAAIqH,eAAyD,WAAxCrH,EAAIqH,cAAcrH,EAAIgO,cACtD9B,EAAY6B,EAAY,UAAYE,EAAW,SAAW,KAC1DC,EAAa,CACjB,KAAQ,CACN5K,QAASrD,EACTsL,QAASwC,EAAYlH,EAAM6B,cAAeuF,EAAWpH,EAAM+B,aAAe/B,EAAMC,eAElF,KAAQ,CACNxD,QAASuB,EACT0G,QAASwC,EAAYD,EAAOjH,EAAMK,WAEpC,KAAQ,CACN5D,QAAS,YAAInD,GAAMoG,OACnBgF,QAASuC,GAEX,eAAgB,CACdxK,QAASlD,EACTmL,QAASuC,IA/BO,EAkCEjC,mBAAS,QAlCX,mBAkCbsC,EAlCa,KAkCRC,EAlCQ,KAmCdC,EAAOxG,OAAOyG,KAAKJ,GAAYxL,KAAI,SAACsJ,GAAD,OACvC,cAACuC,EAAA,EAAD,CAAKC,SAAUxC,EAAUyC,MAAOzC,EAAhC,SACE,cAACwB,GAAD,CACEC,YAAaS,EAAWlC,GAAU1I,QAClCmG,UAAWuC,EACXT,QAAS2C,EAAWlC,GAAUT,QAC9BW,UAAWA,KALgCF,MASjD,OACE,qBAAKxJ,GAAG,YAAR,SACE,eAACkM,EAAA,EAAD,CAAMlM,GAAG,UAAUmM,UAAWR,EAAKS,SAAU,SAACC,GAAD,OAAKT,EAAOS,IAAzD,UACGR,EACD,cAACE,EAAA,EAAD,CAAKC,SAAS,YAAYC,MAAM,YAAhC,SACE,cAACK,EAAA,EAAD,CACEvD,QAAS,WACP1E,EAAMO,UACNgH,EAAO,SAET3E,UAAU,oBALZ,+BAD8C,mBC1NzCsF,GApBK,SAAC3E,GAAW,IAE5B4E,EACE5E,EADF4E,QAF2B,EAISnD,mBAAS,MAJlB,mBAItBoD,EAJsB,KAITC,EAJS,KAKvBC,EAASC,sBAUf,OATA7E,qBAAU,WACJyE,IAAYC,IAGhBzH,QAAQC,IAAR,wBAA6BuH,IAC7BG,EAAOE,QAAQnC,IAAf,UAAwBtN,EAAxB,YAAuCoP,GACvCG,EAAOE,QAAQC,OACfJ,EAAeF,MACd,CAACC,EAAaE,EAAQH,IAEvB,uBAAO/C,IAAKkD,EAAQI,MAAI,KCFrB,SAASC,GAAWpF,GAAQ,IAE/B1E,EAGE0E,EAHF1E,MACA+J,EAEErF,EAFFqF,KACAC,EACEtF,EADFsF,OAGAlP,EAGEkF,EAHFlF,YACAG,EAEE+E,EAFF/E,YACAD,EACEgF,EADFhF,MAEIiP,EAAS,CACblJ,gBAA0B,MAAT/F,EAAgB,KAAhB,cAA8Bd,EAA9B,YAA6Cc,EAA7C,KACjBkP,iBAAkB,YAClBC,eAAgB,aAElB,OACE,eAACC,EAAA,EAAD,yBACEC,KAAO,KACPN,KAAQA,EACRC,OAAUA,EACVM,MAASL,EACTlG,UAAY,cACZwG,UAAQ,GACJ7F,GAPN,cASE,cAAC0F,EAAA,EAAMrD,OAAP,UACE,cAACqD,EAAA,EAAM9C,MAAP,UACGxM,MAGL,cAACsP,EAAA,EAAM/C,KAAP,UACGpM,IAEH,cAACmP,EAAA,EAAMvC,OAAP,UACE,cAACuB,EAAA,EAAD,CAAQvD,QAASmE,EAAjB,4BAMR,SAASQ,GAAM9F,GAAQ,IAAD,EAMhBf,qBAAWR,GAJb9I,EAFkB,EAElBA,EACA8G,EAHkB,EAGlBA,MACA3E,EAJkB,EAIlBA,OACAiO,EALkB,EAKlBA,SAEIV,EAAO1P,EAAEyG,gBAAgBtE,EAEzBkO,EAAKlO,EAAOnC,EAAEyG,cAMpB,OALA+D,qBAAU,WACJ6F,GAAMA,EAAGtM,MAAQ2L,GACnBU,EAASC,EAAGtM,QAEb,CAACsM,EAAID,EAAUV,IACbA,EAGE,cAACD,GAAD,CACL9J,MAAO0K,EACPX,KAAMA,EACNC,OAba,kBAAM7I,EAAM4B,aAQlB,6BASX,IAiDe4H,GAjDD,SAASjG,GAAQ,IAAD,EAMxBf,qBAAWR,GAJb9I,EAF0B,EAE1BA,EACAC,EAH0B,EAG1BA,IACA6G,EAJ0B,EAI1BA,MACAyJ,EAL0B,EAK1BA,QAEIhN,EAAUgN,EAAQhN,QAAQC,IAAIE,aAC9BvB,EAASoO,EAAQhL,SAAS/B,IAAIiC,YARR,EASAqG,mBAAS,MATT,mBASrBmD,EATqB,KASZmB,EATY,KAW1B1J,EACE1G,EADF0G,gBAEIkJ,EAAS,CACblJ,gBAAoC,MAAnBA,EAA0B,KAA1B,cAAwC7G,EAAxC,YAAuD6G,EAAvD,KACjBoJ,eAAgB,SAGlB,OACE,eAAC,EAAYU,SAAb,CAAsB7F,MAAO,CAC3B3K,EAAGA,EACHC,IAAKA,EACL6G,MAAOA,EACPvD,QAASA,EACTpB,OAAQA,EACR8M,QAASA,EACTmB,SAAUA,GAPZ,UASE,qBAAKH,MAAOL,EAAQnN,GAAG,iBACvB,sBAAKA,GAAG,eAAR,UACE,eAACkK,EAAA,EAAD,CAAWC,OAAK,EAACnK,GAAG,iBAApB,UACE,cAACoK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,QAGJ,cAACD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,GAAD,WAIN,cAAC,GAAD,OAEF,cAAC,GAAD,CAAamC,QAASA,Q,0DC1F5B,SAASwB,GAAYC,GAAO,OAAOA,EAAMC,QAAQ,kBAAkB,SAASA,QAAQ,2BAA2B,WAAWA,QAAQ,MAAK,SAASlF,GAAG,OAAOA,EAAEmF,iBAE5J,SAASC,GAAaxG,GAAQ,IACpBxG,EAAsBwG,EAAtBxG,SAAUsB,EAAYkF,EAAZlF,QADS,EAKvBmE,qBAAWnD,GAFb5C,EAHyB,EAGzBA,QAASuN,EAHgB,EAGhBA,WACT3O,EAJyB,EAIzBA,OAAQ4O,EAJiB,EAIjBA,UAEJC,EAAWnN,GAAsBsB,EACjC8L,EAASpN,EAAWN,EAAQM,GAAY1B,EAAOgD,GACrDsC,QAAQC,IAAInE,GACZkE,QAAQC,IAAIuJ,GAIZ,IAHA,IAAMC,EAAWrN,EAAWN,EAAUpB,EAChCgP,EAAW,GAXU,aAatB,IAAIC,EAAK,KACZD,EAASC,GAAS,SAACC,EAAGC,GACpB,IACIC,EADEC,EAAWN,EAASF,GAAUI,GAEpC,cAAeI,GACb,IAAK,SACHD,EAAWF,EAAEI,OAAO9G,MACpB,MACF,IAAK,SACH4G,EAAWG,SAASL,EAAEI,OAAO9G,OAC7B,MACF,IAAK,UACH4G,EAAWF,EAAEI,OAAOE,QACpB,MACF,IAAK,SACH,OAAOL,EAAYzO,QACjB,IAAK,kBACH0O,EAAQ,sBACHC,GADG,CAENF,EAAYM,OAAOjH,QAErB,MACF,IAAK,eACH,IAAIkH,EAAqBP,EAAYQ,aAAaC,YAClDR,EAAQ,YAAOC,IACNtK,OAAO2K,EAAoB,GACpC,MACF,QACEN,EAAWF,EAAE1O,KAAI,SAAAqP,GAAC,OAAEA,EAAErH,SAG1B,MACF,QACE,MAAM,IAAIsH,MAAJ,sCAAyCb,EAAzC,sBAA4DC,EAAEI,OAAO9G,QAE/E,IAAMuH,EAAe,2BAChBhB,GADgB,gBAGhBF,EAHgB,2BAIZE,EAASF,IAJG,mBAKdI,EAAQG,OAIQ1N,EAAWiN,EAAaC,GAChCmB,KA7CnB,MAAkBpK,OAAOyG,KAAK0C,GAA9B,eAAwC,IAgDxC,IAAMkB,EAAarK,OAAOE,QAAQiJ,GAC/BmB,QAAO,mCAAEhB,EAAF,KAASzG,EAAT,YACI,OAAVA,GACkB,oBAAXA,GAEG,UAAVyG,GAEU,OAAVA,KAEDzO,KAAI,YAAqB,IACpB+N,EADmB,mBAAlBU,EAAkB,KAAXzG,EAAW,KAGvB,cAAeA,GACb,IAAK,SACH+F,EACE,cAAC2B,GAAA,EAAKC,QAAN,CACEC,KAAK,OACL5H,MAAOsG,EAAOG,GACdoB,SAAUrB,EAASC,KAGvB,MACF,IAAK,SACHV,EACE,cAAC7F,GAAA,EAAD,CACEC,UAAU,OACVC,QAAS,cAACN,GAAA,EAAD,UAAUwG,EAAOG,KAF5B,SAIE,cAACiB,GAAA,EAAKC,QAAN,CACEC,KAAK,QACL5H,MAAOsG,EAAOG,GACd3M,IAAK,GACL+N,SAAUrB,EAASC,OAIzB,MACF,IAAK,UACHV,EACE,cAAC2B,GAAA,EAAKI,MAAN,CACEF,KAAK,WACLZ,QAASV,EAAOG,GAChBoB,SAAUrB,EAASC,KAGvB,MACF,IAAK,SAEH,KAAIA,EAAMsB,QAAQ,UAAY,GAwB5B,MAAM,IAAIT,MAAJ,6BAAgCtH,EAAhC,gBAA6CyG,EAA7C,MAvBN,IAAIuB,EAAYpP,EACVJ,EAAU2E,OAAOE,QAAQ2K,GAAWhQ,KAAI,mCAAEF,EAAF,WAAgB,CAC5DuH,MAD4C,KAC/BvJ,YACbkK,MAAOlI,MAEHmQ,EAAiB3B,EAAOG,GAAOzO,KAAI,SAACF,EAAIsP,GAAL,MAAmB,CAC1D/H,MAAO2I,EAAUlQ,GAAIhC,YACrBkK,MAAOlI,EAEPsP,WAAYA,MAEdrB,EACE,cAAC,KAAD,CACEjO,GAAE,UAAKuO,EAAL,YAAiBI,GACnByB,SAAO,EACPC,qBAAqB,EACrBnI,MAAOiI,EACPJ,SAAUrB,EAASC,GACnBjO,QAASA,EACT4P,aAAa,SAMnB,MACF,QACE,MAAM,IAAId,MAAJ,kCAAqCtH,EAArC,gBAAkDyG,EAAlD,MAEV,OACE,eAACiB,GAAA,EAAKW,MAAN,CAAYC,GAAIpG,IAA2BqG,UAAS,UAAKlC,EAAL,YAAiBI,GAArE,UACE,cAACiB,GAAA,EAAKc,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,SAA2B5C,GAAYW,KACvC,cAACtE,EAAA,EAAD,CAAKuG,GAAI,EAAT,SACG3C,MAHL,eAAkCU,OAQxC,OAAO,mCACFe,IAIP,SAASmB,GAAWjJ,GAAQ,IAAD,EAIrBf,qBAAWnD,GAFb5C,EAFuB,EAEvBA,QACAuN,EAHuB,EAGvBA,WAHuB,EAKqBhF,mBAAShE,OAAOyG,KAAKhL,GAAS,IALnD,mBAKjBgQ,EALiB,KAKDC,EALC,KAMnBC,EAAO3L,OAAOE,QAAQzE,GAASZ,KAAI,mCAAEF,EAAF,KAAMI,EAAN,YACvC,cAAC6Q,GAAA,EAAIrG,KAAL,UACE,cAACqG,GAAA,EAAIC,KAAL,CAAUlF,SAAUhM,EAApB,SAAyBI,EAAOpC,eADnBgC,MAiBjB,OACE,eAACoK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKrK,GAAG,aAAa4Q,GAAI,EAAzB,SACE,eAACK,GAAA,EAAD,CACE9J,QAAQ,QACRF,UAAU,cACVkK,iBAAkBL,EAClB1E,SAAU2E,EAJZ,UAMGC,EACD,cAAC1E,EAAA,EAAD,CAAQvD,QAvBE,WAChB,IAAMqI,EAAc,QAAU/L,OAAOyG,KAAKhL,GAASpD,OAAS,GACtD2T,EAAc,2BACfvQ,GADe,mBAEjBsQ,EAFiB,2BAGbrT,GAHa,IAIhBiC,GAAIoR,EACJpT,YAAaoT,EACbnT,kBAAmBmT,MAGvB/C,EAAWgD,IAYuBlK,QAAQ,QAApC,oBAGJ,eAACkD,EAAA,EAAD,CAAKuG,GAAI,EAAT,UACE,qBAAK5Q,GAAG,6BAAR,SACE,cAACoJ,GAAD,aAAYP,OAAQiI,EAAgB/H,QAAS,cAAYjI,EAAQgQ,OAEnE,cAAC1C,GAAD,CAAchN,SAAU0P,UAMhC,SAASQ,GAAa1J,GAAQ,IAE1BlF,EACEkF,EADFlF,QAKIQ,EADF2D,qBAAWnD,GADbhE,OAEmBgD,GAPM,EAQuB2G,oBAAS,GARhC,mBAQnBkI,EARmB,KAQDC,EARC,KAW3B,OAAO,qCACL,cAAClF,EAAA,EAAD,CAAQvD,QAHY,kBAAMyI,GAAoB,IAG9C,0BACA,cAACxE,GAAD,CAAY9J,MAAOA,EAAO+J,KAAMsE,EAAkBrE,OAHxB,kBAAMsE,GAAoB,SAOxD,SAASC,GAAU7J,GAAQ,IAAD,EAIpBf,qBAAWnD,GAFbhE,EAFsB,EAEtBA,OACA4O,EAHsB,EAGtBA,UAHsB,EAKoBjF,mBAAShE,OAAOyG,KAAKpM,GAAQ,IALjD,mBAKhBgS,EALgB,KAKDC,EALC,KAMlBX,EAAO3L,OAAOE,QAAQ7F,GAAQQ,KAAI,mCAAEF,EAAF,KAAMkD,EAAN,YACtC,cAAC+N,GAAA,EAAIrG,KAAL,UACE,cAACqG,GAAA,EAAIC,KAAL,CAAUlF,SAAUhM,EAApB,SAAyBkD,EAAMlF,eADlBgC,MAgBjB,OACE,eAACoK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKrK,GAAG,aAAa4Q,GAAI,EAAzB,SACE,eAACK,GAAA,EAAD,CACE9J,QAAQ,QACRF,UAAU,cACVmF,SAAUuF,EACVR,iBAAkBO,EAJpB,UAMGV,EACD,cAAC1E,EAAA,EAAD,CAAQvD,QAtBC,WACf,IAAM6I,EAAa,SAAWvM,OAAOyG,KAAKpM,GAAQhC,OAAS,GACrDmU,EAAa,2BACdnS,GADc,mBAEhBkS,EAFgB,2BAGZvQ,GAHY,IAIfrB,GAAI4R,EACJ5T,YAAa4T,MAGjBtD,EAAUuD,IAYuB1K,QAAQ,QAAnC,oBAGJ,eAACkD,EAAA,EAAD,CAAKuG,GAAI,EAAT,UACE,cAACU,GAAD,CAAc5O,QAASgP,IACvB,cAACtD,GAAD,CAAc1L,QAASgP,UAM/B,SAASI,GAAYlK,GAAQ,IAAD,EAKtBf,qBAAWnD,GAHbZ,EAFwB,EAExBA,SACAiP,EAHwB,EAGxBA,YACArS,EAJwB,EAIxBA,OAEIsS,EAAkB,SAAC/O,EAAM4O,GAC7BE,EAAY,2BACPjP,GADM,mBAERG,EAAO4O,EAAc3R,KAAI,SAAC0O,GAAD,OAAOA,EAAE5O,UAGjCU,EAAU2E,OAAOE,QAAQ7F,GAAQQ,KAAI,yCAAuB,CAChEF,GADyC,KAEzCY,KAFyC,KAE7B5C,gBAKRiU,EAAO,YAAIC,MADYC,GACgBrG,QAAQ5L,KAAI,SAACkS,GACxD,IAAMC,EAAO,YAAIH,MAJO,GAIkBpG,QAAQ5L,KAAI,SAACoS,GACrD,IAAMrP,EALgB,EAKTmP,EAA0BE,EACjCnC,GAAkBrN,EAASG,IAAS,IAAI/C,KAAI,SAACwC,GAAD,MAAc,CAC9D1C,GAAI0C,EACJ9B,KAAMlB,EAAOgD,GAAS1E,gBAExB,OACE,eAAC2M,EAAA,EAAUC,KAAX,CAAgBgG,GAAI,EAApB,UACE,sCAAS3N,EAAO,EAAhB,OACA,cAAC,eAAD,CACEjD,GAAE,UAAKiD,EAAL,WACFkN,eAAgBA,EAChB/D,SAAU,SAACmG,GAAD,OAAKP,EAAgB/O,EAAMsP,IACrCC,SAAU,SAACD,GAAD,OAAKP,EAAgB/O,EAAMsP,IACrC7R,QAASA,EACT4P,aAAa,WARjB,UAA+B8B,EAA/B,YAAsCE,OAa1C,OACE,cAAC3H,EAAA,EAAD,CAAW8H,WAAY,KAAvB,SACGJ,GAD+BD,MAKtC,OAAO,qBAAKpS,GAAG,kBAAR,SACJiS,IAIL,SAASS,GAAa9K,GAAQ,IACpB+K,EAAa/K,EAAb+K,SADmB,EAEStJ,oBAAS,GAFlB,mBAEpBuJ,EAFoB,KAERC,EAFQ,OAGmBxJ,mBAAS,aAH5B,mBAGpByJ,EAHoB,KAGHC,EAHG,OAIW1J,mBAAS,MAJpB,mBAIpB2J,EAJoB,KAIPC,EAJO,OAKiB5J,mBAAS,IAL1B,mBAKpB6J,EALoB,KAKJC,EALI,OAMS9J,mBAAS,2BANlB,mBAMpB+J,EANoB,KAMRC,EANQ,KAgD3B,OAHAtL,qBAAU,YAxBS,SAACuL,GAClB,IACE,IAAMC,EAAaC,KAAKC,MAAMH,GAC9B,IAAKC,EAAW3S,KACd,MAAM,IAAI4O,MAAM,mCAElB,IAAK+D,EAAWzS,QACd,MAAM,IAAI0O,MAAM,4BAElB,IAAK+D,EAAW7T,OACd,MAAM,IAAI8P,MAAM,2BAElB,IAAK+D,EAAWzQ,SACd,MAAM,IAAI0M,MAAM,6BAElBuD,EAAmBQ,EAAW3S,MAC9BqS,EAAeM,GACfF,EAAc,MACd,MAAOK,GACPX,EAAmB,aACnBE,EAAe,MACfI,EAAcK,EAAMC,aAItBC,CAAWV,KACV,CAACA,IAEF,qCACE,cAAC5G,EAAA,EAAD,CAAQvD,QAAS,kBAAI8J,GAAc,IAAnC,oBACA,cAACvF,EAAA,EAAD,CACEC,KAAK,KACLN,KAAM2F,EACN1F,OAAQ,kBAAM2F,GAAc,IAC5BgB,SAAS,SACTC,UAAU,EALZ,SAOE,eAAClE,GAAA,EAAD,CAAMmE,YAAU,EAACC,SAnDJ,SAAC9Q,GAClBA,EAAM+Q,iBACN/Q,EAAMgR,kBACFlB,IACFL,EAAS,CACP7C,KAAM,WACNqE,SAAUnB,IAEZH,GAAc,KA2CZ,UACE,cAACvF,EAAA,EAAMrD,OAAP,CAAcmK,aAAW,EAAzB,SACE,cAAC9G,EAAA,EAAM9C,MAAP,4BAEF,eAAC8C,EAAA,EAAM/C,KAAP,WACE,eAACqF,GAAA,EAAKW,MAAN,CAAYE,UAAU,cAAtB,UACE,cAACb,GAAA,EAAKc,MAAN,oBACA,cAACd,GAAA,EAAKC,QAAN,CAAcC,KAAK,OAAO5H,MAAO4K,EAAiBuB,UAAQ,EAACC,UAAQ,OAErE,eAAC1E,GAAA,EAAKW,MAAN,CAAYE,UAAU,cAAtB,UACE,cAACb,GAAA,EAAKc,MAAN,oBACA,cAACd,GAAA,EAAKC,QAAN,CACEW,GAAG,WACHyB,KAAM,GACN/J,MAAOgL,EACPnD,SAvDO,SAACwE,GACpBpB,EAAkBoB,EAAIvF,OAAO9G,QAuDjBsM,YAAY,wBACZC,QAAwB,OAAfrB,EACTsB,UAA0B,OAAftB,IAEb,cAACxD,GAAA,EAAKC,QAAQ8E,SAAd,CAAuB7E,KAAMsD,EAAa,UAAY,QAAtD,SACGA,UAIP,eAAC9F,EAAA,EAAMvC,OAAP,WACE,cAACuB,EAAA,EAAD,CAAQnF,QAAQ,YAAY4B,QAAS,kBAAM8J,GAAc,IAAzD,oBAGA,cAACvG,EAAA,EAAD,CAAQnF,QAAQ,UAAU2I,KAAK,SAASwE,SAA0B,OAAhBtB,EAAlD,oCAQZ,SAAS4B,GAAYhN,GAAQ,IAEzBiN,EACEjN,EADFiN,OAFwB,EAqBMC,sBAjBb,SAACC,EAAO3U,GACzB,OAAQA,EAAO0P,MACb,IAAK,WACH,OAAO1P,EAAO4U,UAChB,IAAK,WACH,IAAMC,EAAY5P,OAAOyG,KAAKiJ,GAAOrX,OACrC,OAAO,2BACFqX,GADL,mBAEGE,EAFH,2BAGO7U,EAAO+T,UAHd,IAIIe,UAAWC,KAAK9N,UAGtB,QACE,MAAM,IAAImI,MAAJ,oCAAuCpP,EAAO0P,UAGH,IArB7B,mBAqBlBkF,EArBkB,KAqBPrC,EArBO,KAsB1B5K,qBAAU,WACR,IAAMqN,EAAOC,aAAaC,QAAQ,aAC5BC,EAAa/B,KAAKC,MAAM2B,GAC1BG,GACF5C,EAAS,CACP7C,KAAM,WACNkF,UAAWO,MAGd,CAACV,IACJ9M,qBAAU,WACR,GAAI1C,OAAOyG,KAAKkJ,GAAWtX,OAAS,EAAG,CACrC,IAAM0X,EAAO5B,KAAKgC,UAAUR,GAC5BK,aAAaI,QAAQ,YAAaL,MAEnC,CAACJ,IArCsB,MA0CtBnO,qBAAWnD,GAHb5C,EAvCwB,EAuCxBA,QACApB,EAxCwB,EAwCxBA,OACAoD,EAzCwB,EAyCxBA,SAzCwB,EA2CuBuG,mBAAS,aA3ChC,mBA2CnByJ,EA3CmB,KA2CF4C,EA3CE,KA0DpBC,EACJ,qBAAI3V,GAAG,cAAP,UACE,6BAAKqF,OAAOyG,KAAKkJ,GAAWtX,SAC5B,6BACE,cAACkS,GAAA,EAAKC,QAAN,CACEC,KAAK,OACL5H,MAAO4K,EACP/C,SAAU,SAACnC,GAAD,OAAQ8H,EAAsB9H,EAAGoB,OAAO9G,YAGtD,qCACA,+BACE,cAACoE,EAAA,EAAD,CAAQvD,QA1BE,WACd4J,EAAS,CACP7C,KAAM,WACNqE,SAAU,CACRvT,KAAMkS,EACNhS,QAASA,EACTpB,OAAQA,EACRoD,SAAUA,MAmBV,0BADF,OAEE,cAAC4P,GAAD,CAAcC,SAAUA,OAE1B,6BAAI,cAACrG,EAAA,EAAD,CAAQgI,UAAQ,EAAhB,8BACJ,kDAfuB,eAkBrBsB,EAAc,SAACf,EAAQjU,EAAMsU,GAAf,OAClB,+BACE,6BAAKL,IACL,6BAAKjU,IACL,6BAAKsU,EAAY,IAAIC,KAAKD,GAAWW,iBAAmB,QACxD,6BAAI,cAAC,IAAD,CAAMC,GAAE,WAAMjB,EAAN,SAAR,SAA6B,cAACvI,EAAA,EAAD,uBACjC,6BAAI,cAACA,EAAA,EAAD,CAAQvD,QAAS,kBA5BV,SAAC8L,GACdkB,UAAUC,UAAUC,UAAUzC,KAAKgC,UAAUR,EAAUH,KA2B5BqB,CAAOrB,IAA5B,iCACJ,6BAAI,cAAC,IAAD,CAAMiB,GAAE,WAAMjB,EAAN,SAAqB7F,OAAO,SAApC,SAA6C,cAAC1C,EAAA,EAAD,gCANnD,eAAiBuI,KASbsB,EAAW9Q,OAAOE,QAAQyP,GAAW9U,KAAI,mCAAE2U,EAAF,KAAUV,EAAV,YAC7CyB,EAAYf,EAAQV,EAASvT,KAAMuT,EAASe,cAC3CkB,UACH,OACE,eAACtP,EAAA,EAAD,CAAOuP,SAAO,EAACrP,UAAQ,EAACsP,OAAK,EAAC/I,KAAK,KAAnC,UACE,gCACE,+BACE,mCACA,sCACA,sCACA,2CACA,wCACA,6CAGJ,kCACGoI,EACAQ,EACAP,EAAY,SAAU,2BAA4B,YAM3D,SAASW,GAAWC,EAAUC,GAC5BzR,QAAQC,IAAIuR,EAAUC,GACtB,cAAyBpR,OAAOE,QAAQkR,GAAxC,eAAiD,CAAC,IAAD,sBAAvCzW,EAAuC,KAAnCwO,EAAmC,KAC/C,KAAMxO,KAAMwW,GACV,OAAO,EAET,cAAmBnR,OAAOE,QAAQiJ,GAAlC,eAA2C,CAAC,IAAD,sBAAjCnC,EAAiC,KACzC,GADyC,OAC/BmK,EAASxW,GAAIqM,GACrB,OAAO,GAIb,OAAO,EA8EMqK,OA3Ef,SAAoB9O,GAAQ,IAClBiN,EAAWjN,EAAXiN,OACF8B,EAAsB9P,qBAAWnD,GAErC5C,EASE6V,EATF7V,QAEApB,GAOEiX,EARFtI,WAQEsI,EAPFjX,QAEAoD,GAKE6T,EANFrI,UAMEqI,EALF7T,UAEA8T,GAGED,EAJF5E,YAIE4E,EAHFC,SACAC,EAEEF,EAFFE,WACGC,EAZoB,aAarBH,EAbqB,iGAiBiBtN,mBAASvI,GAjB1B,mBAiBlBiW,EAjBkB,KAiBHC,EAjBG,OAkBe3N,mBAAS3J,GAlBxB,mBAkBlBuX,EAlBkB,KAkBJC,EAlBI,OAmBmB7N,mBAASvG,GAnB5B,mBAmBlBqU,EAnBkB,KAmBFC,EAnBE,OAoBK/N,oBAAS,GApBd,mBAoBlBgO,EApBkB,KAoBTC,EApBS,KAsCzB,OAjBAvP,qBAAU,WACJwO,GAAWzV,EAASiW,IACpBR,GAAW7W,EAAQuX,IACnBV,GAAWzT,EAAUqU,GAEvBG,GAAW,GAEXA,GAAW,KAEZ,CAACxW,EAASiW,EAAerX,EAAQuX,EAAcnU,EAAUqU,IAE5DpP,qBAAU,WAEJ6O,GACFC,GAAW,KAEZ,CAACD,EAASC,IAEX,cAAC,EAAoB9I,SAArB,CAA8B7F,MAAK,aACjCpH,QAASiW,EACT1I,WAAY2I,EACZtX,OAAQuX,EACR3I,UAAW4I,EACXpU,SAAUqU,EACVpF,YAAaqF,EACbvC,OAAQA,GACLiC,GARL,SAUE,eAAC5K,EAAA,EAAD,CAAMlM,GAAG,cAAcmR,iBAAiB,UAAxC,UACE,cAACpF,EAAA,EAAD,CAAKuI,UAAQ,EAACrI,MAAOoL,EAAU,kBAAH,qBAAqCxC,KAEjE,cAAC9I,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,UAA9B,SACE,cAAC,EAAY8B,SAAb,CAAsB7F,MAAO,CAG3BpH,QAASiW,GAHX,SAKE,cAAClG,GAAD,OANwC,gBAS5C,cAAC9E,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,SAA7B,SACE,cAACwF,GAAD,KADwC,eAG1C,cAAC1F,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,WAA/B,SACE,cAAC6F,GAAD,KAD4C,iBAG9C,cAAC/F,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,eAA3B,SACE,cAAC2I,GAAD,KAD4C,c,4BClnBhD2C,GAAS,SAASzW,EAASpB,GAE/B,IADA,IAAM8X,EAAS,GACf,MAAmBnS,OAAOoS,OAAOD,GAAjC,eAA0C,CAArC,IAAIpX,EAAM,KACQ,OAAjBA,EAAOlC,QACTsZ,EAAOpX,EAAOlC,OAAS,OAG3B,cAAemH,OAAOoS,OAAO/X,GAA7B,eAAsC,CAAjC,IAAIkO,EAAE,KACQ,OAAbA,EAAG1P,QACLsZ,EAAO5J,EAAG1P,OAAS,OAEL,OAAZ0P,EAAGtM,OACLkW,EAAO5J,EAAGtM,MAAQ,SAItB,OAAOkW,GAGHE,GAAU,SAAS9P,GAAQ,IAE7B+P,EAIE/P,EAJF+P,MACAC,EAGEhQ,EAHFgQ,MACAC,EAEEjQ,EAFFiQ,QACAC,EACElQ,EADFkQ,UAEF,OACE,sBAAK9X,GAAG,UAAR,UACE,cAACoH,EAAA,EAAD,CAAaC,IAAKwQ,IAClB,uBACA,4BAEIF,EAAQC,EAAR,iBACYD,EADZ,YACqBC,EADrB,cAGE,cAACtL,EAAA,EAAD,CAAQvD,QAAS+O,EAAjB,yBAQNC,GAAY,SAACC,EAAOtN,EAAKuN,EAAgBC,GAE7CD,IACAjT,QAAQC,IAAR,iBAAsByF,IACtBwN,EAAQF,IAKJG,GAAO,yCAAG,WAAOX,EAAgBS,GAAvB,gBAAAG,EAAA,sEACS/S,OAAOyG,KAAK0L,GAAQtX,KAAI,SAACwK,GAC9C,GAAY,cAARA,EACF,MAAM,IAAI8E,MAAM,oCAElB,OAAO,IAAI6I,SAAQ,SAAUH,EAASI,GACpC,IACIN,EADEO,EAAYf,EAAO9M,GAEzB,OAAQ6N,GACN,IAAK,OACHP,EAAQ,IAAIQ,OACNC,OAAS,WACbV,GAAUC,EAAOtN,EAAKuN,EAAgBC,IAExC,MACF,IAAK,SACHF,EAAQ,IAAIU,OAENC,iBAAmB,WACvBZ,GAAUC,EAAOtN,EAAKuN,EAAgBC,IAExC,MACF,QACE,MAAM,IAAI1I,MAAJ,mCAAsC+I,IAEhDP,EAAMtN,IAAN,UAAetN,EAAf,YAA8BsN,GAC9BsN,EAAMY,QAAU,WACdN,EAAO,kBAAD,OAAmBC,EAAnB,aAAiCP,EAAMtN,aA3BrC,cACRmO,EADQ,gBA+BRR,QAAQvT,IAAI+T,GA/BJ,2CAAH,wDA0GEC,GAxEO,SAAClR,GAAW,IAE9BmR,EAIEnR,EAJFmR,SACAC,EAGEpR,EAHFoR,UACAC,EAEErR,EAFFqR,aACGC,EAL0B,aAM3BtR,EAN2B,yCAQ7BkG,EACEoL,EADFpL,QAEIqL,EAAgBtS,qBAAWnD,GAC3B5C,EAAUgN,EAAQhN,QAAQC,IAAIE,aAC9BvB,EAASoO,EAAQhL,SAAS/B,IAAIiC,YAZL,EAaSqG,oBAAS,GAblB,mBAaxB+P,EAbwB,KAaVC,EAbU,KA2BzBC,EAAe/B,GAAOzW,EAASpB,GA3BN,EA4BEoV,sBAdjB,SAACC,EAAO3U,GACtB,OAAQA,EAAO0P,MACb,IAAK,YACH,MAAO,CACL6H,MAAO5C,EAAM4C,MAAQ,EACrBC,MAAO7C,EAAM6C,MACbC,QAAU,KAAS9C,EAAM4C,MAAQ,GAAK5C,EAAM6C,OAEhD,QACE,MAAM,IAAIpI,MAAJ,kCAAqCpP,EAAO0P,UAKH,CACnD6H,MAAO,EACPC,MAAOvS,OAAOyG,KAAKwN,GAAc5b,OACjCma,QAAS,IA/BoB,mBA4BxB0B,EA5BwB,KA4BV5G,EA5BU,KAoD/B,OAnBA5K,qBAAU,WAcR,OAbAoQ,GAEEZ,GACEzJ,EAAQhN,QAAQC,IAAIE,aACpB6M,EAAQhL,SAAS/B,IAAIiC,cAGvB,WACOoW,GACHzG,EAAS,CAAC7C,KAAM,iBAIf,WACLuJ,GAAgB,MAEjB,CAAC1G,EAAUyG,EAActL,IAExBkL,EAEK,cAAC,GAAD,aAASlB,UAAW,kBAAMmB,GAAa,KAAYM,IAG1D,cAAC,EAAoBxL,SAArB,CAA8B7F,MAAK,2BAE9BiR,GAF8B,IAGjCrY,QAASA,EACTpB,OAAQA,IAJV,SAME,cAAC,EAAYqO,SAAb,CAAsB7F,MAAK,eACtBgR,GADL,SAGGH,OC7EMS,GAnEY,SAAC5R,GAAW,IAEnC6R,EACE7R,EADF6R,MAFkC,EAINpQ,oBAAS,GAJH,mBAI7BuN,EAJ6B,KAIpBC,EAJoB,OAKNxN,mBAAShJ,GALH,mBAK7BS,EAL6B,KAKpBuN,EALoB,OAMRhF,mBAAS/G,GAND,mBAM7B5C,EAN6B,KAMrB4O,EANqB,OAOJjF,mBAAS9F,GAPL,mBAO7BT,EAP6B,KAOnBiP,EAPmB,OAQF1I,oBAAS,GARP,mBAQ7B2P,EAR6B,KAQlBC,EARkB,KASpClR,qBAAU,WACR,IAAMqN,EAAOC,aAAaC,QAAQ,aAC5BC,EAAa/B,KAAKC,MAAM2B,GAC9B,GAAIG,GAAckE,EAAMC,OAAOC,SAAU,CACvC,IAAMxF,EAAWoB,EAAWkE,EAAMC,OAAOC,UACrCxF,IACF9F,EAAW8F,EAASrT,SACpBwN,EAAU6F,EAASzU,QACnBqS,EAAYoC,EAASrR,cAGxB,CAAC2W,IACJ,IAAMG,EAAI,2BACLzV,GADK,IAER2J,QAAS,CACPnL,EAAe,CACbC,gBAAiBE,EACjBD,cAAenD,IAEjBe,EAAc,CACZE,eAAgBG,OA6BhB+Y,EAAaC,YAAO,CACxBF,KAAMA,EACNG,MA3ByB,SAACnS,GAAD,OACzB,cAAC,EAAoBmG,SAArB,CAA8B7F,MAAO,CACnCpH,QAASA,EACTuN,WAAYA,EACZ3O,OAAQA,EACR4O,UAAWA,EACXxL,SAAUA,EACViP,YAAaA,EACb6E,QAASA,EACTC,WAAYA,GARd,SAUE,eAAC,GAAD,yBAGEmC,UAAWA,EACXC,aAAcA,GACVrR,GALN,cAOE,cAAC,IAAD,CAAOoS,OAAK,EAACC,KAAK,kBAAkBC,UAAWrM,KAC/C,cAAC,IAAD,CAAOmM,OAAK,EAACC,KAAK,kBAAlB,SACE,cAAC,GAAD,CAAYpF,OAAQ4E,EAAMC,OAAOC,SAAWF,EAAMC,OAAOC,SAAW,aAQ1EQ,WAAY,EACZC,MAAOxD,IAET,OAAO,cAACiD,EAAD,eAAgBjS,KCpEVyS,GAfH,SAASzS,GACnB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqS,KAAK,kBAAkBC,UAAWV,KACzC,cAAC,IAAD,CAAOS,KAAK,kBAAkBC,UAAWV,KACzC,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUnE,GAAG,mBAEf,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,IAAD,CAAUnE,GAAG,uBCLNwE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.978a03e2.chunk.js","sourcesContent":["export const MAX_HAND_SIZE = 8;\nexport const MAX_GROWTH_MINDSET = 5;\nexport const STATIC_ROOT = process.env.PUBLIC_URL;\nexport const MAX_TURN_COUNT = 48;\n","import { MAX_HAND_SIZE } from \"./Constants\";\n\n// A weighted set of outcomes.\n// The key represents the lowest roll of a 20-sided dice that will result in that outcome.\n// Example: {\n//  0: [], // 50%\n//  10: [BadEvent], // 45%\n//  19: [CatastrophicEvent], // 5%\n// }\n//\n// Generate no events by default.\nexport const RollOutcome = function(roll, weightedOutcomes) {\n  const threshold = roll - 1;\n\tconst rollIndices = Object.keys(weightedOutcomes).map(k => parseInt(k));\n  const selectedIndex = rollIndices.find(k => threshold >= k);\n\treturn weightedOutcomes[\"\" + selectedIndex];\n};\n\nexport const DrawCard = function(G, ctx) {\n  if (G.hand.length >= MAX_HAND_SIZE) {\n    return false;\n  }\n  if (G.deck.length <= 0) {\n    while (G.discard.length > 0) {\n      G.deck.push(G.discard.pop());\n    }\n  }\n  // If the deck is still empty, no draw.\n  // In other words, all cards are already in your hand.\n  if (G.deck.length <= 0) {\n    return false;\n  }\n  G.hand.push(G.deck.pop());\n  return true;\n}\n","import { MAX_GROWTH_MINDSET, MAX_HAND_SIZE } from './Constants';\nimport { DrawCard } from './Util';\n\n\nexport const BaseAction = {\n  displayName: null,\n  displayNameInShop: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  moneyCost: 0,\n  energyCost: 0,\n  producesGrowthMindset: 0,\n  producesMoney: 0,\n  producesAttention: 0,\n  producesEnergy: 0,\n  drawsCards: 0,\n  discardsCards: 0,\n  gainsCards: [],\n  forgetsOnDiscard: false,\n  forgetsSelf: false,\n  forgetsCards: 0,\n  // TODO: This is \"inheritance\" without any protection. Bad idea.\n  perform: function(G, ctx) {\n    // First check if we can afford the move.\n    if (G.energy <= 0) {\n      return false;\n    }\n    // Pay for the action.\n    G.energy--;\n    G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + this.producesGrowthMindset);\n    G.money += this.producesMoney;\n    G.attention += this.producesAttention;\n    G.energy += this.producesEnergy;\n    for (let i = 0; i < this.drawsCards; i++) {\n      DrawCard(G, ctx);\n    }\n    if (this.discardsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToDiscard = this.discardsCards;\n      ctx.events.setStage('discard');\n    }\n    if (this.forgetsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToForget = this.forgetsCards;\n      ctx.events.setStage('forget');\n    }\n    this.gainsCards.forEach((c) => G.discard.push(c));\n    return true;\n  },\n  buy: function(G, ctx) {\n    if (G.attention <= 0 || G.money < this.moneyCost || G.energy < this.energyCost) {\n      return false;\n    }\n    // Pay for the action.\n    G.attention--;\n    G.money -= this.moneyCost;\n    G.energy -= this.energyCost;\n    G.discard.push(this.id);\n    return true;\n  },\n};\n\nconst actionList = [\n  {\n    id: \"Card01\",\n    displayName: \"Card1\",\n    description: \"Make sure to play this every turn!\",\n    producesGrowthMindset: 1,\n  },\n  {\n    id: \"Card02\",\n    displayName: \"Card2\",\n    description: \"Getting money lets you buy stuff.\",\n    producesMoney: 1,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card03\",\n    displayName: \"Card3\",\n    description: \"Sometimes you just want to forget everything.\",\n    moneyCost: 2,\n    forgetsSelf: true,\n    forgetsCards: MAX_HAND_SIZE,\n  },\n  {\n    id: \"Card04\",\n    displayName: \"Card4\",\n    description: \"If you play this, you'll have to pick another card in your hand to discard.\",\n    moneyCost: 2,\n    drawsCards: 3,\n    discardsCards: 1,\n  },\n  {\n    id: \"Card05\",\n    displayName: \"Card5\",\n    description: \"Doing too much can make you tired.\",\n    moneyCost: 2,\n    producesGrowthMindset: 1,\n    producesMoney: 1,\n    producesEnergy: 1,\n    drawsCards: 1,\n    gainsCards: [\"fatigue\"],\n  },\n  {\n    id: \"Card06\",\n    displayName: \"Card6\",\n    description: \"More energy means you can play more actions!\",\n    moneyCost: 3,\n    producesEnergy: 2,\n    drawsCards: 1,\n  },\n  {\n    id: \"Card07\",\n    displayName: \"Card7\",\n    description: \"IDK\",\n    moneyCost: 3,\n  },\n  {\n    id: \"Card08\",\n    displayName: \"Card8\",\n    description: \"IDK\",\n    moneyCost: 4,\n  },\n  {\n    id: \"Card09\",\n    displayName: \"Card9\",\n    description: \"More money\",\n    moneyCost: 4,\n    producesMoney: 2,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card10\",\n    displayName: \"Card10\",\n    description: \"That's a lot of energy.\",\n    moneyCost: 4,\n    producesAttention: 1,\n    producesEnergy: 4,\n  },\n  {\n    id: \"Card11\",\n    displayName: \"Card11\",\n    description: \"Maybe there are better options.\",\n    moneyCost: 5,\n    producesEnergy: 1,\n    drawsCards: 2,\n  },\n  {\n    id: \"Card12\",\n    displayName: \"Card12\",\n    description: \"More more money\",\n    moneyCost: 6,\n    producesMoney: 3,\n    producesEnergy: 1,\n  },\n  {\n    id: \"fatigue\",\n    displayName: \"Fatigue\",\n    description: \"Better rest up or I'll just get even more tired later.\",\n    forgetsSelf: true,\n  },\n  {\n    id: \"summerHomework\",\n    displayName: \"Summer Homework\",\n    description: \"So tedious...\",\n    producesGrowthMindset: 1,\n    forgetsSelf: true,\n    forgetsOnDiscard: true,\n  },\n].map(c => ({\n  ...BaseAction,\n  ...c,\n}));\n\nexport const PatchDisplayName = function(action) {\n  return {\n    ...BaseAction,\n    ...action,\n    ...{\n      // Hack to back-populate the displayName.\n      displayNameInShop: action.displayNameInShop ? action.displayNameInShop : action.displayName\n    }\n  };\n}\nexport const PatchDisplayNames = function(actions) {\n  const patchedActions = {};\n  for (let [id, action] of Object.entries(actions)) {\n    patchedActions[id] = PatchDisplayName(action);\n  }\n  return patchedActions;\n}\n\nconst Actions = actionList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport const ActionsPlugin = (options) => {\n  const {\n    initialActions,\n  } = options;\n  return {\n    name: \"actions\",\n    setup: () => ({\n      actions: initialActions,\n    }),\n    api: ({ctx, data}) => ({\n      getActions: function():object {\n        // Get the nice re-hydrated version of events.\n        const patchedActions = {}\n        for (let id in data.actions) {\n          patchedActions[id] = this.getAction(id);\n        }\n        return patchedActions;\n      },\n      getAction: (actionId) => PatchDisplayName(data.actions[actionId]),\n    }),\n  };\n};\n\nexport default Actions;\n","export const BaseEvent = {\n  displayName: null,\n  image: null,\n  song: null,\n  description: \"<FLAVOR>\",\n  engrossedTurns: 0,\n  inspiredTurns: 0,\n  indebtedTurns: 0,\n  energizedTurns: 0,\n  addsCardsToShop: [],\n  addsCardsToDiscardPile: [],\n  apply: function(G, ctx) {\n    // TBD: Events can potentially have choices that spawn other events later.\n    if (this.inspiredTurns > 0) {\n      G.statuses.inspired = Math.max((G.statuses.inspired || 0), this.inspiredTurns);\n    }\n    if (this.energizedTurns > 0) {\n      G.statuses.energized = Math.max((G.statuses.energized || 0), this.energizedTurns);\n    }\n    if (this.engrossedTurns > 0) {\n      G.statuses.engrossed = Math.max((G.statuses.engrossed || 0), this.engrossedTurns);\n    }\n    if (this.indebtedTurns > 0) {\n      G.statuses.indebted = Math.max((G.statuses.indebted || 0), this.indebtedTurns);\n    }\n\n    for (let card of this.addsCardsToShop) {\n      G.actionShop.push(card);\n    }\n    for (let card of this.addsCardsToDiscardPile) {\n      G.discard.push(card);\n    }\n  }\n};\n\nconst eventList = [\n  {\n    id: \"SummerStart\",\n    image: \"middle_school_graduation.png\",\n    song: \"af.mp3\",\n    displayName: \"Congratulations\",\n    description: \"After a long year, you've finally graduated from middle school.\",\n    inspiredTurns: 2, // No growth mindset lost.\n    energizedTurns: 2, // One extra energy per turn.\n    addsCardsToDiscardPile: [\n      \"summerHomework\",\n      \"summerHomework\",\n      \"Card01\",\n    ],\n  },\n  {\n    id: \"SchoolStart\",\n    image: \"welcome_back.png\",\n    song: \"da.mp3\",\n    displayName: \"High School Begins\",\n    description: \"And just like that High School begins.\",\n    addsCardsToDiscardPile: [\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card01\",\n      \"Card01\",\n    ],\n    addsCardsToShop: [\n      \"Card02\",\n      \"Card02\",\n      \"Card04\",\n      \"Card05\",\n    ],\n  },\n].map(c => ({\n  ...BaseEvent,\n  ...c,\n}));\n\nconst Events = eventList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Events;\n","import { BaseEvent } from \"./Event\";\n\nexport class Schedule {\n  eventsByDay:object;\n\n  constructor(eventsByDay: object) {\n    this.eventsByDay = eventsByDay || {};\n  }\n\n  addEvent(turnNumber: number, eventId: string):void {\n    if (!(turnNumber in this.eventsByDay)) {\n      this.eventsByDay[turnNumber] = [];\n    }\n    this.eventsByDay[turnNumber].push(eventId);\n  }\n\n  getEvents(turnNumber: number):Array<string> {\n    if (turnNumber in this.eventsByDay) {\n      return this.eventsByDay[turnNumber]\n    }\n    return [];\n  }\n}\n\nexport const SchedulePlugin = (options) => {\n  const {\n    initialSchedule,\n    initialEvents,\n  } = options;\n  return {\n    name: \"schedule\",\n    setup: () => ({\n      schedule: initialSchedule,\n      events: initialEvents,\n    }),\n    api: ({ctx, data}) => ({\n      getCurrentEvents: function():Array<object> {\n        return new Schedule(data.schedule)\n          .getEvents(ctx.turn)\n          .map((eventId)=>({\n            id:eventId,\n            event: this.getEvent(eventId),\n          }));\n      },\n      addEvent: (turnNumber, eventId) => {\n        new Schedule(data.schedule).addEvent(turnNumber, eventId);\n      },\n      getEvents: function():object {\n        // Get the nice re-hydrated version of events.\n        const patchedEvents = {}\n        for (let id in data.events) {\n          patchedEvents[id] = this.getEvent(id);\n        }\n        return patchedEvents;\n      },\n      getEvent: (eventId) => ({\n        // Re-hydrate functions for use in the Game engine.\n        ...BaseEvent,\n        ...data.events[eventId]\n      }),\n      getRaw: () => {\n        return data;\n      }\n    }),\n  }\n}\n\nexport const INITIAL_SCHEDULE = {\n    0: [\"SummerStart\"],\n    2: [\"SchoolStart\"],\n};\n\nexport default Schedule;\n","import {\n  createContext,\n} from \"react\";\n\nconst LocalStorageContext = createContext({});\n\nexport default LocalStorageContext;\n","import { MAX_GROWTH_MINDSET } from \"./Constants\";\n\nexport const BaseStatus = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  apply: function(G, ctx) { }\n};\n\nconst statusList = [\n  {\n    id: \"energized\",\n    displayName: \"Energized\",\n    description: \"Gain an extra energy at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.energy += 1;\n    },\n  },\n  {\n    id: \"inspired\",\n    displayName: \"Inspired\",\n    description: \"Nullify the usual loss of growth mindset at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + 1);\n    },\n  },\n  {\n    id: \"engrossed\",\n    displayName: \"Engrossed\",\n    description: \"Start the turn with 0 attention.\",\n    apply: function(G, ctx) {\n      G.attention -= 1;\n    },\n  },\n  {\n    id: \"indebted\",\n    displayName: \"Indebted\",\n    description: \"Start the turn with -1 money.\",\n    apply: function(G, ctx) {\n      G.money -= 1;\n    },\n  },\n].map(c => ({\n  ...BaseStatus,\n  ...c,\n}));\n\nconst Statuses = statusList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Statuses;\n","import { INVALID_MOVE } from 'boardgame.io/core';\n\nimport Statuses from './Status';\n\nimport {\n  DrawCard\n} from './Util';\n\nconst INITIAL_BOARD = {\n  actionShop: [\n    /*\n    ...Array(2).fill(\"Card02\"),\n    ...Array(1).fill(\"Card06\"),\n    ...Array(2).fill(\"Card09\"),\n    ...Array(1).fill(\"Card10\"),\n    ...Array(1).fill(\"Card12\"),\n    ...(Object.keys(Actions).filter((c)=>Actions[c].isBuyable))\n    */\n  ].sort(),\n  deck: [\n    /*\n    // Turn 2. Will require some sacrifice.\n    \"Card02\", \"Card01\",\n    // Turn 1.\n    \"Card02\", \"Card02\", \"Card01\",\n    */\n  ],\n  hand: [],\n  discard: [],\n  growthMindsetPoints: 1,\n  cardsLeftToDiscard: 0,\n  cardsLeftToForget: 0,\n  statuses: {},\n  currentEvent: null,\n  backgroundImage: null,\n};\n\nconst STARTS_TURN_WITH = {\n  money: 0,\n  attention: 1,\n  energy: 1,\n};\n\nfunction SetupNewTurn(G, ctx) {\n  // First process any events.\n  console.log(ctx);\n  const events = ctx.schedule.getCurrentEvents();\n  console.log(events);\n  events.forEach(({id, event}) => {\n    event.apply(G, ctx);\n    G.currentEvent = id;\n  });\n  if (events.length === 0) {\n    // Don't bother with the Events UI if there's no events.\n    ctx.events.endStage();\n  }\n  // Discard the remainder of your hand.\n  while (G.hand.length > 0) {\n    let remainingCard = G.hand.pop();\n    if (!ctx.actions.getAction(remainingCard).forgetsOnDiscard) {\n      // You only get one chance to play certain kinds of cards.\n      G.discard.push(remainingCard);\n    }\n  }\n  const cardsToDraw = Math.min(5, G.growthMindsetPoints);\n  for (let i = 0; i < cardsToDraw; i++) {\n    DrawCard(G, ctx);\n  }\n  Object.assign(G, STARTS_TURN_WITH);\n  G.growthMindsetPoints--;\n\n  // Apply status effects last.\n  for (let [stat, dur] of Object.entries(G.statuses)) {\n    console.log(stat, dur);\n    if (dur > 0) {\n      Statuses[stat].apply(G, ctx);\n      G.statuses[stat]--;\n    } else {\n      delete G.statuses[stat];\n    }\n  }\n}\n\nexport const Apex2021 = {\n  setup: (ctx, setupData) => ({\n    ...INITIAL_BOARD,\n    ...STARTS_TURN_WITH\n  }),\n  moves: {\n    performAction: (G, ctx, handIndex) => {\n      const actionId = G.hand[handIndex];\n      const action = ctx.actions.getAction(actionId);\n      if (!action.perform(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      G.hand.splice(handIndex, 1);\n      if (!action.forgetsSelf) {\n        // YOLO cards don't do this.\n        G.discard.push(actionId);\n      }\n    },\n    buyAction: (G, ctx, shopIndex) => {\n      const actionId = G.actionShop[shopIndex];\n      const action = ctx.actions.getAction(actionId);\n      if (!action.buy(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      G.actionShop.splice(shopIndex, 1);\n    },\n    endTurn: (G, ctx) => {\n      ctx.events.endTurn();\n    },\n  },\n  turn: {\n    activePlayers: { all: \"showEvent\" },\n    onBegin: (G, ctx) => ( SetupNewTurn(G, ctx) ),\n    onEnd: (G, ctx) => {\n      if (G.growthMindsetPoints <= 0) {\n         ctx.events.endGame(\"fixed-mindset\");\n      }\n      //return G;\n    },\n    stages: {\n      showEvent: {\n        moves: {\n          chooseOption: (G, ctx, optionIndex) => {\n            // TBD: Events don't have any choices yet.\n          },\n          dismiss: (G, ctx) => {\n            G.backgroundImage = ctx.schedule.getEvent(G.currentEvent).image;\n            G.currentEvent = null;\n            ctx.events.endStage();\n          },\n        },\n      },\n      discard: {\n        moves: {\n          discardAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToDiscard);\n            const actionId = G.hand[handIndex];\n            G.hand.splice(handIndex, 1);\n            G.discard.push(actionId);\n            if (G.hand.length === 0) {\n              G.cardsLeftToDiscard = 0;\n            } else {\n              G.cardsLeftToDiscard--;\n            }\n            if (G.cardsLeftToDiscard <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      },\n      forget: {\n        moves: {\n          forgetAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToForget);\n            G.hand.splice(handIndex, 1);\n            if (G.hand.length === 0) {\n              G.cardsLeftToForget = 0;\n            } else {\n              G.cardsLeftToForget--;\n            }\n            if (G.cardsLeftToForget <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      }\n    }\n  },\n};\n","import React from 'react';\r\n\r\nconst GameContext = React.createContext({});\r\n\r\nexport default GameContext;\r\n","import React, {\n  useContext,\n} from \"react\";\n\nimport {\n  Badge,\n  ProgressBar,\n  Table,\n} from \"react-bootstrap\";\n\nimport { MAX_GROWTH_MINDSET } from \"../Constants\";\nimport GameContext from \"../GameContext\";\n\nconst GROWTH_MINDSET_COLOR = {\n  0: \"danger\",\n  1: \"danger\",\n  2: \"danger\",\n  3: \"warning\",\n  4: \"success\",\n  5: \"info\",\n};\n\n\nfunction GameInfo() {\n  const {\n    G,\n    ctx,\n  } = useContext(GameContext);\n  const {\n    growthMindsetPoints,\n    money,\n    attention,\n    energy\n  } = G;\n  return (\n    <Table responsive bordered id=\"player-info\">\n      <thead>\n        <tr className=\"info-label-row\">\n          <th>Day #</th>\n          <th>Growth Mindset</th>\n          <th>Money</th>\n          <th>Attention</th>\n          <th>Energy</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"info-data-row\">\n          <td><Badge variant=\"dark\">{ctx.turn}</Badge></td>\n          <td>\n            <ProgressBar\n              now={(growthMindsetPoints * 100.0 /MAX_GROWTH_MINDSET).toPrecision(3)}\n              label={growthMindsetPoints}\n              variant={GROWTH_MINDSET_COLOR[growthMindsetPoints]}\n              animated={growthMindsetPoints === MAX_GROWTH_MINDSET}\n            />\n          </td>\n          <td><Badge variant=\"warning\">{money}</Badge></td>\n          <td><Badge variant=\"primary\">{attention}</Badge></td>\n          <td><Badge variant=\"success\">{energy}</Badge></td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GameInfo;\n","import React, {\n  useEffect,\n  useContext,\n} from \"react\";\n\nimport {\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport GameContext from \"../GameContext\";\n\nfunction CardOrCards(number) {\n  return \"\" + number + \" \" + (number > 1 ? \"cards\" : \"card\");\n}\n\nexport const Description = (props) => {\n  const { description, runEffect, className, passthrough } = props;\n  useEffect(\n    () => {\n      if (runEffect) {\n        runEffect();\n      }\n    }\n  );\n  return (\n    <Tooltip id=\"keyword-description\" className={className} {...passthrough}>\n      {description}\n    </Tooltip>\n  );\n};\n\nexport const Keyword = (props) => {\n  const { value, description, tooltipClassName, runEffect } = props;\n  const renderDescription = (descriptionProps) => (\n    <Description\n      description={description}\n      className={tooltipClassName}\n      runEffect={runEffect}\n      passthrough={descriptionProps}\n    />\n  );\n  return (\n    <OverlayTrigger\n      placement=\"right\"\n      overlay={renderDescription}\n    >\n      <span className=\"card-keyword\">{value}</span>\n    </OverlayTrigger>\n  );\n};\n\nexport const Discard = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Discard \" + number}\n      description={\"Place cards from your hand into your discard pile until you have placed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const Draw = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Draw \" + number}\n      description={\"Place \" + CardOrCards(number) + \" from your deck into your hand. If your deck is empty, your discard pile will automatically be shuffled into your deck.\"}\n    />\n  );\n};\n\nexport const Forget = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Forget \" + number}\n      description={\"Permanently remove cards from your hand until you have removed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const ForgetSelf = () => {\n  return (\n    <Keyword\n      value={\"Forget Self\"}\n      description={\"Permanently remove this card from your hand upon being played.\"}\n    />\n  );\n};\n\nexport const Gain = (props) => {\n  const { cardId, renderCard, tooltipClassName, runEffect } = props;\n  const {\n    actions\n  } = useContext(GameContext);\n  const card = renderCard({\n    cardId: cardId,\n    onClick: s=>{},\n    ...actions[cardId],\n  });\n  return (\n    <Keyword\n      value={\"Gain \" + actions[cardId].displayName}\n      description={card}\n      tooltipClassName={tooltipClassName}\n      runEffect={runEffect}\n    />\n  );\n};\n\nexport const BoostGrowthMindset = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"+\" + number + \" Growth Mindset\"}\n      description={\"Growth Mindset represents the number of cards you can draw at the beginning of the next turn. You lose one point per turn, and Growth Mindset is capped at 5.\"}\n    />\n  );\n};\n\nexport const YOLO = (props) => {\n  return (\n    <Keyword\n      value={\"#YOLO\"}\n      description={\"If this card remains in your hand at the end of the turn, it will be permanently removed from your deck.\"}\n    />\n  );\n};\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Badge,\n  Button,\n  Container,\n  Col,\n  Card,\n  CardColumns,\n  ListGroup,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\n\nimport { run as runHolder } from 'holderjs/holder';\nimport GameContext from \"../GameContext\";\nimport {\n  BoostGrowthMindset,\n  Discard,\n  Draw,\n  Forget,\n  ForgetSelf,\n  Gain,\n  YOLO,\n} from \"./Keyword\";\n\nfunction ActionCardFromStaticActions(props) {\n  const { cardId } = props;\n  const {\n    actions,\n  } = useContext(GameContext);\n  console.log(actions);\n  return <ActionCard {...props} {...actions[cardId]} />\n}\n\nexport function ActionCard(props) {\n  const [isSelected, setIsSelected] = useState(false);\n  const {\n    areaType,\n    onClick,\n    ref,\n    gameStage,\n    displayName,\n    displayNameInShop,\n    image,\n    description,\n    moneyCost,\n    energyCost,\n    producesGrowthMindset,\n    producesMoney,\n    producesAttention,\n    producesEnergy,\n    drawsCards,\n    discardsCards,\n    gainsCards,\n    forgetsOnDiscard,\n    forgetsSelf,\n    forgetsCards,\n  } = props;\n  // Hack to render sized placeholder before we have assets.\n  useEffect(() => {\n    runHolder(\"card-image\");\n  });\n\n  return (\n    <Card\n      ref = {ref}\n      onClick={onClick}\n      onMouseEnter={() => setIsSelected(true)}\n      onMouseLeave={() => setIsSelected(false)}\n      bg={gameStage === \"discard\" || gameStage === \"forget\" ? \"danger\" : null}\n      border={isSelected ? \"warning\" : \"secondary\"}\n      className=\"action-card\"\n    >\n      <Card.Header>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Makes:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {producesMoney}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"primary\">\n                {producesAttention}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {producesEnergy}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{areaType === \"Shop\" && displayNameInShop ? displayNameInShop : displayName}</Card.Title>\n        <Card.Img src={image != null ? image : \"holder.js/256x128\"} className=\"card-image\"/>\n        <ListGroup className=\"extra-rules\">\n          { \n            (producesGrowthMindset > 0) && (\n              <ListGroup.Item key=\"growth-mindset\"><BoostGrowthMindset number={producesGrowthMindset}/></ListGroup.Item>\n            )\n          }\n          { \n            (drawsCards > 0) && (\n              <ListGroup.Item key=\"draws-cards\"><Draw number={drawsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (discardsCards > 0) && (\n              <ListGroup.Item key=\"discards-cards\"><Discard number={discardsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsOnDiscard) && (\n              <ListGroup.Item key=\"forgets-on-discard\"><YOLO/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsSelf) && (\n              <ListGroup.Item key=\"forgets-self\"><ForgetSelf/></ListGroup.Item>\n            )\n          }\n          { \n            (forgetsCards > 0) && (\n              <ListGroup.Item key=\"forgets-cards\"><Forget number={forgetsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            gainsCards.map((cardId, gainedCardIndex) =>\n              <ListGroup.Item key={\"gains-\" + gainedCardIndex}>\n                <Gain\n                  cardId={cardId}\n                  renderCard={ActionCard}\n                  tooltipClassName=\"card-preview\"\n                  runEffect={()=>runHolder(\"card-image\")}\n                />\n              </ListGroup.Item>\n            )\n          }\n        </ListGroup>\n        <Card.Text className=\"flavor\">\n          {description}\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Costs:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {moneyCost}\n              </Badge>\n            </Col>\n            <Col xs={1}/>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {energyCost}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction ActionList(props) {\n  const { actionsList, className, onClick, gameStage } = props;\n  const actionCards = actionsList.map((actionId, slotId) => (\n    <ActionCardFromStaticActions\n      areaType={className}\n      cardId={actionId}\n      key={slotId}\n      onClick={() => onClick(slotId)}\n      gameStage={gameStage} />\n  ));\n  return (\n    <CardColumns className={\"action-list-\" + className}>\n      {actionCards.length > 0 ? actionCards :\n        <Badge><h1>No Actions Available</h1></Badge>}\n    </CardColumns>\n  );\n}\n\nfunction ActionArea() {\n  const {\n    G,\n    ctx,\n    moves,\n  } = useContext(GameContext);\n  const {\n    hand,\n    actionShop,\n    deck,\n    discard,\n  } = G;\n  const noop = (x) => {};\n  const isDiscard = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"discard\";\n  const isForget = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"forget\";\n  const gameStage = isDiscard ? \"discard\" : isForget ? \"forget\" : null;\n  const actionData = {\n    \"Hand\": {\n      actions: hand,\n      onClick: isDiscard ? moves.discardAction: isForget ? moves.forgetAction : moves.performAction\n    },\n    \"Shop\": {\n      actions: actionShop,\n      onClick: isDiscard ? noop : moves.buyAction\n    },\n    \"Deck\": {\n      actions: [...deck].sort(), // Hide the order of the cards.\n      onClick: noop\n    },\n    \"Discard Pile\": {\n      actions: discard,\n      onClick: noop\n    },\n  };\n  const [tab, setTab] = useState(\"Hand\");\n  const tabs = Object.keys(actionData).map((areaType) => (\n    <Tab eventKey={areaType} title={areaType} key={areaType}>\n      <ActionList\n        actionsList={actionData[areaType].actions}\n        className={areaType}\n        onClick={actionData[areaType].onClick}\n        gameStage={gameStage}\n      />\n    </Tab>\n  ));\n  return (\n    <div id=\"game-tabs\">\n      <Tabs id=\"actions\" activeKey={tab} onSelect={(k)=>setTab(k)}>\n        {tabs}\n        <Tab eventKey=\"next-turn\" title=\"Next Turn\" key=\"next-turn\">\n          <Button\n            onClick={() => {\n              moves.endTurn();\n              setTab(\"Hand\");\n            }}\n            className=\"confirm-next-turn\"\n          >\n            Confirm End Turn\n          </Button>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default ActionArea;\n","import React, {\n  createRef,\n  useEffect,\n  useState,\n} from \"react\";\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nconst MusicPlayer = (props) => {\n  const {\n    songUrl\n  } = props;\n  const [currentSong, setCurrentSong] = useState(null);\n  const player = createRef();\n  useEffect(() => {\n    if (songUrl === currentSong) {\n      return;\n    }\n    console.log(`Playing song: ${songUrl}`);\n    player.current.src = `${STATIC_ROOT}/${songUrl}`;\n    player.current.play();\n    setCurrentSong(songUrl);\n  }, [currentSong, player, songUrl]);\n  return (\n    <audio ref={player} loop/>\n  );\n};\n\nexport default MusicPlayer;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Button,\n  Container,\n  Col,\n  Modal,\n  Row,\n} from \"react-bootstrap\";\n\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nimport GameContext from \"../GameContext\";\nimport GameInfo from \"./GameInfo\";\nimport ActionArea from \"./ActionArea\";\nimport MusicPlayer from \"./MusicPlayer\";\n\nexport function EventModal(props) {\n  const {\n    event,\n    show,\n    onHide,\n  } = props;\n  const {\n    displayName,\n    description,\n    image,\n  } = event;\n  const styles = {\n    backgroundImage: image == null ? null : `url(${STATIC_ROOT}/${image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n  };\n  return (\n    <Modal\n      size = \"lg\"\n      show = {show}\n      onHide = {onHide}\n      style = {styles}\n      className = \"event-modal\"\n      centered\n      {...props}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          {displayName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {description}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>Continue</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nfunction Event(props) {\n  const {\n    G,\n    moves,\n    events,\n    playSong,\n  } = useContext(GameContext);\n  const show = G.currentEvent in events;\n  const onHide = () => moves.dismiss();\n  const ev = events[G.currentEvent];\n  useEffect(() => {\n    if (ev && ev.song && show) {\n      playSong(ev.song);\n    }\n  }, [ev, playSong, show]);\n  if (!show) {\n    return <></>;\n  }\n  return <EventModal\n    event={ev}\n    show={show}\n    onHide={onHide}\n  />\n}\n\nconst Board = function(props) {\n  const {\n    G,\n    ctx,\n    moves,\n    plugins,\n  } = useContext(GameContext);\n  const actions = plugins.actions.api.getActions();\n  const events = plugins.schedule.api.getEvents();\n  const [songUrl, playSong] = useState(null);\n  const {\n    backgroundImage\n  } = G;\n  const styles = {\n    backgroundImage: backgroundImage == null ? null : `url(${STATIC_ROOT}/${backgroundImage})`,\n    backgroundSize: \"cover\",\n  };\n  // Game has started.\n  return (\n    <GameContext.Provider value={{\n      G: G,\n      ctx: ctx,\n      moves: moves,\n      actions: actions,\n      events: events,\n      songUrl: songUrl,\n      playSong: playSong,\n    }}>\n      <div style={styles} id=\"bg-container\"/>\n      <div id=\"game-wrapper\">\n        <Container fluid id=\"game-container\">\n          <Row>\n            <Col>\n              <GameInfo/>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <ActionArea/>\n            </Col>\n          </Row>\n        </Container>\n        <Event/>\n      </div>\n      <MusicPlayer songUrl={songUrl}/>\n    </GameContext.Provider>\n  );\n}\n\nexport default Board;\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  ListGroup,\r\n  Modal,\r\n  Nav,\r\n  OverlayTrigger,\r\n  Row,\r\n  Tab,\r\n  Table,\r\n  Tabs,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  Multiselect,\r\n} from \"multiselect-react-dropdown\";\r\n\r\nimport { EventModal } from \"./Board\";\r\nimport GameContext from \"../GameContext\";\r\nimport { MAX_TURN_COUNT } from \"../Constants\";\r\nimport { ActionCard } from \"./ActionArea\";\r\nimport {\r\n  BaseAction,\r\n} from \"../Action\";\r\nimport { BaseEvent } from \"../Event\";\r\nimport LocalStorageContext from \"../LocalStorageContext\";\r\n\r\n// Cute hack from https://gist.github.com/mattwiebe/1005915\r\nfunction unCamelCase(input){return input.replace(/([a-z])([A-Z])/g,'$1 $2').replace(/\\b([A-Z]+)([A-Z])([a-z])/,'$1 $2$3').replace(/^./,function(s){return s.toUpperCase();})}\r\n\r\nfunction EntityEditor(props) {\r\n  const { actionId, eventId } = props;\r\n  const {\r\n    actions, setActions,\r\n    events, setEvents,\r\n  } = useContext(LocalStorageContext);\r\n  const entityId = actionId ? actionId : eventId;\r\n  const entity = actionId ? actions[actionId] : events[eventId];\r\n  console.log(actions);\r\n  console.log(entity);\r\n  const entities = actionId ? actions : events;\r\n  const updaters = {};\r\n\r\n  for (let field of Object.keys(entity)) {\r\n    updaters[field] = (e, maybeOption) => {\r\n      const oldValue = entities[entityId][field];\r\n      let newValue;\r\n      switch (typeof(oldValue)) {\r\n        case \"string\":\r\n          newValue = e.target.value;\r\n          break;\r\n        case \"number\":\r\n          newValue = parseInt(e.target.value);\r\n          break;\r\n        case \"boolean\":\r\n          newValue = e.target.checked;\r\n          break;\r\n        case \"object\":\r\n          switch(maybeOption.action) {\r\n            case \"deselect-option\":\r\n              newValue = [\r\n                ...oldValue,\r\n                maybeOption.option.value,\r\n              ];\r\n              break;\r\n            case \"remove-value\":\r\n              let sequenceIdToRemove = maybeOption.removedValue.sequenceId;\r\n              newValue = [...oldValue];\r\n              newValue.splice(sequenceIdToRemove, 1);\r\n              break;\r\n            default:\r\n              newValue = e.map(o=>o.value);\r\n              break;\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Don't know how to serialize ${field} for value ${e.target.value}`);\r\n      }\r\n      const updatedEntities = {\r\n        ...entities,\r\n        ...{\r\n          [entityId]: {\r\n            ...entities[entityId],\r\n            [field]: newValue\r\n          }\r\n        }\r\n      };\r\n      const updateEntities = actionId ? setActions : setEvents;\r\n      updateEntities(updatedEntities);\r\n    }\r\n  }\r\n  const formGroups = Object.entries(entity)\r\n    .filter(([field, value]) => (\r\n      value !== null &&\r\n      typeof(value) !== \"function\" &&\r\n      // TODO: Support image uploading.\r\n      field !== \"image\" &&\r\n      // TODO: Support re-identifying.\r\n      field !== \"id\"\r\n    ))\r\n    .map(([field, value]) => {\r\n      let input;\r\n      // The bogus key is a cute hack to force re-render of the defaultValue.\r\n      switch (typeof(value)) {\r\n        case \"string\":\r\n          input = (\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={entity[field]}\r\n              onChange={updaters[field]}\r\n            />\r\n          );\r\n          break;\r\n        case \"number\":\r\n          input = (\r\n            <OverlayTrigger\r\n              placement=\"left\"\r\n              overlay={<Tooltip>{entity[field]}</Tooltip>}\r\n            >\r\n              <Form.Control\r\n                type=\"range\"\r\n                value={entity[field]}\r\n                max={10}\r\n                onChange={updaters[field]}\r\n              />\r\n            </OverlayTrigger>\r\n          );\r\n          break;\r\n        case \"boolean\":\r\n          input = (\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={entity[field]}\r\n              onChange={updaters[field]}\r\n            />\r\n          );\r\n          break;\r\n        case \"object\":\r\n          // TODO: Bogus check. Actually add a type schema.\r\n          if (field.indexOf(\"Cards\") >= 0) {\r\n            let relations = actions;\r\n            const options = Object.entries(relations).map(([id, value])=>({\r\n              label: value.displayName,\r\n              value: id\r\n            }));\r\n            const selectedValues = entity[field].map((id, sequenceId)=>({\r\n              label: relations[id].displayName,\r\n              value: id,\r\n              // This is just so we know which item was removed from the widget.\r\n              sequenceId: sequenceId\r\n            }));\r\n            input = (\r\n              <Select\r\n                id={`${entityId}.${field}`}\r\n                isMulti\r\n                hideSelectedOptions={false}\r\n                value={selectedValues}\r\n                onChange={updaters[field]}\r\n                options={options}\r\n                displayValue=\"name\"\r\n              />\r\n            );\r\n          } else {\r\n            throw new Error(`Unrecognized value ${value} for ${field}.`);\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Unrecognized value type ${value} for ${field}.`);\r\n      }\r\n      return (\r\n        <Form.Group as={Row} key={`edit-${field}`} controlId={`${entityId}.${field}`}>\r\n          <Form.Label column sm={4}>{unCamelCase(field)}</Form.Label>\r\n          <Col sm={8}>\r\n            {input}\r\n          </Col>\r\n        </Form.Group>\r\n      );\r\n    });\r\n  return <>\r\n      {formGroups}\r\n  </>\r\n}\r\n\r\nfunction ActionsTab(props) {\r\n  const {\r\n    actions,\r\n    setActions,\r\n  } = useContext(LocalStorageContext);\r\n  const [ selectedAction, setSelectedAction ] = useState(Object.keys(actions)[0]);\r\n  const navs = Object.entries(actions).map(([id, action]) => (\r\n    <Nav.Item key={id}>\r\n      <Nav.Link eventKey={id}>{action.displayName}</Nav.Link>\r\n    </Nav.Item>\r\n  ));\r\n  const newAction = () => {\r\n    const newActionId = \"Card\" + (Object.keys(actions).length + 1);\r\n    const updatedActions = {\r\n      ...actions,\r\n      [newActionId] : {\r\n        ...BaseAction,\r\n        id: newActionId,\r\n        displayName: newActionId,\r\n        displayNameInShop: newActionId,\r\n      }\r\n    };\r\n    setActions(updatedActions);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col id=\"action-nav\" sm={2}>\r\n        <Nav\r\n          variant=\"pills\"\r\n          className=\"flex-column\"\r\n          defaultActiveKey={selectedAction}\r\n          onSelect={setSelectedAction}\r\n        >\r\n          {navs}\r\n          <Button onClick={newAction} variant=\"light\">+</Button>\r\n        </Nav>\r\n      </Col>\r\n      <Col sm={8}>\r\n        <div id=\"card-editor-card-container\">\r\n          <ActionCard cardId={selectedAction} onClick={()=>{}} {...actions[selectedAction]}/>\r\n        </div>\r\n        <EntityEditor actionId={selectedAction}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction EventPreview(props) {\r\n  const {\r\n    eventId\r\n  } = props;\r\n  const {\r\n    events,\r\n  } = useContext(LocalStorageContext);\r\n  const event = events[eventId];\r\n  const [ showEventPreview, setShowEventPreview ] = useState(false);\r\n  const onButtonClick = () => setShowEventPreview(true);\r\n  const onEventPreviewClose = () => setShowEventPreview(false);\r\n  return <>\r\n    <Button onClick={onButtonClick}>Show Preview</Button>\r\n    <EventModal event={event} show={showEventPreview} onHide={onEventPreviewClose}/>\r\n  </>\r\n}\r\n\r\nfunction EventsTab(props) {\r\n  const {\r\n    events,\r\n    setEvents,\r\n  } = useContext(LocalStorageContext);\r\n  const [ selectedEvent, setSelectedEvent ] = useState(Object.keys(events)[0]);\r\n  const navs = Object.entries(events).map(([id, event]) => (\r\n    <Nav.Item key={id}>\r\n      <Nav.Link eventKey={id}>{event.displayName}</Nav.Link>\r\n    </Nav.Item>\r\n  ));\r\n  const newEvent = () => {\r\n    const newEventId = \"Event\" + (Object.keys(events).length + 1);\r\n    const updatedEvents = {\r\n      ...events,\r\n      [newEventId] : {\r\n        ...BaseEvent,\r\n        id: newEventId,\r\n        displayName: newEventId,\r\n      }\r\n    };\r\n    setEvents(updatedEvents);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col id=\"action-nav\" sm={2}>\r\n        <Nav\r\n          variant=\"pills\"\r\n          className=\"flex-column\"\r\n          onSelect={setSelectedEvent}\r\n          defaultActiveKey={selectedEvent}\r\n        >\r\n          {navs}\r\n          <Button onClick={newEvent} variant=\"light\">+</Button>\r\n        </Nav>\r\n      </Col>\r\n      <Col sm={8}>\r\n        <EventPreview eventId={selectedEvent}/>\r\n        <EntityEditor eventId={selectedEvent}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction ScheduleTab(props) {\r\n  const {\r\n    schedule,\r\n    setSchedule,\r\n    events,\r\n  } = useContext(LocalStorageContext);\r\n  const scheduleUpdater = (turn, updatedEvents) => {\r\n    setSchedule({\r\n      ...schedule,\r\n      [turn]: updatedEvents.map((e) => e.id),\r\n    });\r\n  };\r\n  const options = Object.entries(events).map(([eventId, event]) => ({\r\n    id: eventId,\r\n    name: event.displayName,\r\n  }));\r\n  const MAX_TURNS_PER_ROW = 6;\r\n  // Assume divisibility by 6.\r\n  const MAX_TURNS_PER_COLUMN = MAX_TURN_COUNT / MAX_TURNS_PER_ROW;\r\n  const rows = [...Array(MAX_TURNS_PER_COLUMN).keys()].map((row) => {\r\n    const cols = [...Array(MAX_TURNS_PER_ROW).keys()].map((col) => {\r\n      const turn = row * MAX_TURNS_PER_ROW + col;\r\n      const selectedValues = (schedule[turn] || []).map((eventId) => ({\r\n        id: eventId,\r\n        name: events[eventId].displayName,\r\n      }));\r\n      return (\r\n        <ListGroup.Item sm={4} key={`${row}.${col}`}>\r\n          <p>Turn {turn + 1}:</p>\r\n          <Multiselect\r\n            id={`${turn}.events`}\r\n            selectedValues={selectedValues}\r\n            onSelect={(l)=>scheduleUpdater(turn, l)}\r\n            onRemove={(l)=>scheduleUpdater(turn, l)}\r\n            options={options}\r\n            displayValue=\"name\"\r\n          />\r\n        </ListGroup.Item>\r\n      );\r\n    });\r\n    return (\r\n      <ListGroup horizontal={\"lg\"} key={row}>\r\n        {cols}\r\n      </ListGroup>\r\n    );\r\n  });\r\n  return <div id=\"schedule-editor\">\r\n    {rows}\r\n  </div>;\r\n}\r\n\r\nfunction ImportButton(props) {\r\n  const { dispatch } = props;\r\n  const [showImport, setShowImport] = useState(false);\r\n  const [newSaveFileName, setNewSaveFileName] = useState(\"<UNKNOWN>\");\r\n  const [newSaveData, setNewSaveData] = useState(null);\r\n  const [newSaveDataRaw, setNewSaveDataRaw] = useState(\"\");\r\n  const [dataErrors, setDataErrors] = useState(\"Please paste your data.\");\r\n  const importSave = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (newSaveData) {\r\n      dispatch({\r\n        type: \"new-save\",\r\n        saveFile: newSaveData\r\n      });\r\n      setShowImport(false);\r\n    }\r\n  };\r\n  const validateData = (evt) => {\r\n    setNewSaveDataRaw(evt.target.value)\r\n  };\r\n  const doValidate = (rawSaveData) => {\r\n    try {\r\n      const parsedData = JSON.parse(rawSaveData);\r\n      if (!parsedData.name) {\r\n        throw new Error(\"Could not parse save file name.\");\r\n      }\r\n      if (!parsedData.actions) {\r\n        throw new Error(\"Could not parse actions.\");\r\n      }\r\n      if (!parsedData.events) {\r\n        throw new Error(\"Could not parse events.\");\r\n      }\r\n      if (!parsedData.schedule) {\r\n        throw new Error(\"Could not parse schedule.\");\r\n      }\r\n      setNewSaveFileName(parsedData.name);\r\n      setNewSaveData(parsedData);\r\n      setDataErrors(null);\r\n    } catch (error) {\r\n      setNewSaveFileName(\"<UNKNOWN>\");\r\n      setNewSaveData(null);\r\n      setDataErrors(error.toString());\r\n    }\r\n  }\r\n  useEffect(()=> {\r\n    doValidate(newSaveDataRaw);\r\n  }, [newSaveDataRaw]);\r\n  return (\r\n    <>\r\n      <Button onClick={()=>setShowImport(true)}>Import</Button>\r\n      <Modal\r\n        size=\"lg\"\r\n        show={showImport}\r\n        onHide={() => setShowImport(false)}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Form noValidate onSubmit={importSave}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal title</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"import-name\">\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control type=\"text\" value={newSaveFileName} required disabled/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"import-data\">\r\n              <Form.Label>Data:</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={16}\r\n                value={newSaveDataRaw}\r\n                onChange={validateData}\r\n                placeholder=\"Paste your data here.\"\r\n                isValid={dataErrors === null}\r\n                isInvalid={dataErrors !== null}\r\n              />\r\n              <Form.Control.Feedback type={dataErrors ? \"invalid\" : \"valid\"}>\r\n                {dataErrors}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => setShowImport(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={newSaveData === null}>Import Save</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TestChanges(props) {\r\n  const {\r\n    saveId,\r\n  } = props;\r\n  const handleSave = (state, action) => {\r\n    switch (action.type) {\r\n      case \"load-all\":\r\n        return action.saveFiles;\r\n      case \"new-save\":\r\n        const newSaveId = Object.keys(state).length;\r\n        return {\r\n          ...state,\r\n          [newSaveId]: {\r\n            ...action.saveFile,\r\n            timestamp: Date.now(),\r\n          }\r\n        };\r\n      default:\r\n        throw new Error(`Unrecognized action type: ${action.type}`);\r\n    }\r\n  };\r\n  const [ saveFiles, dispatch ] = useReducer(handleSave, {});\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"saveFiles\");\r\n    const knownSaves = JSON.parse(json);\r\n    if (knownSaves) {\r\n      dispatch({\r\n        type: \"load-all\",\r\n        saveFiles: knownSaves\r\n      });\r\n    }\r\n  }, [saveId]);\r\n  useEffect(() => {\r\n    if (Object.keys(saveFiles).length > 0) {\r\n      const json = JSON.stringify(saveFiles);\r\n      localStorage.setItem(\"saveFiles\", json);\r\n    }\r\n  }, [saveFiles]);\r\n  const {\r\n    actions,\r\n    events,\r\n    schedule,\r\n  } = useContext(LocalStorageContext);\r\n  const [newSaveFileName, updateNewSaveFileName] = useState(\"Some Name\");\r\n  const newSave = () => {\r\n    dispatch({\r\n      type: \"new-save\",\r\n      saveFile: {\r\n        name: newSaveFileName,\r\n        actions: actions,\r\n        events: events,\r\n        schedule: schedule,\r\n      }\r\n    });\r\n  };\r\n  const doCopy = (saveId) => {\r\n    navigator.clipboard.writeText(JSON.stringify(saveFiles[saveId]));\r\n  };\r\n  const newSaveRow = (\r\n    <tr id=\"unsaved-row\" key=\"unsaved-row\">\r\n      <td>{Object.keys(saveFiles).length}</td>\r\n      <td>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={newSaveFileName}\r\n          onChange={(ev) => updateNewSaveFileName(ev.target.value)}\r\n        />\r\n      </td>\r\n      <td>Now</td>\r\n      <td>\r\n        <Button onClick={newSave}>Save Current</Button>&nbsp;\r\n        <ImportButton dispatch={dispatch}/>\r\n      </td>\r\n      <td><Button disabled>Save to export</Button></td>\r\n      <td>Save to launch</td>\r\n    </tr>\r\n  );\r\n  const generateRow = (saveId, name, timestamp) => (\r\n    <tr key={`save-${saveId}`}>\r\n      <td>{saveId}</td>\r\n      <td>{name}</td>\r\n      <td>{timestamp ? new Date(timestamp).toLocaleString() : \"N/A\"}</td>\r\n      <td><Link to={`/${saveId}/edit`}><Button>Load</Button></Link></td>\r\n      <td><Button onClick={()=>doCopy(saveId)}>Copy to Clipboard</Button></td>\r\n      <td><Link to={`/${saveId}/game`} target=\"_blank\"><Button>Launch Game</Button></Link></td>\r\n    </tr>\r\n  );\r\n  const saveRows = Object.entries(saveFiles).map(([saveId, saveFile]) => (\r\n    generateRow(saveId, saveFile.name, saveFile.timestamp)\r\n  )).reverse();\r\n  return (\r\n    <Table striped bordered hover size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>Save/Load</th>\r\n          <th>Export</th>\r\n          <th>Launch</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {newSaveRow}\r\n        {saveRows}\r\n        {generateRow(\"static\", \"Hard Coded Configuration\", null)}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nfunction CheckDirty(original, edited) {\r\n  console.log(original, edited);\r\n  for (let [id, entity] of Object.entries(edited)) {\r\n    if (!(id in original)) {\r\n      return true;\r\n    }\r\n    for (let [k, v] of Object.entries(entity)) {\r\n      if (v !== original[id][k]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction GameEditor(props) {\r\n  const { saveId } = props;\r\n  const localStorageContext = useContext(LocalStorageContext);\r\n  const {\r\n    actions,\r\n    setActions,\r\n    events,\r\n    setEvents,\r\n    schedule,\r\n    setSchedule,\r\n    isDebug,\r\n    setIsDebug,\r\n    ...remainder\r\n  } = localStorageContext;\r\n  // We need to store dirty copies of the game configuration to avoid reloading\r\n  // whenever we edit anything.\r\n  // TODO: Migrate this to redux.\r\n  const [editedActions, setEditedActions] = useState(actions);\r\n  const [editedEvents, setEditedEvents] = useState(events);\r\n  const [editedSchedule, setEditedSchedule] = useState(schedule);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  useEffect(() => {\r\n    if (CheckDirty(actions, editedActions) ||\r\n        CheckDirty(events, editedEvents) ||\r\n        CheckDirty(schedule, editedSchedule)\r\n    ) {\r\n      setIsDirty(true);\r\n    } else {\r\n      setIsDirty(false);\r\n    }\r\n  }, [actions, editedActions, events, editedEvents, schedule, editedSchedule]);\r\n\r\n  useEffect(() => {\r\n    // No point in having debug mode on for the editor.\r\n    if (isDebug) {\r\n      setIsDebug(false);\r\n    }\r\n  }, [isDebug, setIsDebug]);\r\n  return (\r\n    <LocalStorageContext.Provider value={{\r\n      actions: editedActions,\r\n      setActions: setEditedActions,\r\n      events: editedEvents,\r\n      setEvents: setEditedEvents,\r\n      schedule: editedSchedule,\r\n      setSchedule: setEditedSchedule,\r\n      saveId: saveId,\r\n      ...remainder\r\n    }}>\r\n      <Tabs id=\"editor-root\" defaultActiveKey=\"actions\">\r\n        <Tab disabled title={isDirty ? \"Unsaved Changes\" : `Save Slot: ${saveId}`}>\r\n        </Tab>\r\n        <Tab eventKey=\"actions\" title=\"Actions\" key=\"edit-actions\">\r\n          <GameContext.Provider value={{\r\n            // We need to override the locally edited actions in order for\r\n            // linked card previews (e.g. from \"Gain\") to be up-to-date.\r\n            actions: editedActions,\r\n          }}>\r\n            <ActionsTab/>\r\n          </GameContext.Provider>\r\n        </Tab>\r\n        <Tab eventKey=\"events\" title=\"Events\" key=\"edit-events\">\r\n          <EventsTab/>\r\n        </Tab>\r\n        <Tab eventKey=\"schedule\" title=\"Schedule\" key=\"edit-schedule\">\r\n          <ScheduleTab/>\r\n        </Tab>\r\n        <Tab eventKey=\"test\" title=\"Test Changes\" key=\"test\">\r\n          <TestChanges/>\r\n        </Tab>\r\n      </Tabs>\r\n    </LocalStorageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default GameEditor;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\n\r\nimport {\r\n  STATIC_ROOT,\r\n} from \"../Constants\";\r\n\r\nimport GameContext from \"../GameContext\";\r\nimport LocalStorageContext from \"../LocalStorageContext\";\r\n\r\nconst Assets = function(actions, events) {\r\n  const assets = {};\r\n  for (let action of Object.values(assets)) {\r\n    if (action.image !== null) {\r\n      assets[action.image] = \"img\";\r\n    }\r\n  }\r\n  for (let ev of Object.values(events)) {\r\n    if (ev.image !== null) {\r\n      assets[ev.image] = \"img\";\r\n    }\r\n    if (ev.song !== null) {\r\n      assets[ev.song] = \"audio\";\r\n    }\r\n  }\r\n\r\n  return assets;\r\n}\r\n\r\nconst Loading = function(props) {\r\n  const {\r\n    count,\r\n    total,\r\n    percent,\r\n    startGame\r\n  } = props;\r\n  return (\r\n    <div id=\"loading\">\r\n      <ProgressBar now={percent}/>\r\n      <hr/>\r\n      <p>\r\n        {\r\n          count < total ? (\r\n            `Loaded ${count}/${total} assets...`\r\n          ) : (\r\n            <Button onClick={startGame}>Begin</Button>\r\n          )\r\n        }\r\n      </p>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst LoadAsset = (asset, src, updateProgress, resolve) => {\r\n  // Incrementally update progress bar.\r\n  updateProgress();\r\n  console.log(`Loaded ${src}`);\r\n  resolve(asset);\r\n};\r\n\r\n// Pattern ripped from\r\n// https://jack72828383883.medium.com/ff1642708240\r\nconst Preload = async (assets: object, updateProgress) => {\r\n  const promises = await Object.keys(assets).map((src) => {\r\n    if (src === \"undefined\") {\r\n      throw new Error(\"Could not resolve URL for asset.\")\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n      const assetType = assets[src];\r\n      let asset;\r\n      switch (assetType) {\r\n        case \"img\":\r\n          asset = new Image();\r\n          asset.onload = () => {\r\n            LoadAsset(asset, src, updateProgress, resolve);\r\n          };\r\n          break;\r\n        case \"audio\":\r\n          asset = new Audio();\r\n          // Audio files have different handlers.\r\n          asset.oncanplaythrough = () => {\r\n            LoadAsset(asset, src, updateProgress, resolve);\r\n          };\r\n          break;\r\n        default:\r\n          throw new Error(`Unrecognized asset type: ${assetType}`);\r\n      }\r\n      asset.src = `${STATIC_ROOT}/${src}`;\r\n      asset.onerror = () => {\r\n        reject(`Could not load ${assetType}: ${asset.src}`);\r\n      };\r\n    });\r\n  });\r\n  await Promise.all(promises);\r\n};\r\n\r\nconst LoadingScreen = (props) => {\r\n  const {\r\n    children,\r\n    isLoading,\r\n    setIsLoading,\r\n    ...nonChildren\r\n  } = props;\r\n  const {\r\n    plugins\r\n  } = nonChildren;\r\n  const parentContext = useContext(LocalStorageContext);\r\n  const actions = plugins.actions.api.getActions();\r\n  const events = plugins.schedule.api.getEvents();\r\n  const [hasPreloaded, setHasPreloaded] = useState(false);\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"increment\":\r\n        return {\r\n          count: state.count + 1,\r\n          total: state.total,\r\n          percent: (100.0 * (state.count + 1) / state.total)\r\n        };\r\n      default:\r\n        throw new Error(`Unsupported action type ${action.type}`);\r\n    }\r\n  };\r\n  // TODO: Clean up this assets computation.\r\n  const assetsToLoad = Assets(actions, events);\r\n  const [loadingState, dispatch] = useReducer(reducer, {\r\n    count: 0,\r\n    total: Object.keys(assetsToLoad).length,\r\n    percent: 0,\r\n  });\r\n  useEffect(() => {\r\n    Preload(\r\n      // Preload all the images and audio.\r\n      Assets(\r\n        plugins.actions.api.getActions(),\r\n        plugins.schedule.api.getEvents()\r\n      ),\r\n      // And update the progress bar when each item is loaded.\r\n      () => {\r\n        if (!hasPreloaded) {\r\n          dispatch({type: \"increment\"})\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      setHasPreloaded(true);\r\n    };\r\n  }, [dispatch, hasPreloaded, plugins]);\r\n\r\n  if (isLoading) {\r\n    // TODO: In theory we should introduce an intermediate \"loaded-but-not-started\" state.\r\n    return <Loading startGame={() => setIsLoading(false)} {...loadingState} />;\r\n  }\r\n  return (\r\n    <LocalStorageContext.Provider value={{\r\n      // Patch in the cleaned actions and events.\r\n      ...parentContext,\r\n      actions: actions,\r\n      events: events,\r\n    }}>\r\n      <GameContext.Provider value={{\r\n        ...nonChildren\r\n      }}>\r\n        {children}\r\n      </GameContext.Provider>\r\n    </LocalStorageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React, {\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Route,\n} from 'react-router-dom';\n\nimport { Client } from 'boardgame.io/react';\n\nimport Actions, {\n  ActionsPlugin,\n} from \"./Action\";\n\nimport Events from \"./Event\";\nimport {\n  SchedulePlugin,\n  INITIAL_SCHEDULE,\n} from \"./Schedule\";\n\nimport LocalStorageContext from \"./LocalStorageContext\";\nimport { Apex2021 } from './Game';\nimport Board from './component/Board';\nimport GameEditor from './component/GameEditor';\nimport LoadingScreen from './component/LoadingScreen';\n\nconst LocalStorageRouter = (props) => {\n  const {\n    match,\n  } = props;\n  const [isDebug, setIsDebug] = useState(true);\n  const [actions, setActions] = useState(Actions);\n  const [events, setEvents] = useState(Events);\n  const [schedule, setSchedule] = useState(INITIAL_SCHEDULE);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const json = localStorage.getItem(\"saveFiles\");\n    const knownSaves = JSON.parse(json);\n    if (knownSaves && match.params.configId) {\n      const saveFile = knownSaves[match.params.configId];\n      if (saveFile) {\n        setActions(saveFile.actions);\n        setEvents(saveFile.events);\n        setSchedule(saveFile.schedule);\n      }\n    }\n  }, [match]);\n  const game = {\n    ...Apex2021,\n    plugins: [\n      SchedulePlugin({\n        initialSchedule: schedule,\n        initialEvents: events,\n      }),\n      ActionsPlugin({\n        initialActions: actions,\n      }),\n    ]\n  };\n  const MaybeBoardOrEditor = (props) => (\n    <LocalStorageContext.Provider value={{\n      actions: actions,\n      setActions: setActions,\n      events: events,\n      setEvents: setEvents,\n      schedule: schedule,\n      setSchedule: setSchedule,\n      isDebug: isDebug,\n      setIsDebug: setIsDebug,\n    }}>\n      <LoadingScreen\n        // The \"is-loading\" state has to be owned at the root, else the child\n        // editor will re-trigger the loading screen every time an edit is made.\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        {...props}\n        >\n        <Route exact path=\"/:configId/game\" component={Board} />\n        <Route exact path=\"/:configId/edit\">\n          <GameEditor saveId={match.params.configId ? match.params.configId : 0 } />\n        </Route>\n      </LoadingScreen>\n    </LocalStorageContext.Provider>\n  );\n  const GameClient = Client({\n    game: game,\n    board: MaybeBoardOrEditor,\n    numPlayers: 1,\n    debug: isDebug,\n  });\n  return <GameClient {...props}/>\n};\n\nexport default LocalStorageRouter;\n","import {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport LocalStorageRouter from \"./LocalStorageRouter\";\r\n\r\nconst App = function(props) {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/:configId/edit\" component={LocalStorageRouter} />\r\n      <Route path=\"/:configId/game\" component={LocalStorageRouter} />\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/static/game\" />\r\n      </Route>\r\n      <Route exact path=\"/editor\">\r\n        <Redirect to=\"/static/edit\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}