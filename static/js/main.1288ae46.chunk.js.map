{"version":3,"sources":["GameContext.js","component/GameInfo.jsx","Keyword.js","component/ActionArea.jsx","component/Board.jsx","App.js","reportWebVitals.js","index.js","actions/Base.js","actions/Phase1Action.js","Action.js","Game.js","actions sync nonrecursive /Action/.js$"],"names":["GameContext","React","createContext","GROWTH_MINDSET_COLOR","0","1","2","3","4","5","GameInfo","useContext","G","ctx","growthMindsetPoints","moves","money","attention","energy","Table","responsive","bordered","id","className","Badge","variant","turn","ProgressBar","now","MAX_GROWTH_MINDSET","toPrecision","label","animated","CardOrCards","number","Description","props","description","runEffect","passthrough","useEffect","Tooltip","Keyword","value","tooltipClassName","OverlayTrigger","placement","overlay","descriptionProps","Discard","Draw","Forget","ForgetSelf","Gain","cardId","renderCard","card","onClick","s","Actions","displayName","BoostGrowthMindset","ActionCard","useState","isSelected","setIsSelected","slotId","ref","image","moneyCost","energyCost","producesGrowthMindset","producesMoney","producesAttention","producesEnergy","drawsCards","discardsCards","gainsCards","forgetsSelf","forgetsCards","isDiscard","activePlayers","playOrderPos","isForget","runHolder","Card","onMouseEnter","onMouseLeave","bg","border","Header","Container","fluid","Row","Col","xs","Body","Title","Img","src","ListGroup","Item","map","Text","Footer","ActionList","actions","actionCards","actionId","CardColumns","length","ActionArea","hand","actionShop","deck","discard","noop","x","actionData","discardAction","forgetAction","performAction","buyAction","sort","tab","setTab","tabs","Object","keys","areaType","Tab","eventKey","title","Tabs","activeKey","onSelect","k","Button","endTurn","Board","Provider","App","Client","game","Apex2021","board","numPlayers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","BaseAction","isBuyable","perform","Math","min","this","i","DrawCard","cardsLeftToDiscard","events","setStage","cardsLeftToForget","forEach","c","push","buy","importAll","r","allActions","flatMap","key","default","result","action","require","INITIAL_BOARD","Array","fill","filter","STARTS_TURN_WITH","pop","setup","setupData","handIndex","INVALID_MOVE","splice","shopIndex","console","log","onBegin","cardsToDraw","assign","SetupNewTurn","onEnd","endGame","stages","endStage","forget","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.1288ae46.chunk.js","sourcesContent":["import React from 'react';\n\nconst GameContext = React.createContext({});\n\nexport default GameContext;\n","import React, {\n  useContext,\n} from \"react\";\n\nimport {\n  Badge,\n  ProgressBar,\n  Table,\n} from \"react-bootstrap\";\n\nimport { MAX_GROWTH_MINDSET } from \"../Game\";\nimport GameContext from \"../GameContext\";\n\nconst GROWTH_MINDSET_COLOR = {\n  0: \"danger\",\n  1: \"danger\",\n  2: \"danger\",\n  3: \"warning\",\n  4: \"success\",\n  5: \"info\",\n};\n\n\nfunction GameInfo() {\n  const {\n    G,\n    ctx,\n    moves,\n  } = useContext(GameContext);\n  const {\n    growthMindsetPoints,\n    money,\n    attention,\n    energy\n  } = G;\n  return (\n    <Table responsive bordered id=\"player-info\">\n      <thead>\n        <tr className=\"info-label-row\">\n          <th>Day #</th>\n          <th>Growth Mindset</th>\n          <th>Money</th>\n          <th>Attention</th>\n          <th>Energy</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"info-data-row\">\n          <td><Badge variant=\"dark\">{ctx.turn}</Badge></td>\n          <td>\n            <ProgressBar\n              now={(growthMindsetPoints * 100.0 /MAX_GROWTH_MINDSET).toPrecision(3)}\n              label={growthMindsetPoints}\n              variant={GROWTH_MINDSET_COLOR[growthMindsetPoints]}\n              animated={growthMindsetPoints === MAX_GROWTH_MINDSET}\n            />\n          </td>\n          <td><Badge variant=\"warning\">{money}</Badge></td>\n          <td><Badge variant=\"primary\">{attention}</Badge></td>\n          <td><Badge variant=\"success\">{energy}</Badge></td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GameInfo;\n","import React, {\n  useEffect,\n}from \"react\";\n\nimport {\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport Actions from \"./Action\";\n\nfunction CardOrCards(number) {\n  return \"\" + number + \" \" + (number > 1 ? \"cards\" : \"card\");\n}\n\nexport const Description = (props) => {\n  const { description, runEffect, className, passthrough } = props;\n  useEffect(\n    () => {\n      if (runEffect) {\n        runEffect();\n      }\n    }\n  );\n  return (\n    <Tooltip id=\"keyword-description\" className={className} {...passthrough}>\n      {description}\n    </Tooltip>\n  );\n};\n\nexport const Keyword = (props) => {\n  const { value, description, tooltipClassName, runEffect } = props;\n  const renderDescription = (descriptionProps) => (\n    <Description\n      description={description}\n      className={tooltipClassName}\n      runEffect={runEffect}\n      passthrough={descriptionProps}\n    />\n  );\n  return (\n    <OverlayTrigger\n      placement=\"right\"\n      overlay={renderDescription}\n    >\n      <span className=\"card-keyword\">{value}</span>\n    </OverlayTrigger>\n  );\n};\n\nexport const Discard = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Discard \" + number}\n      description={\"Place cards from your hand into your discard pile until you have placed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const Draw = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Draw \" + number}\n      description={\"Place \" + CardOrCards(number) + \" from your deck into your hand. If your deck is empty, your discard pile will automatically be shuffled into your deck.\"}\n    />\n  );\n};\n\nexport const Forget = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Forget \" + number}\n      description={\"Permanently remove cards from your hand until you have removed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const ForgetSelf = () => {\n  return (\n    <Keyword\n      value={\"Forget Self\"}\n      description={\"Permanently remove this card from your hand upon being played.\"}\n    />\n  );\n};\n\nexport const Gain = (props) => {\n  const { cardId, renderCard, tooltipClassName, runEffect } = props;\n  const card = renderCard({\n    cardId: cardId,\n    onClick: s=>{}\n  });\n  return (\n    <Keyword\n      value={Actions[cardId].displayName}\n      description={card}\n      tooltipClassName={tooltipClassName}\n      runEffect={runEffect}\n    />\n  );\n};\n\nexport const BoostGrowthMindset = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"+\" + number + \" Growth Mindset\"}\n      description={\"Growth Mindset represents the number of cards you can draw at the beginning of the next turn. You lose one point per turn, and Growth Mindset is capped at 5.\"}\n    />\n  );\n};\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Badge,\n  Button,\n  Container,\n  Col,\n  Card,\n  CardColumns,\n  ListGroup,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\n\nimport { run as runHolder } from 'holderjs/holder';\nimport GameContext from \"../GameContext\";\nimport Actions from \"../Action\";\nimport {\n  Discard,\n  Draw,\n  Forget,\n  ForgetSelf,\n  Gain,\n  BoostGrowthMindset,\n} from \"../Keyword\";\n\nfunction ActionCard(props) {\n  const [isSelected, setIsSelected] = useState(false);\n  const { cardId, slotId, onClick, ref } = props;\n  const {\n    ctx,\n  } = useContext(GameContext);\n  const {\n    displayName,\n    image,\n    description,\n    moneyCost,\n    energyCost,\n    producesGrowthMindset,\n    producesMoney,\n    producesAttention,\n    producesEnergy,\n    drawsCards,\n    discardsCards,\n    gainsCards,\n    forgetsSelf,\n    forgetsCards,\n  } = Actions[cardId];\n  const isDiscard = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"discard\";\n  const isForget = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"forget\";\n  // Hack to render sized placeholder before we have assets.\n  useEffect(() => {\n    runHolder(\"card-image\");\n  });\n\n  return (\n    <Card\n      ref = {ref}\n      onClick={() => onClick(slotId)}\n      onMouseEnter={() => setIsSelected(true)}\n      onMouseLeave={() => setIsSelected(false)}\n      bg={isDiscard || isForget ? \"danger\" : null}\n      border={isSelected ? \"warning\" : \"secondary\"}\n    >\n      <Card.Header>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Makes:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {producesMoney}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"primary\">\n                {producesAttention}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {producesEnergy}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{displayName}</Card.Title>\n        <Card.Img src={image != null ? image : \"holder.js/256x128\"} className=\"card-image\"/>\n        <ListGroup className=\"extra-rules\">\n          { \n            (producesGrowthMindset > 0) && (\n              <ListGroup.Item key=\"growth-mindset\"><BoostGrowthMindset number={producesGrowthMindset}/></ListGroup.Item>\n            )\n          }\n          { \n            (drawsCards > 0) && (\n              <ListGroup.Item key=\"draws-cards\"><Draw number={drawsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (discardsCards > 0) && (\n              <ListGroup.Item key=\"discards-cards\"><Discard number={discardsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsSelf) && (\n              <ListGroup.Item key=\"forgets-self\"><ForgetSelf/></ListGroup.Item>\n            )\n          }\n          { \n            (forgetsCards > 0) && (\n              <ListGroup.Item key=\"forgets-cards\"><Forget number={forgetsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            gainsCards.map((cardId) =>\n              <ListGroup.Item key={\"gains-\" + cardId}>\n                <Gain\n                  cardId={cardId}\n                  renderCard={ActionCard}\n                  tooltipClassName=\"card-preview\"\n                />\n              </ListGroup.Item>\n            )\n          }\n        </ListGroup>\n        <Card.Text className=\"flavor\">\n          {description}\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Costs:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {moneyCost}\n              </Badge>\n            </Col>\n            <Col xs={1}/>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {energyCost}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction ActionList(props) {\n  const { actions, className, onClick } = props;\n  const actionCards = actions.map((actionId, slotId) => (\n    <ActionCard cardId={actionId} slotId={slotId} key={slotId} onClick={onClick} />\n  ));\n  return (\n    <CardColumns className={\"action-list-\" + className}>\n      {actionCards.length > 0 ? actionCards :\n        <Badge><h1>No Actions Available</h1></Badge>}\n    </CardColumns>\n  );\n}\n\nfunction ActionArea() {\n  const {\n    G,\n    ctx,\n    moves,\n  } = useContext(GameContext);\n  const {\n    hand,\n    actionShop,\n    deck,\n    discard,\n  } = G;\n  const noop = (x) => {};\n  const isDiscard = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"discard\";\n  const isForget = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"forget\";\n  const actionData = {\n    \"Hand\": {\n      actions: hand,\n      onClick: isDiscard ? moves.discardAction: isForget ? moves.forgetAction : moves.performAction\n    },\n    \"Shop\": {\n      actions: actionShop,\n      onClick: isDiscard ? noop : moves.buyAction\n    },\n    \"Deck\": {\n      actions: [...deck].sort(), // Hide the order of the cards.\n      onClick: noop\n    },\n    \"Discard Pile\": {\n      actions: discard,\n      onClick: noop\n    },\n  };\n  const [tab, setTab] = useState(\"Hand\");\n  const tabs = Object.keys(actionData).map((areaType) => (\n    <Tab eventKey={areaType} title={areaType} key={areaType}>\n      <ActionList actions={actionData[areaType].actions} onClick={actionData[areaType].onClick} className={areaType}/>\n    </Tab>\n  ));\n  return <Tabs id=\"actions\" activeKey={tab} onSelect={(k)=>setTab(k)}>\n    {tabs}\n    <Tab eventKey=\"next-turn\" title=\"Next Turn\" key=\"next-turn\">\n      <Button\n        onClick={() => {\n          moves.endTurn();\n          setTab(\"Hand\");\n        }}\n        className=\"confirm-next-turn\"\n      >\n        Confirm End Turn\n      </Button>\n    </Tab>\n  </Tabs>\n}\n\nexport default ActionArea;\n","import React from \"react\";\n\nimport {\n  Container,\n  Row,\n  Col\n} from \"react-bootstrap\";\n\nimport GameContext from \"../GameContext\";\nimport GameInfo from \"./GameInfo\";\nimport ActionArea from \"./ActionArea\";\n\nfunction Board(props) {\n  const {\n    G,\n    ctx,\n    moves,\n  } = props;\n  return (\n    <GameContext.Provider value={{\n      G: G,\n      ctx: ctx,\n      moves: moves\n    }}>\n      <Container fluid>\n        <Row>\n          <Col>\n            <GameInfo/> \n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ActionArea/>\n          </Col>\n        </Row>\n      </Container>\n    </GameContext.Provider>\n  );\n}\n\nexport default Board;\n","import { Client } from 'boardgame.io/react';\nimport { Apex2021 } from './Game';\nimport Board from './component/Board';\n\n\nconst App = Client({\n  game: Apex2021,\n  board: Board,\n  numPlayers: 1,\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { DrawCard, MAX_GROWTH_MINDSET } from '../Game';\n\nconst BaseAction = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  moneyCost: 0,\n  energyCost: 0,\n  producesGrowthMindset: 0,\n  producesMoney: 0,\n  producesAttention: 0,\n  producesEnergy: 0,\n  drawsCards: 0,\n  discardsCards: 0,\n  gainsCards: [],\n  forgetsSelf: false,\n  forgetsCards: 0,\n  isBuyable: true,\n  // TODO: This is \"inheritance\" without any protection. Bad idea.\n  perform: function(G, ctx) {\n    // First check if we can afford the move.\n    if (G.energy <= 0) {\n      return false;\n    }\n    // Pay for the action.\n    G.energy--;\n    G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + this.producesGrowthMindset);\n    G.money += this.producesMoney;\n    G.attention += this.producesAttention;\n    G.energy += this.producesEnergy;\n    for (let i = 0; i < this.drawsCards; i++) {\n      DrawCard(G, ctx);\n    }\n    if (this.discardsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToDiscard = this.discardsCards;\n      ctx.events.setStage('discard');\n    }\n    if (this.forgetsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToForget = this.forgetsCards;\n      ctx.events.setStage('forget');\n    }\n    this.gainsCards.forEach((c) => G.discard.push(c));\n    return true;\n  },\n  buy: function(G, ctx) {\n    if (G.attention <= 0 || G.money < this.moneyCost || G.energy < this.energyCost) {\n      return false;\n    }\n    // Pay for the action.\n    G.attention--;\n    G.money -= this.moneyCost;\n    G.energy -= this.energyCost;\n    G.discard.push(this.id);\n    return true;\n  },\n};\n\nexport default BaseAction;\n","import BaseAction from './Base';\n\nexport default [\n  {\n    id: \"Card01\",\n    displayName: \"Card1\",\n    description: \"Make sure to play this every turn!\",\n    producesGrowthMindset: 1,\n    isBuyable: false,\n  },\n  {\n    id: \"Card02\",\n    displayName: \"Card2\",\n    description: \"Getting money lets you buy stuff.\",\n    producesMoney: 1,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card03\",\n    displayName: \"Card3\",\n    description: \"Sometimes you just want to forget everything.\",\n    moneyCost: 2,\n    forgetsSelf: true,\n    forgetsCards: 99,\n  },\n  {\n    id: \"Card04\",\n    displayName: \"Card4\",\n    description: \"If you play this, you'll have to pick another card in your hand to discard.\",\n    moneyCost: 2,\n    drawsCards: 3,\n    discardsCards: 1,\n  },\n  {\n    id: \"Card05\",\n    displayName: \"Card5\",\n    description: \"Doing too much can make you tired.\",\n    moneyCost: 2,\n    producesGrowthMindset: 1,\n    producesMoney: 1,\n    producesEnergy: 1,\n    drawsCards: 1,\n    gainsCards: [\"fatigue\"],\n  },\n  {\n    id: \"Card06\",\n    displayName: \"Card6\",\n    description: \"More energy means you can play more actions!\",\n    moneyCost: 3,\n    producesEnergy: 2,\n    drawsCards: 1,\n  },\n  {\n    id: \"Card07\",\n    displayName: \"Card7\",\n    description: \"IDK\",\n    moneyCost: 3,\n  },\n  {\n    id: \"Card08\",\n    displayName: \"Card8\",\n    description: \"IDK\",\n    moneyCost: 4,\n  },\n  {\n    id: \"Card09\",\n    displayName: \"Card9\",\n    description: \"More money\",\n    moneyCost: 4,\n    producesMoney: 2,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card10\",\n    displayName: \"Card10\",\n    description: \"That's a lot of energy.\",\n    moneyCost: 4,\n    producesAttention: 1,\n    producesEnergy: 4,\n  },\n  {\n    id: \"Card11\",\n    displayName: \"Card11\",\n    description: \"Maybe there are better options.\",\n    moneyCost: 5,\n    producesEnergy: 1,\n    drawsCards: 2,\n  },\n  {\n    id: \"Card12\",\n    displayName: \"Card12\",\n    description: \"More more money\",\n    moneyCost: 6,\n    producesMoney: 3,\n    producesEnergy: 1,\n  },\n  {\n    id: \"fatigue\",\n    displayName: \"Fatigue\",\n    description: \"Better rest up or I'll just get even more tired later.\",\n    isBuyable: false,\n    forgetsSelf: true,\n  }\n\n].map(c => ({\n  ...BaseAction,\n  ...c,\n}));\n","function importAll(r) {\n  const allActions = r.keys().flatMap(\n      (key) => r(key).default,\n  );\n  let result = {};\n  allActions.forEach((action) => {\n    result[action.id] = action;\n  });\n  return result;\n}\n\nexport default importAll(require.context('./actions/', false, /Action\\.js$/));\n","import { INVALID_MOVE } from 'boardgame.io/core';\n\nimport Actions from './Action';\n\nexport const MAX_HAND_SIZE = 8;\nexport const MAX_GROWTH_MINDSET = 5;\nconst INITIAL_BOARD = {\n  actionShop: [\n    ...Array(2).fill(\"Card02\"),\n    ...Array(1).fill(\"Card06\"),\n    ...Array(2).fill(\"Card09\"),\n    ...Array(1).fill(\"Card10\"),\n    ...Array(1).fill(\"Card12\"),\n    ...(Object.keys(Actions).filter((c)=>Actions[c].isBuyable))\n  ].sort(),\n  deck: [\n    // Turn 2. Will require some sacrifice.\n    \"Card02\", \"Card01\",\n    // Turn 1.\n    \"Card02\", \"Card02\", \"Card01\",\n  ],\n  hand: [],\n  discard: [],\n  growthMindsetPoints: 3,\n  cardsLeftToDiscard: 0,\n  cardsLeftToForget: 0,\n};\nconst STARTS_TURN_WITH = {\n  money: 0,\n  attention: 1,\n  energy: 1,\n};\n\n\nexport function DrawCard(G, ctx) {\n  if (G.hand.length >= MAX_HAND_SIZE) {\n    return false;\n  }\n  if (G.deck.length <= 0) {\n    while (G.discard.length > 0) {\n      G.deck.push(G.discard.pop());\n    }\n  }\n  // If the deck is still empty, no draw.\n  if (G.deck.length <= 0) {\n    return false;\n  }\n  G.hand.push(G.deck.pop());\n  return true;\n}\n\nfunction SetupNewTurn(G, ctx) {\n  console.log([...G.discard]);\n  // Discard the remainder of your hand.\n  while (G.hand.length > 0) {\n    G.discard.push(G.hand.pop());\n  }\n  console.log([...G.discard]);\n  const cardsToDraw = Math.min(5, G.growthMindsetPoints);\n  for (let i = 0; i < cardsToDraw; i++) {\n    DrawCard(G, ctx);\n  }\n  Object.assign(G, STARTS_TURN_WITH);\n  G.growthMindsetPoints--;\n}\n\nexport const Apex2021 = {\n  setup: (ctx, setupData) => ({\n    ...INITIAL_BOARD,\n    ...STARTS_TURN_WITH\n  }),\n  moves: {\n    performAction: (G, ctx, handIndex) => {\n      const actionId = G.hand[handIndex];\n      const action = Actions[actionId];\n      if (!action.perform(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      G.hand.splice(handIndex, 1);\n      if (!action.forgetsSelf) {\n        G.discard.push(actionId);\n      }\n    },\n    buyAction: (G, ctx, shopIndex) => {\n      console.log(G.actionShop);\n      const actionId = G.actionShop[shopIndex];\n      const action = Actions[actionId];\n      if (!action.buy(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      G.actionShop.splice(shopIndex, 1);\n    },\n    endTurn: (G, ctx) => {\n      ctx.events.endTurn();\n    },\n  },\n  turn: {\n    onBegin: (G, ctx) => ( SetupNewTurn(G, ctx) ),\n    onEnd: (G, ctx) => {\n      if (G.growthMindsetPoints <= 0) {\n         ctx.events.endGame(\"fixed-mindset\");\n      }\n      //return G;\n    },\n    stages: {\n      discard: {\n        moves: {\n          discardAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToDiscard);\n            const actionId = G.hand[handIndex];\n            G.hand.splice(handIndex, 1);\n            G.discard.push(actionId);\n            if (G.hand.length === 0) {\n              G.cardsLeftToDiscard = 0;\n            } else {\n              G.cardsLeftToDiscard--;\n            }\n            if (G.cardsLeftToDiscard <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      },\n      forget: {\n        moves: {\n          forgetAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToForget);\n            const actionId = G.hand[handIndex];\n            G.hand.splice(handIndex, 1);\n            if (G.hand.length === 0) {\n              G.cardsLeftToForget = 0;\n            } else {\n              G.cardsLeftToForget--;\n            }\n            if (G.cardsLeftToForget <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      }\n\n    }\n  },\n};\n","var map = {\n\t\"./Phase1Action.js\": 122\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 87;"],"sourceRoot":""}