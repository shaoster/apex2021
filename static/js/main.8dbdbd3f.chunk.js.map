{"version":3,"sources":["../public/images/card sync nonrecursive /.png$","../public/images/card/After_School_Club_16_9.png","../public/images/card/Fatigue_16_9.png","../public/images/card/Haunted_Memory_16_9.png","../public/images/card/Healthy_Food_16_9.png","../public/images/card/Homework_16_9.png","../public/images/card/Jacket_16_9.png","../public/images/card/Junk_Food_16_9.png","../public/images/card/Money_Bill_16_9.png","../public/images/card/Money_Coin_16_9.png","../public/images/card/Music_16_9.png","../public/images/card/Olympus_16_9.png","../public/images/card/Overnight_Study_16_9.png","../public/images/card/Procrastination_16_9.png","../public/images/card/Shopping_16_9.png","../public/images/card/Sneaker_16_9.png","../public/images/card/Study__Creative_Writing_16_9.png","../public/images/card/Study__Math_16_9.png","../public/images/card/Study__Online_Lecture_16_9.png","../public/images/card/Study__Science_16_9.png","../public/images/card/Study__Textbook_16_9.png","../public/images/card/Therapist_16_9.png","../public/images/card/Workout_16_9.png","../public/images/event sync nonrecursive /.png$","../public/images/event/Bedroom_3_2.png","../public/images/event/Christmas_3_2.png","../public/images/event/Dad_Business_Struggle_3_2.png","../public/images/event/Exam_3_2.png","../public/images/event/Hospital_3_2.png","../public/images/event/Middle_School_Graduation_3_2.png","../public/images/event/Mom_Sick_3_2.png","../public/images/event/NYC_Travel_3_2.png","../public/images/event/Premonition_3_2.png","../public/images/event/Prepare_For_School_3_2.png","../public/images/event/Prom_3_2.png","../public/images/event/School_3_2.png","../public/images/event/School_Cold_3_2.png","../public/images/event/School_Warm_3_2.png","../public/images/event/Spring_Break_3_2.png","../public/images/event/You_Failed_3_2.png","../public/songs sync nonrecursive /.mp3$","../public/songs/af.mp3","../public/songs/da.mp3","Constants.js","Util.js","Action.js","Event.js","Schedule.js","LocalStorageContext.js","Status.js","Game.js","GameContext.js","component/GameInfo.jsx","component/Keyword.js","component/ActionArea.jsx","component/MusicPlayer.jsx","component/Board.jsx","Assets.js","component/GameEditor.jsx","component/LoadingScreen.jsx","LocalStorageRouter.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MAX_HAND_SIZE","STATIC_ROOT","process","DrawCard","G","ctx","hand","length","deck","discard","push","pop","BaseAction","displayName","displayNameInShop","image","description","moneyCost","energyCost","producesGrowthMindset","producesMoney","producesAttention","producesEnergy","drawsCards","discardsCards","gainsCards","forgetsOnDiscard","forgetsSelf","forgetsCards","perform","energy","growthMindsetPoints","Math","min","this","money","attention","i","cardsLeftToDiscard","events","setStage","cardsLeftToForget","forEach","c","buy","actionList","PatchDisplayName","action","Actions","reduce","rv","x","ActionsPlugin","options","initialActions","name","setup","actions","api","data","getActions","patchedActions","getAction","actionId","BaseEvent","song","clearsShop","engrossedTurns","inspiredTurns","indebtedTurns","energizedTurns","addsCardsToShop","addsCardsToDiscardPile","apply","statuses","inspired","max","energized","engrossed","indebted","actionShop","splice","card","Events","Schedule","eventsByDay","turnNumber","eventId","SchedulePlugin","initialSchedule","initialEvents","schedule","getCurrentEvents","getEvents","turn","event","getEvent","addEvent","patchedEvents","getRaw","INITIAL_SCHEDULE","0","2","LocalStorageContext","createContext","BaseStatus","Statuses","INITIAL_BOARD","sort","currentEvent","backgroundImage","STARTS_TURN_WITH","Apex2021","setupData","moves","performAction","handIndex","INVALID_MOVE","buyAction","shopIndex","endTurn","activePlayers","all","onBegin","console","log","endStage","remainingCard","cardsToDraw","assign","entries","stat","dur","SetupNewTurn","onEnd","endGame","stages","showEvent","chooseOption","optionIndex","dismiss","discardAction","forget","forgetAction","GameContext","React","GROWTH_MINDSET_COLOR","1","3","4","5","GameInfo","useContext","Table","responsive","bordered","className","Badge","variant","ProgressBar","now","toPrecision","label","animated","CardOrCards","number","Description","props","runEffect","passthrough","useEffect","Tooltip","Keyword","value","tooltipClassName","OverlayTrigger","placement","overlay","descriptionProps","Discard","Draw","Forget","ForgetSelf","Gain","cardId","renderCard","onClick","s","BoostGrowthMindset","YOLO","classNames","require","ActionCardFromStaticActions","ActionCard","useState","isSelected","setIsSelected","areaType","ref","gameStage","isSpecialHandSelectionStage","bg","Card","onMouseEnter","onMouseLeave","border","Header","Container","fluid","Row","Col","xs","Body","Title","Img","src","ListGroup","Item","gainedCardIndex","Text","Footer","ActionList","actionsList","actionCards","slotId","CardColumns","ActionArea","noop","isDiscard","playOrderPos","isForget","actionData","tab","setTab","tabs","Tab","eventKey","title","Tabs","activeKey","onSelect","k","Button","MusicPlayer","songUrl","currentSong","setCurrentSong","player","createRef","current","pause","play","loop","EventModal","show","onHide","styles","backgroundRepeat","backgroundSize","Modal","size","style","centered","Event","playSong","ev","Board","plugins","Provider","FromRequireContext","rc","p","t","cleaned","replace","type","StripPrefix","CardImages","EventImages","Songs","PreloadAssetList","values","Assets","GameEditorContext","unCamelCase","input","toUpperCase","EntityEditor","setActions","setEvents","entityId","entityType","entity","entities","updaters","getValueType","field","maybeOption","newValue","oldValue","valueType","target","parseInt","checked","option","sequenceIdToRemove","removedValue","sequenceId","updatedEntities","assetSelector","repo","onChange","formGroups","filter","Form","Control","Check","indexOf","relations","selectedValues","isMulti","hideSelectedOptions","displayValue","Group","as","controlId","Label","column","sm","ActionsTab","selectedAction","setSelectedAction","navs","Nav","Link","defaultActiveKey","newActionId","updatedActions","EventPreview","setSongUrl","showEventPreview","setShowEventPreview","EventsTab","selectedEvent","setSelectedEvent","newEventId","updatedEvents","ScheduleTab","setSchedule","scheduleUpdater","rows","Array","MAX_TURN_COUNT","row","cols","col","l","onRemove","horizontal","ImportButton","dispatch","showImport","setShowImport","newSaveFileName","setNewSaveFileName","newSaveData","setNewSaveData","newSaveDataRaw","setNewSaveDataRaw","dataErrors","setDataErrors","rawSaveData","parsedData","JSON","parse","error","toString","doValidate","backdrop","keyboard","noValidate","onSubmit","preventDefault","stopPropagation","saveFile","closeButton","required","disabled","evt","placeholder","isValid","isInvalid","Feedback","TestChanges","saveId","history","useHistory","useReducer","state","saveFiles","newSaveId","timestamp","Date","json","localStorage","getItem","knownSaves","stringify","setItem","updateNewSaveFileName","newSaveRow","generateRow","toLocaleString","to","navigator","clipboard","writeText","doCopy","saveRows","reverse","striped","hover","CheckDirty","original","edited","GameEditor","localStorageContext","isDebug","setIsDebug","remainder","editedActions","setEditedActions","editedEvents","setEditedEvents","editedSchedule","setEditedSchedule","isDirty","setIsDirty","Loading","count","total","percent","startGame","LoadAsset","asset","updateProgress","Preload","assets","a","Promise","reject","assetType","Image","onload","Audio","oncanplaythrough","onerror","promises","LoadingScreen","children","isLoading","setIsLoading","nonChildren","parentContext","hasPreloaded","setHasPreloaded","assetsToLoad","loadingState","LocalStorageRouter","match","params","configId","game","GameClient","Client","board","exact","path","component","numPlayers","debug","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dbdbd3f.chunk.js","sourcesContent":["var map = {\n\t\"./After_School_Club_16_9.png\": 124,\n\t\"./Fatigue_16_9.png\": 125,\n\t\"./Haunted_Memory_16_9.png\": 126,\n\t\"./Healthy_Food_16_9.png\": 127,\n\t\"./Homework_16_9.png\": 128,\n\t\"./Jacket_16_9.png\": 129,\n\t\"./Junk_Food_16_9.png\": 130,\n\t\"./Money_Bill_16_9.png\": 131,\n\t\"./Money_Coin_16_9.png\": 132,\n\t\"./Music_16_9.png\": 133,\n\t\"./Olympus_16_9.png\": 134,\n\t\"./Overnight_Study_16_9.png\": 135,\n\t\"./Procrastination_16_9.png\": 136,\n\t\"./Shopping_16_9.png\": 137,\n\t\"./Sneaker_16_9.png\": 138,\n\t\"./Study__Creative_Writing_16_9.png\": 139,\n\t\"./Study__Math_16_9.png\": 140,\n\t\"./Study__Online_Lecture_16_9.png\": 141,\n\t\"./Study__Science_16_9.png\": 142,\n\t\"./Study__Textbook_16_9.png\": 143,\n\t\"./Therapist_16_9.png\": 144,\n\t\"./Workout_16_9.png\": 145\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 123;","export default __webpack_public_path__ + \"static/media/After_School_Club_16_9.427a8241.png\";","export default __webpack_public_path__ + \"static/media/Fatigue_16_9.988de212.png\";","export default __webpack_public_path__ + \"static/media/Haunted_Memory_16_9.6a4b4642.png\";","export default __webpack_public_path__ + \"static/media/Healthy_Food_16_9.c12c71bd.png\";","export default __webpack_public_path__ + \"static/media/Homework_16_9.43c63319.png\";","export default __webpack_public_path__ + \"static/media/Jacket_16_9.da6ec28b.png\";","export default __webpack_public_path__ + \"static/media/Junk_Food_16_9.53d3b064.png\";","export default __webpack_public_path__ + \"static/media/Money_Bill_16_9.6daf705f.png\";","export default __webpack_public_path__ + \"static/media/Money_Coin_16_9.da6bb9ad.png\";","export default __webpack_public_path__ + \"static/media/Music_16_9.d09f8b6d.png\";","export default __webpack_public_path__ + \"static/media/Olympus_16_9.49c623fa.png\";","export default __webpack_public_path__ + \"static/media/Overnight_Study_16_9.8edb1790.png\";","export default __webpack_public_path__ + \"static/media/Procrastination_16_9.ff966c1f.png\";","export default __webpack_public_path__ + \"static/media/Shopping_16_9.295e2aa1.png\";","export default __webpack_public_path__ + \"static/media/Sneaker_16_9.7c8a1986.png\";","export default __webpack_public_path__ + \"static/media/Study__Creative_Writing_16_9.be6f40c3.png\";","export default __webpack_public_path__ + \"static/media/Study__Math_16_9.3389142a.png\";","export default __webpack_public_path__ + \"static/media/Study__Online_Lecture_16_9.2ec9496d.png\";","export default __webpack_public_path__ + \"static/media/Study__Science_16_9.0f303817.png\";","export default __webpack_public_path__ + \"static/media/Study__Textbook_16_9.1cd9f61b.png\";","export default __webpack_public_path__ + \"static/media/Therapist_16_9.08609e53.png\";","export default __webpack_public_path__ + \"static/media/Workout_16_9.568dfcf4.png\";","var map = {\n\t\"./Bedroom_3_2.png\": 147,\n\t\"./Christmas_3_2.png\": 148,\n\t\"./Dad_Business_Struggle_3_2.png\": 149,\n\t\"./Exam_3_2.png\": 150,\n\t\"./Hospital_3_2.png\": 151,\n\t\"./Middle_School_Graduation_3_2.png\": 152,\n\t\"./Mom_Sick_3_2.png\": 153,\n\t\"./NYC_Travel_3_2.png\": 154,\n\t\"./Premonition_3_2.png\": 155,\n\t\"./Prepare_For_School_3_2.png\": 156,\n\t\"./Prom_3_2.png\": 157,\n\t\"./School_3_2.png\": 158,\n\t\"./School_Cold_3_2.png\": 159,\n\t\"./School_Warm_3_2.png\": 160,\n\t\"./Spring_Break_3_2.png\": 161,\n\t\"./You_Failed_3_2.png\": 162\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 146;","export default __webpack_public_path__ + \"static/media/Bedroom_3_2.46acfd78.png\";","export default __webpack_public_path__ + \"static/media/Christmas_3_2.1ec528f9.png\";","export default __webpack_public_path__ + \"static/media/Dad_Business_Struggle_3_2.9ddd561a.png\";","export default __webpack_public_path__ + \"static/media/Exam_3_2.c05c99f4.png\";","export default __webpack_public_path__ + \"static/media/Hospital_3_2.702d3662.png\";","export default __webpack_public_path__ + \"static/media/Middle_School_Graduation_3_2.f2b63314.png\";","export default __webpack_public_path__ + \"static/media/Mom_Sick_3_2.3b40411f.png\";","export default __webpack_public_path__ + \"static/media/NYC_Travel_3_2.d1485c00.png\";","export default __webpack_public_path__ + \"static/media/Premonition_3_2.eb11be44.png\";","export default __webpack_public_path__ + \"static/media/Prepare_For_School_3_2.1eaad7e9.png\";","export default __webpack_public_path__ + \"static/media/Prom_3_2.8e578607.png\";","export default __webpack_public_path__ + \"static/media/School_3_2.2171d059.png\";","export default __webpack_public_path__ + \"static/media/School_Cold_3_2.757be9b5.png\";","export default __webpack_public_path__ + \"static/media/School_Warm_3_2.791bf1e6.png\";","export default __webpack_public_path__ + \"static/media/Spring_Break_3_2.1e319ef5.png\";","export default __webpack_public_path__ + \"static/media/You_Failed_3_2.1d8d33cb.png\";","var map = {\n\t\"./af.mp3\": 164,\n\t\"./da.mp3\": 165\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 163;","export default __webpack_public_path__ + \"static/media/af.a1c157c0.mp3\";","export default __webpack_public_path__ + \"static/media/da.5ac41aaa.mp3\";","export const MAX_HAND_SIZE = 8;\nexport const MAX_GROWTH_MINDSET = 5;\nexport const STATIC_ROOT = process.env.PUBLIC_URL;\nexport const MAX_TURN_COUNT = 48;\n","import { MAX_HAND_SIZE } from \"./Constants\";\n\n// A weighted set of outcomes.\n// The key represents the lowest roll of a 20-sided dice that will result in that outcome.\n// Example: {\n//  0: [], // 50%\n//  10: [BadEvent], // 45%\n//  19: [CatastrophicEvent], // 5%\n// }\n//\n// Generate no events by default.\nexport const RollOutcome = function(roll, weightedOutcomes) {\n  const threshold = roll - 1;\n\tconst rollIndices = Object.keys(weightedOutcomes).map(k => parseInt(k));\n  const selectedIndex = rollIndices.find(k => threshold >= k);\n\treturn weightedOutcomes[\"\" + selectedIndex];\n};\n\nexport const DrawCard = function(G, ctx) {\n  if (G.hand.length >= MAX_HAND_SIZE) {\n    return false;\n  }\n  if (G.deck.length <= 0) {\n    while (G.discard.length > 0) {\n      G.deck.push(G.discard.pop());\n    }\n  }\n  // If the deck is still empty, no draw.\n  // In other words, all cards are already in your hand.\n  if (G.deck.length <= 0) {\n    return false;\n  }\n  G.hand.push(G.deck.pop());\n  return true;\n}\n","import { MAX_GROWTH_MINDSET, MAX_HAND_SIZE } from './Constants';\nimport { DrawCard } from './Util';\n\n\nexport const BaseAction = {\n  displayName: null,\n  displayNameInShop: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  moneyCost: 0,\n  energyCost: 0,\n  producesGrowthMindset: 0,\n  producesMoney: 0,\n  producesAttention: 0,\n  producesEnergy: 0,\n  drawsCards: 0,\n  discardsCards: 0,\n  gainsCards: [],\n  forgetsOnDiscard: false,\n  forgetsSelf: false,\n  forgetsCards: 0,\n  // TODO: This is \"inheritance\" without any protection. Bad idea.\n  perform: function(G, ctx) {\n    // First check if we can afford the move.\n    if (G.energy <= 0) {\n      return false;\n    }\n    // Pay for the action.\n    G.energy--;\n    G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + this.producesGrowthMindset);\n    G.money += this.producesMoney;\n    G.attention += this.producesAttention;\n    G.energy += this.producesEnergy;\n    for (let i = 0; i < this.drawsCards; i++) {\n      DrawCard(G, ctx);\n    }\n    if (this.discardsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToDiscard = this.discardsCards;\n      ctx.events.setStage('discard');\n    }\n    if (this.forgetsCards > 0 && G.hand.length > 0) {\n      G.cardsLeftToForget = this.forgetsCards;\n      ctx.events.setStage('forget');\n    }\n    this.gainsCards.forEach((c) => G.discard.push(c));\n    return true;\n  },\n  buy: function(G, ctx) {\n    if (G.attention <= 0 || G.money < this.moneyCost || G.energy < this.energyCost) {\n      return false;\n    }\n    // Pay for the action.\n    G.attention--;\n    G.money -= this.moneyCost;\n    G.energy -= this.energyCost;\n    G.discard.push(this.id);\n    return true;\n  },\n};\n\nconst actionList = [\n  {\n    id: \"Card01\",\n    displayName: \"Card1\",\n    description: \"Make sure to play this every turn!\",\n    producesGrowthMindset: 1,\n  },\n  {\n    id: \"Card02\",\n    displayName: \"Card2\",\n    description: \"Getting money lets you buy stuff.\",\n    producesMoney: 1,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card03\",\n    displayName: \"Card3\",\n    description: \"Sometimes you just want to forget everything.\",\n    moneyCost: 2,\n    forgetsSelf: true,\n    forgetsCards: MAX_HAND_SIZE,\n  },\n  {\n    id: \"Card04\",\n    displayName: \"Card4\",\n    description: \"If you play this, you'll have to pick another card in your hand to discard.\",\n    moneyCost: 2,\n    drawsCards: 3,\n    discardsCards: 1,\n  },\n  {\n    id: \"Card05\",\n    displayName: \"Card5\",\n    description: \"Doing too much can make you tired.\",\n    moneyCost: 2,\n    producesGrowthMindset: 1,\n    producesMoney: 1,\n    producesEnergy: 1,\n    drawsCards: 1,\n    gainsCards: [\"fatigue\"],\n  },\n  {\n    id: \"Card06\",\n    displayName: \"Card6\",\n    description: \"More energy means you can play more actions!\",\n    moneyCost: 3,\n    producesEnergy: 2,\n    drawsCards: 1,\n  },\n  {\n    id: \"Card07\",\n    displayName: \"Card7\",\n    description: \"IDK\",\n    moneyCost: 3,\n  },\n  {\n    id: \"Card08\",\n    displayName: \"Card8\",\n    description: \"IDK\",\n    moneyCost: 4,\n  },\n  {\n    id: \"Card09\",\n    displayName: \"Card9\",\n    description: \"More money\",\n    moneyCost: 4,\n    producesMoney: 2,\n    producesEnergy: 1,\n  },\n  {\n    id: \"Card10\",\n    displayName: \"Card10\",\n    description: \"That's a lot of energy.\",\n    moneyCost: 4,\n    producesAttention: 1,\n    producesEnergy: 4,\n  },\n  {\n    id: \"Card11\",\n    displayName: \"Card11\",\n    description: \"Maybe there are better options.\",\n    moneyCost: 5,\n    producesEnergy: 1,\n    drawsCards: 2,\n  },\n  {\n    id: \"Card12\",\n    displayName: \"Card12\",\n    description: \"More more money\",\n    moneyCost: 6,\n    producesMoney: 3,\n    producesEnergy: 1,\n  },\n  {\n    id: \"fatigue\",\n    displayName: \"Fatigue\",\n    description: \"Better rest up or I'll just get even more tired later.\",\n    forgetsSelf: true,\n  },\n  {\n    id: \"summerHomework\",\n    displayName: \"Summer Homework\",\n    description: \"So tedious...\",\n    producesGrowthMindset: 1,\n    forgetsSelf: true,\n    forgetsOnDiscard: true,\n  },\n].map(c => ({\n  ...BaseAction,\n  ...c,\n}));\n\nexport const PatchDisplayName = function(action) {\n  return {\n    ...BaseAction,\n    ...action,\n    ...{\n      // Hack to back-populate the displayName.\n      displayNameInShop: action.displayNameInShop ? action.displayNameInShop : action.displayName\n    }\n  };\n}\nexport const PatchDisplayNames = function(actions) {\n  const patchedActions = {};\n  for (let [id, action] of Object.entries(actions)) {\n    patchedActions[id] = PatchDisplayName(action);\n  }\n  return patchedActions;\n}\n\nconst Actions = actionList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport const ActionsPlugin = (options) => {\n  const {\n    initialActions,\n  } = options;\n  return {\n    name: \"actions\",\n    setup: () => ({\n      actions: initialActions,\n    }),\n    api: ({ctx, data}) => ({\n      getActions: function():object {\n        // Get the nice re-hydrated version of events.\n        const patchedActions = {}\n        for (let id in data.actions) {\n          patchedActions[id] = this.getAction(id);\n        }\n        return patchedActions;\n      },\n      getAction: (actionId) => PatchDisplayName(data.actions[actionId]),\n    }),\n  };\n};\n\nexport default Actions;\n","export const BaseEvent = {\n  displayName: null,\n  image: null,\n  song: null,\n  description: \"<FLAVOR>\",\n  clearsShop: false,\n  engrossedTurns: 0,\n  inspiredTurns: 0,\n  indebtedTurns: 0,\n  energizedTurns: 0,\n  addsCardsToShop: [],\n  addsCardsToDiscardPile: [],\n  apply: function(G, ctx) {\n    // TBD: Events can potentially have choices that spawn other events later.\n    if (this.inspiredTurns > 0) {\n      G.statuses.inspired = Math.max((G.statuses.inspired || 0), this.inspiredTurns);\n    }\n    if (this.energizedTurns > 0) {\n      G.statuses.energized = Math.max((G.statuses.energized || 0), this.energizedTurns);\n    }\n    if (this.engrossedTurns > 0) {\n      G.statuses.engrossed = Math.max((G.statuses.engrossed || 0), this.engrossedTurns);\n    }\n    if (this.indebtedTurns > 0) {\n      G.statuses.indebted = Math.max((G.statuses.indebted || 0), this.indebtedTurns);\n    }\n\n    if (this.clearsShop) {\n      G.actionShop.splice(0, G.actionShop.length);\n    }\n    for (let card of this.addsCardsToShop) {\n      G.actionShop.push(card);\n    }\n    for (let card of this.addsCardsToDiscardPile) {\n      G.discard.push(card);\n    }\n  }\n};\n\nconst eventList = [\n  {\n    id: \"SummerStart\",\n    image: \"middle_school_graduation.png\",\n    song: \"af.mp3\",\n    displayName: \"Congratulations\",\n    description: \"After a long year, you've finally graduated from middle school.\",\n    inspiredTurns: 2, // No growth mindset lost.\n    energizedTurns: 2, // One extra energy per turn.\n    addsCardsToDiscardPile: [\n      \"summerHomework\",\n      \"summerHomework\",\n      \"Card01\",\n    ],\n  },\n  {\n    id: \"SchoolStart\",\n    image: \"welcome_back.png\",\n    song: \"da.mp3\",\n    displayName: \"High School Begins\",\n    description: \"And just like that High School begins.\",\n    addsCardsToDiscardPile: [\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card02\",\n      \"Card01\",\n      \"Card01\",\n    ],\n    addsCardsToShop: [\n      \"Card02\",\n      \"Card02\",\n      \"Card04\",\n      \"Card05\",\n    ],\n  },\n].map(c => ({\n  ...BaseEvent,\n  ...c,\n}));\n\nconst Events = eventList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Events;\n","import { BaseEvent } from \"./Event\";\n\nexport class Schedule {\n  eventsByDay:object;\n\n  constructor(eventsByDay: object) {\n    this.eventsByDay = eventsByDay || {};\n  }\n\n  addEvent(turnNumber: number, eventId: string):void {\n    if (!(turnNumber in this.eventsByDay)) {\n      this.eventsByDay[turnNumber] = [];\n    }\n    this.eventsByDay[turnNumber].push(eventId);\n  }\n\n  getEvents(turnNumber: number):Array<string> {\n    if (turnNumber in this.eventsByDay) {\n      return this.eventsByDay[turnNumber]\n    }\n    return [];\n  }\n}\n\nexport const SchedulePlugin = (options) => {\n  const {\n    initialSchedule,\n    initialEvents,\n  } = options;\n  return {\n    name: \"schedule\",\n    setup: () => ({\n      schedule: initialSchedule,\n      events: initialEvents,\n    }),\n    api: ({ctx, data}) => ({\n      getCurrentEvents: function():Array<object> {\n        return new Schedule(data.schedule)\n          .getEvents(ctx.turn)\n          .map((eventId)=>({\n            id:eventId,\n            event: this.getEvent(eventId),\n          }));\n      },\n      addEvent: (turnNumber, eventId) => {\n        new Schedule(data.schedule).addEvent(turnNumber, eventId);\n      },\n      getEvents: function():object {\n        // Get the nice re-hydrated version of events.\n        const patchedEvents = {}\n        for (let id in data.events) {\n          patchedEvents[id] = this.getEvent(id);\n        }\n        return patchedEvents;\n      },\n      getEvent: (eventId) => ({\n        // Re-hydrate functions for use in the Game engine.\n        ...BaseEvent,\n        ...data.events[eventId]\n      }),\n      getRaw: () => {\n        return data;\n      }\n    }),\n  }\n}\n\nexport const INITIAL_SCHEDULE = {\n    0: [\"SummerStart\"],\n    2: [\"SchoolStart\"],\n};\n\nexport default Schedule;\n","import {\n  createContext,\n} from \"react\";\n\nconst LocalStorageContext = createContext({});\n\nexport default LocalStorageContext;\n","import { MAX_GROWTH_MINDSET } from \"./Constants\";\n\nexport const BaseStatus = {\n  displayName: null,\n  image: null,\n  description: \"<FLAVOR>\",\n  apply: function(G, ctx) { }\n};\n\nconst statusList = [\n  {\n    id: \"energized\",\n    displayName: \"Energized\",\n    description: \"Gain an extra energy at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.energy += 1;\n    },\n  },\n  {\n    id: \"inspired\",\n    displayName: \"Inspired\",\n    description: \"Nullify the usual loss of growth mindset at the start of each turn.\",\n    apply: function(G, ctx) {\n      G.growthMindsetPoints = Math.min(MAX_GROWTH_MINDSET, G.growthMindsetPoints + 1);\n    },\n  },\n  {\n    id: \"engrossed\",\n    displayName: \"Engrossed\",\n    description: \"Start the turn with 0 attention.\",\n    apply: function(G, ctx) {\n      G.attention -= 1;\n    },\n  },\n  {\n    id: \"indebted\",\n    displayName: \"Indebted\",\n    description: \"Start the turn with -1 money.\",\n    apply: function(G, ctx) {\n      G.money -= 1;\n    },\n  },\n].map(c => ({\n  ...BaseStatus,\n  ...c,\n}));\n\nconst Statuses = statusList.reduce(function(rv, x) {\n  rv[x.id] = x;\n  return rv;\n}, {});\n\nexport default Statuses;\n","import { INVALID_MOVE } from 'boardgame.io/core';\n\nimport Statuses from './Status';\n\nimport {\n  DrawCard\n} from './Util';\n\nconst INITIAL_BOARD = {\n  actionShop: [\n    /*\n    ...Array(2).fill(\"Card02\"),\n    ...Array(1).fill(\"Card06\"),\n    ...Array(2).fill(\"Card09\"),\n    ...Array(1).fill(\"Card10\"),\n    ...Array(1).fill(\"Card12\"),\n    ...(Object.keys(Actions).filter((c)=>Actions[c].isBuyable))\n    */\n  ].sort(),\n  deck: [\n    /*\n    // Turn 2. Will require some sacrifice.\n    \"Card02\", \"Card01\",\n    // Turn 1.\n    \"Card02\", \"Card02\", \"Card01\",\n    */\n  ],\n  hand: [],\n  discard: [],\n  growthMindsetPoints: 1,\n  cardsLeftToDiscard: 0,\n  cardsLeftToForget: 0,\n  statuses: {},\n  currentEvent: null,\n  backgroundImage: null,\n};\n\nconst STARTS_TURN_WITH = {\n  money: 0,\n  attention: 1,\n  energy: 1,\n};\n\nfunction SetupNewTurn(G, ctx) {\n  // First process any events.\n  console.log(ctx);\n  const events = ctx.schedule.getCurrentEvents();\n  console.log(events);\n  events.forEach(({id, event}) => {\n    event.apply(G, ctx);\n    G.currentEvent = id;\n  });\n  if (events.length === 0) {\n    // Don't bother with the Events UI if there's no events.\n    ctx.events.endStage();\n  }\n  // Discard the remainder of your hand.\n  while (G.hand.length > 0) {\n    let remainingCard = G.hand.pop();\n    if (!ctx.actions.getAction(remainingCard).forgetsOnDiscard) {\n      // You only get one chance to play certain kinds of cards.\n      G.discard.push(remainingCard);\n    }\n  }\n  const cardsToDraw = Math.min(5, G.growthMindsetPoints);\n  for (let i = 0; i < cardsToDraw; i++) {\n    DrawCard(G, ctx);\n  }\n  Object.assign(G, STARTS_TURN_WITH);\n  G.growthMindsetPoints--;\n\n  // Apply status effects last.\n  for (let [stat, dur] of Object.entries(G.statuses)) {\n    console.log(stat, dur);\n    if (dur > 0) {\n      Statuses[stat].apply(G, ctx);\n      G.statuses[stat]--;\n    } else {\n      delete G.statuses[stat];\n    }\n  }\n}\n\nexport const Apex2021 = {\n  setup: (ctx, setupData) => ({\n    ...INITIAL_BOARD,\n    ...STARTS_TURN_WITH\n  }),\n  moves: {\n    performAction: (G, ctx, handIndex) => {\n      const actionId = G.hand[handIndex];\n      const action = ctx.actions.getAction(actionId);\n      // Remove the card to be plpayed from the hand. Otherwise, weird\n      // self-interactions are possible.\n      G.hand.splice(handIndex, 1);\n      if (!action.perform(G, ctx)) {\n        // Return the card to its original location.\n        G.hand.splice(handIndex, 0, actionId);\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      if (!action.forgetsSelf) {\n        // YOLO cards don't do this.\n        G.discard.push(actionId);\n      }\n    },\n    buyAction: (G, ctx, shopIndex) => {\n      const actionId = G.actionShop[shopIndex];\n      const action = ctx.actions.getAction(actionId);\n      if (!action.buy(G, ctx)) {\n        return INVALID_MOVE;\n      }\n      // Only call these if successful.\n      G.actionShop.splice(shopIndex, 1);\n    },\n    endTurn: (G, ctx) => {\n      ctx.events.endTurn();\n    },\n  },\n  turn: {\n    activePlayers: { all: \"showEvent\" },\n    onBegin: (G, ctx) => ( SetupNewTurn(G, ctx) ),\n    onEnd: (G, ctx) => {\n      if (G.growthMindsetPoints <= 0) {\n         ctx.events.endGame(\"fixed-mindset\");\n      }\n      //return G;\n    },\n    stages: {\n      showEvent: {\n        moves: {\n          chooseOption: (G, ctx, optionIndex) => {\n            // TBD: Events don't have any choices yet.\n          },\n          dismiss: (G, ctx) => {\n            G.backgroundImage = ctx.schedule.getEvent(G.currentEvent).image;\n            G.currentEvent = null;\n            ctx.events.endStage();\n          },\n        },\n      },\n      discard: {\n        moves: {\n          discardAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToDiscard);\n            const actionId = G.hand[handIndex];\n            G.hand.splice(handIndex, 1);\n            G.discard.push(actionId);\n            if (G.hand.length === 0) {\n              G.cardsLeftToDiscard = 0;\n            } else {\n              G.cardsLeftToDiscard--;\n            }\n            if (G.cardsLeftToDiscard <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      },\n      forget: {\n        moves: {\n          forgetAction: (G, ctx, handIndex) => {\n            console.log(G.cardsLeftToForget);\n            G.hand.splice(handIndex, 1);\n            if (G.hand.length === 0) {\n              G.cardsLeftToForget = 0;\n            } else {\n              G.cardsLeftToForget--;\n            }\n            if (G.cardsLeftToForget <= 0) {\n              ctx.events.endStage();\n            }\n          }\n        }\n      }\n    }\n  },\n};\n","import React from 'react';\r\n\r\nconst GameContext = React.createContext({});\r\n\r\nexport default GameContext;\r\n","import React, {\n  useContext,\n} from \"react\";\n\nimport {\n  Badge,\n  ProgressBar,\n  Table,\n} from \"react-bootstrap\";\n\nimport { MAX_GROWTH_MINDSET } from \"../Constants\";\nimport GameContext from \"../GameContext\";\n\nconst GROWTH_MINDSET_COLOR = {\n  0: \"danger\",\n  1: \"danger\",\n  2: \"danger\",\n  3: \"warning\",\n  4: \"success\",\n  5: \"info\",\n};\n\n\nfunction GameInfo() {\n  const {\n    G,\n    ctx,\n  } = useContext(GameContext);\n  const {\n    growthMindsetPoints,\n    money,\n    attention,\n    energy\n  } = G;\n  return (\n    <Table responsive bordered id=\"player-info\">\n      <thead>\n        <tr className=\"info-label-row\">\n          <th>Day #</th>\n          <th>Growth Mindset</th>\n          <th>Money</th>\n          <th>Attention</th>\n          <th>Energy</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"info-data-row\">\n          <td><Badge variant=\"dark\">{ctx.turn}</Badge></td>\n          <td>\n            <ProgressBar\n              now={(growthMindsetPoints * 100.0 /MAX_GROWTH_MINDSET).toPrecision(3)}\n              label={growthMindsetPoints}\n              variant={GROWTH_MINDSET_COLOR[growthMindsetPoints]}\n              animated={growthMindsetPoints === MAX_GROWTH_MINDSET}\n            />\n          </td>\n          <td><Badge variant=\"warning\">{money}</Badge></td>\n          <td><Badge variant=\"primary\">{attention}</Badge></td>\n          <td><Badge variant=\"success\">{energy}</Badge></td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GameInfo;\n","import React, {\n  useEffect,\n  useContext,\n} from \"react\";\n\nimport {\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport GameContext from \"../GameContext\";\n\nfunction CardOrCards(number) {\n  return \"\" + number + \" \" + (number > 1 ? \"cards\" : \"card\");\n}\n\nexport const Description = (props) => {\n  const { description, runEffect, className, passthrough } = props;\n  useEffect(\n    () => {\n      if (runEffect) {\n        runEffect();\n      }\n    }\n  );\n  return (\n    <Tooltip id=\"keyword-description\" className={className} {...passthrough}>\n      {description}\n    </Tooltip>\n  );\n};\n\nexport const Keyword = (props) => {\n  const { value, description, tooltipClassName, runEffect } = props;\n  const renderDescription = (descriptionProps) => (\n    <Description\n      description={description}\n      className={tooltipClassName}\n      runEffect={runEffect}\n      passthrough={descriptionProps}\n    />\n  );\n  return (\n    <OverlayTrigger\n      placement=\"right\"\n      overlay={renderDescription}\n    >\n      <span className=\"card-keyword\">{value}</span>\n    </OverlayTrigger>\n  );\n};\n\nexport const Discard = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Discard \" + number}\n      description={\"Place cards from your hand into your discard pile until you have placed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const Draw = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Draw \" + number}\n      description={\"Place \" + CardOrCards(number) + \" from your deck into your hand. If your deck is empty, your discard pile will automatically be shuffled into your deck.\"}\n    />\n  );\n};\n\nexport const Forget = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"Forget \" + number}\n      description={\"Permanently remove cards from your hand until you have removed \" + CardOrCards(number) + \" or your hand is empty.\"}\n    />\n  );\n};\n\nexport const ForgetSelf = () => {\n  return (\n    <Keyword\n      value={\"Forget Self\"}\n      description={\"Permanently remove this card from your hand upon being played.\"}\n    />\n  );\n};\n\nexport const Gain = (props) => {\n  const { cardId, renderCard, tooltipClassName, runEffect } = props;\n  const {\n    actions\n  } = useContext(GameContext);\n  const card = renderCard({\n    cardId: cardId,\n    onClick: s=>{},\n    ...actions[cardId],\n  });\n  return (\n    <Keyword\n      value={\"Gain \" + actions[cardId].displayName}\n      description={card}\n      tooltipClassName={tooltipClassName}\n      runEffect={runEffect}\n    />\n  );\n};\n\nexport const BoostGrowthMindset = (props) => {\n  const { number } = props;\n  return (\n    <Keyword\n      value={\"+\" + number + \" Growth Mindset\"}\n      description={\"Growth Mindset represents the number of cards you can draw at the beginning of the next turn. You lose one point per turn, and Growth Mindset is capped at 5.\"}\n    />\n  );\n};\n\nexport const YOLO = (props) => {\n  return (\n    <Keyword\n      value={\"#YOLO\"}\n      description={\"If this card remains in your hand at the end of the turn, it will be permanently removed from your deck.\"}\n    />\n  );\n};\n","import React, {\n  useContext,\n  useState,\n} from \"react\";\n\nimport {\n  Badge,\n  Button,\n  Container,\n  Col,\n  Card,\n  CardColumns,\n  ListGroup,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\n\nimport { STATIC_ROOT } from \"../Constants\";\nimport GameContext from \"../GameContext\";\nimport {\n  BoostGrowthMindset,\n  Discard,\n  Draw,\n  Forget,\n  ForgetSelf,\n  Gain,\n  YOLO,\n} from \"./Keyword\";\n\nconst classNames = require(\"classnames\");\n\nfunction ActionCardFromStaticActions(props) {\n  const { cardId } = props;\n  const {\n    actions,\n  } = useContext(GameContext);\n  console.log(actions);\n  return <ActionCard {...props} {...actions[cardId]} />\n}\n\nexport function ActionCard(props) {\n  const [isSelected, setIsSelected] = useState(false);\n  const {\n    areaType,\n    onClick,\n    ref,\n    gameStage,\n    displayName,\n    displayNameInShop,\n    image,\n    description,\n    moneyCost,\n    energyCost,\n    producesGrowthMindset,\n    producesMoney,\n    producesAttention,\n    producesEnergy,\n    drawsCards,\n    discardsCards,\n    gainsCards,\n    forgetsOnDiscard,\n    forgetsSelf,\n    forgetsCards,\n  } = props;\n  const isSpecialHandSelectionStage = (\n    (areaType === \"Hand\") &&\n    (gameStage === \"discard\" || gameStage === \"forget\")\n  );\n  const bg = isSpecialHandSelectionStage ? \"danger\" : null;\n  const className = classNames({\n    \"action-card\": true,\n    \"special-condition\": isSpecialHandSelectionStage\n  });\n  return (\n    <Card\n      ref = {ref}\n      onClick={onClick}\n      onMouseEnter={() => setIsSelected(true)}\n      onMouseLeave={() => setIsSelected(false)}\n      bg={bg}\n      border={isSelected ? \"warning\" : \"secondary\"}\n      className={className}\n    >\n      <Card.Header>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Makes:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {producesMoney}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"primary\">\n                {producesAttention}\n              </Badge>\n            </Col>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {producesEnergy}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{areaType === \"Shop\" && displayNameInShop ? displayNameInShop : displayName}</Card.Title>\n        <Card.Img src={image !== null ? `${STATIC_ROOT}/${image}` : `${STATIC_ROOT}/images/card/Placeholder_16_9.svg`} className=\"card-image\"/>\n        <ListGroup className=\"extra-rules\">\n          {\n            (producesGrowthMindset > 0) && (\n              <ListGroup.Item key=\"growth-mindset\"><BoostGrowthMindset number={producesGrowthMindset}/></ListGroup.Item>\n            )\n          }\n          {\n            (drawsCards > 0) && (\n              <ListGroup.Item key=\"draws-cards\"><Draw number={drawsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (discardsCards > 0) && (\n              <ListGroup.Item key=\"discards-cards\"><Discard number={discardsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsOnDiscard) && (\n              <ListGroup.Item key=\"forgets-on-discard\"><YOLO/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsSelf) && (\n              <ListGroup.Item key=\"forgets-self\"><ForgetSelf/></ListGroup.Item>\n            )\n          }\n          {\n            (forgetsCards > 0) && (\n              <ListGroup.Item key=\"forgets-cards\"><Forget number={forgetsCards}/></ListGroup.Item>\n            )\n          }\n          {\n            gainsCards.map((cardId, gainedCardIndex) =>\n              <ListGroup.Item key={\"gains-\" + gainedCardIndex}>\n                <Gain\n                  cardId={cardId}\n                  renderCard={ActionCard}\n                  tooltipClassName=\"card-preview\"\n                  runEffect={()=>{}}\n                />\n              </ListGroup.Item>\n            )\n          }\n        </ListGroup>\n        <Card.Text className=\"flavor\">\n          {description}\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Container fluid>\n          <Row>\n            <Col xs={4} className=\"cost-label\">\n                Costs:\n            </Col>\n            <Col xs={4}/>\n            <Col xs={1}>\n              <Badge variant=\"warning\">\n                {moneyCost}\n              </Badge>\n            </Col>\n            <Col xs={1}/>\n            <Col xs={1}>\n              <Badge variant=\"success\">\n                {energyCost}\n              </Badge>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction ActionList(props) {\n  const { actionsList, className, onClick, gameStage } = props;\n  const actionCards = actionsList.map((actionId, slotId) => (\n    <ActionCardFromStaticActions\n      areaType={className}\n      cardId={actionId}\n      key={slotId}\n      onClick={() => onClick(slotId)}\n      gameStage={gameStage} />\n  ));\n  return (\n    <CardColumns className={\"action-list-\" + className}>\n      {actionCards.length > 0 ? actionCards :\n        <Badge><h1>No Actions Available</h1></Badge>}\n    </CardColumns>\n  );\n}\n\nfunction ActionArea() {\n  const {\n    G,\n    ctx,\n    moves,\n  } = useContext(GameContext);\n  const {\n    hand,\n    actionShop,\n    deck,\n    discard,\n  } = G;\n  const noop = (x) => {};\n  const isDiscard = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"discard\";\n  const isForget = ctx.activePlayers && ctx.activePlayers[ctx.playOrderPos] === \"forget\";\n  const gameStage = isDiscard ? \"discard\" : isForget ? \"forget\" : null;\n  const actionData = {\n    \"Hand\": {\n      actions: hand,\n      onClick: isDiscard ? moves.discardAction: isForget ? moves.forgetAction : moves.performAction\n    },\n    \"Shop\": {\n      actions: actionShop,\n      onClick: isDiscard ? noop : moves.buyAction\n    },\n    \"Deck\": {\n      actions: [...deck].sort(), // Hide the order of the cards.\n      onClick: noop\n    },\n    \"Discard Pile\": {\n      actions: discard,\n      onClick: noop\n    },\n  };\n  const [tab, setTab] = useState(\"Hand\");\n  const tabs = Object.keys(actionData).map((areaType) => (\n    <Tab eventKey={areaType} title={areaType} key={areaType}>\n      <ActionList\n        actionsList={actionData[areaType].actions}\n        className={areaType}\n        onClick={actionData[areaType].onClick}\n        gameStage={gameStage}\n      />\n    </Tab>\n  ));\n  return (\n    <div id=\"game-tabs\">\n      <Tabs id=\"actions\" activeKey={tab} onSelect={(k)=>setTab(k)}>\n        {tabs}\n        <Tab eventKey=\"next-turn\" title=\"Next Turn\" key=\"next-turn\">\n          <Button\n            onClick={() => {\n              moves.endTurn();\n              setTab(\"Hand\");\n            }}\n            className=\"confirm-next-turn\"\n          >\n            Confirm End Turn\n          </Button>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default ActionArea;\n","import React, {\n  createRef,\n  useEffect,\n  useState,\n} from \"react\";\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nconst MusicPlayer = (props) => {\n  const {\n    songUrl\n  } = props;\n  const [currentSong, setCurrentSong] = useState(null);\n  const player = createRef();\n  useEffect(() => {\n    if (songUrl === currentSong) {\n      return;\n    }\n    player.current.pause();\n    player.current.src = `${STATIC_ROOT}/${songUrl}`;\n    player.current.play();\n    console.log(`Switching song from: ${currentSong} to ${player.current.src}`);\n    setCurrentSong(songUrl);\n  }, [currentSong, player, songUrl]);\n  return (\n    <audio ref={player} loop/>\n  );\n};\n\nexport default MusicPlayer;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Button,\n  Container,\n  Col,\n  Modal,\n  Row,\n} from \"react-bootstrap\";\n\nimport {\n  STATIC_ROOT,\n} from \"../Constants\";\n\nimport GameContext from \"../GameContext\";\nimport GameInfo from \"./GameInfo\";\nimport ActionArea from \"./ActionArea\";\nimport MusicPlayer from \"./MusicPlayer\";\n\nexport function EventModal(props) {\n  const {\n    event,\n    show,\n    onHide,\n  } = props;\n  const {\n    displayName,\n    description,\n    image,\n  } = event;\n  const styles = {\n    backgroundImage: image == null ? null : `url(${STATIC_ROOT}/${image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n  };\n  return (\n    <Modal\n      size = \"lg\"\n      show = {show}\n      onHide = {onHide}\n      style = {styles}\n      className = \"event-modal\"\n      centered\n      {...props}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          {displayName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {description}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>Continue</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nfunction Event(props) {\n  const {\n    G,\n    moves,\n    events,\n    playSong,\n  } = useContext(GameContext);\n  const show = G.currentEvent in events;\n  const onHide = () => moves.dismiss();\n  const ev = events[G.currentEvent];\n  useEffect(() => {\n    if (ev && ev.song && show) {\n      playSong(ev.song);\n    }\n  }, [ev, playSong, show]);\n  if (!show) {\n    return <></>;\n  }\n  return <EventModal\n    event={ev}\n    show={show}\n    onHide={onHide}\n  />\n}\n\nconst Board = function(props) {\n  const {\n    G,\n    ctx,\n    moves,\n    plugins,\n  } = useContext(GameContext);\n  const actions = plugins.actions.api.getActions();\n  const events = plugins.schedule.api.getEvents();\n  const [songUrl, playSong] = useState(null);\n  const {\n    backgroundImage\n  } = G;\n  const styles = {\n    backgroundImage: backgroundImage == null ? null : `url(${STATIC_ROOT}/${backgroundImage})`,\n    backgroundSize: \"cover\",\n  };\n  // Game has started.\n  return (\n    <GameContext.Provider value={{\n      G: G,\n      ctx: ctx,\n      moves: moves,\n      actions: actions,\n      events: events,\n      songUrl: songUrl,\n      playSong: playSong,\n    }}>\n      <div style={styles} id=\"bg-container\"/>\n      <div id=\"game-wrapper\">\n        <Container fluid id=\"game-container\">\n          <Row>\n            <Col>\n              <GameInfo/>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <ActionArea/>\n            </Col>\n          </Row>\n        </Container>\n        <Event/>\n      </div>\n      <MusicPlayer songUrl={songUrl}/>\n    </GameContext.Provider>\n  );\n}\n\nexport default Board;\n","const StripPrefix = (x, p, t) => {\n  let cleaned = x.replace(/^\\.\\//, \"\");\n  let value = `${p}/${cleaned}`;\n  return {\n    [value]: {\n      label: cleaned,\n      value: value,\n      type: t,\n    }\n  }\n};\n\nconst FromRequireContext = (rc, p, t) => Object.assign(\n  {},\n  ...rc.keys().map(k => StripPrefix(k, p, t))\n);\n\nconst CardImages = FromRequireContext(\n  require.context('../public/images/card', false, /.png$/),\n  \"images/card\",\n  \"img\"\n);\nconst EventImages = FromRequireContext(\n  require.context('../public/images/event', false, /.png$/),\n  \"images/event\",\n  \"img\"\n);\nconst Songs = FromRequireContext(\n  require.context('../public/songs', false, /.mp3$/),\n  \"songs\",\n  \"audio\"\n);\nexport { CardImages, EventImages, Songs };\n\nconst PreloadAssetList = [\n    ...Object.values(CardImages),\n    ...Object.values(EventImages),\n    ...Object.values(Songs),\n].map(x=>({[x.value]: x.type}));\n\nconsole.log(CardImages);\n\nconst Assets = Object.assign(\n  {},\n  ...PreloadAssetList\n);\n\nconsole.log(Assets);\nexport default Assets;\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  ListGroup,\r\n  Modal,\r\n  Nav,\r\n  OverlayTrigger,\r\n  Row,\r\n  Tab,\r\n  Table,\r\n  Tabs,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  Multiselect,\r\n} from \"multiselect-react-dropdown\";\r\n\r\nimport { EventModal } from \"./Board\";\r\nimport MusicPlayer from \"./MusicPlayer\";\r\nimport { CardImages, EventImages, Songs } from \"../Assets\";\r\nimport GameContext from \"../GameContext\";\r\nimport { MAX_TURN_COUNT } from \"../Constants\";\r\nimport { ActionCard } from \"./ActionArea\";\r\nimport {\r\n  BaseAction,\r\n} from \"../Action\";\r\nimport { BaseEvent } from \"../Event\";\r\nimport LocalStorageContext from \"../LocalStorageContext\";\r\n\r\nconst GameEditorContext = createContext({});\r\n// Cute hack from https://gist.github.com/mattwiebe/1005915\r\nfunction unCamelCase(input){return input.replace(/([a-z])([A-Z])/g,'$1 $2').replace(/\\b([A-Z]+)([A-Z])([a-z])/,'$1 $2$3').replace(/^./,function(s){return s.toUpperCase();})}\r\n\r\nfunction EntityEditor(props) {\r\n  const { actionId, eventId } = props;\r\n  const {\r\n    actions, setActions,\r\n    events, setEvents,\r\n  } = useContext(GameEditorContext);\r\n  const entityId = actionId ? actionId : eventId;\r\n  const entityType = actionId ? \"action\" : \"event\";\r\n  const entity = actionId ? actions[actionId] : events[eventId];\r\n  const entities = actionId ? actions : events;\r\n  const updaters = {};\r\n  const getValueType = (field, value) => {\r\n    if (field === \"image\") {\r\n      if (entityType === \"event\") {\r\n        return \"event-image\";\r\n      } else {\r\n        return \"card-image\";\r\n      }\r\n    } else if (field === \"song\") {\r\n      return \"song\";\r\n    } else {\r\n      return typeof(value);\r\n    }\r\n  };\r\n  for (let field of Object.keys(entity)) {\r\n    updaters[field] = (e, maybeOption) => {\r\n      const oldValue = entities[entityId][field];\r\n      let newValue;\r\n      let valueType = getValueType(field, oldValue);\r\n      switch (valueType) {\r\n        case \"card-image\":\r\n        case \"event-image\":\r\n        case \"song\":\r\n          switch(maybeOption.action) {\r\n            case \"deselect-option\":\r\n              newValue = null;\r\n              break;\r\n            case \"select-option\":\r\n              newValue = e.value;\r\n              break;\r\n            default:\r\n              throw new Error(`Don't know how to serialize ${maybeOption.action}.`);\r\n          }\r\n          break;\r\n        case \"string\":\r\n          newValue = e.target.value;\r\n          break;\r\n        case \"number\":\r\n          newValue = parseInt(e.target.value);\r\n          break;\r\n        case \"boolean\":\r\n          newValue = e.target.checked;\r\n          break;\r\n        case \"object\":\r\n          switch(maybeOption.action) {\r\n            case \"deselect-option\":\r\n              newValue = [\r\n                ...oldValue,\r\n                maybeOption.option.value,\r\n              ];\r\n              break;\r\n            case \"remove-value\":\r\n              let sequenceIdToRemove = maybeOption.removedValue.sequenceId;\r\n              newValue = [...oldValue];\r\n              newValue.splice(sequenceIdToRemove, 1);\r\n              break;\r\n            default:\r\n              newValue = e.map(o=>o.value);\r\n              break;\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Don't know how to serialize ${valueType}.`);\r\n      }\r\n      const updatedEntities = {\r\n        ...entities,\r\n        ...{\r\n          [entityId]: {\r\n            ...entities[entityId],\r\n            [field]: newValue\r\n          }\r\n        }\r\n      };\r\n      const updateEntities = actionId ? setActions : setEvents;\r\n      updateEntities(updatedEntities);\r\n    }\r\n  }\r\n  const assetSelector = (field, repo) => (\r\n    <Select\r\n      id={`${entityId}.${field}`}\r\n      value={entity[field] === null ? null : repo[entity[field]]}\r\n      onChange={updaters[field]}\r\n      options={Object.values(repo)}\r\n    />\r\n  );\r\n  const formGroups = Object.entries(entity)\r\n    .filter(([field, value]) => (\r\n      typeof(value) !== \"function\" &&\r\n      // TODO: Support re-identifying.\r\n      field !== \"id\"\r\n    ))\r\n    .map(([field, value]) => {\r\n      let input;\r\n      let valueType = getValueType(field, value);\r\n\r\n      // The bogus key is a cute hack to force re-render of the defaultValue.\r\n      switch (valueType) {\r\n        case \"card-image\":\r\n          input = assetSelector(field, CardImages);\r\n          break;\r\n        case \"event-image\":\r\n          input = assetSelector(field, EventImages);\r\n          break;\r\n        case \"song\":\r\n          input = assetSelector(field, Songs);\r\n          break;\r\n        case \"string\":\r\n          input = (\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={entity[field]}\r\n              onChange={updaters[field]}\r\n            />\r\n          );\r\n          break;\r\n        case \"number\":\r\n          input = (\r\n            <OverlayTrigger\r\n              placement=\"left\"\r\n              overlay={<Tooltip>{entity[field]}</Tooltip>}\r\n            >\r\n              <Form.Control\r\n                type=\"range\"\r\n                value={entity[field]}\r\n                max={10}\r\n                onChange={updaters[field]}\r\n              />\r\n            </OverlayTrigger>\r\n          );\r\n          break;\r\n        case \"boolean\":\r\n          input = (\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={entity[field]}\r\n              onChange={updaters[field]}\r\n            />\r\n          );\r\n          break;\r\n        case \"object\":\r\n          // TODO: Bogus check. Actually add a type schema.\r\n          if (field.indexOf(\"Cards\") >= 0) {\r\n            let relations = actions;\r\n            const options = Object.entries(relations).map(([id, value])=>({\r\n              label: value.displayName,\r\n              value: id\r\n            }));\r\n            const selectedValues = entity[field].map((id, sequenceId)=>({\r\n              label: relations[id].displayName,\r\n              value: id,\r\n              // This is just so we know which item was removed from the widget.\r\n              sequenceId: sequenceId\r\n            }));\r\n            input = (\r\n              <Select\r\n                id={`${entityId}.${field}`}\r\n                isMulti\r\n                hideSelectedOptions={false}\r\n                value={selectedValues}\r\n                onChange={updaters[field]}\r\n                options={options}\r\n                displayValue=\"name\"\r\n              />\r\n            );\r\n          } else {\r\n            throw new Error(`Unrecognized value ${value} for ${field}.`);\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Unrecognized value type ${value} for ${field}.`);\r\n      }\r\n      return (\r\n        <Form.Group as={Row} key={`edit-${field}`} controlId={`${entityId}.${field}`}>\r\n          <Form.Label column sm={4}>{unCamelCase(field)}</Form.Label>\r\n          <Col sm={8}>\r\n            {input}\r\n          </Col>\r\n        </Form.Group>\r\n      );\r\n    });\r\n  return <>\r\n      {formGroups}\r\n  </>\r\n}\r\n\r\nfunction ActionsTab(props) {\r\n  const {\r\n    actions,\r\n    setActions,\r\n  } = useContext(GameEditorContext);\r\n  const [ selectedAction, setSelectedAction ] = useState(Object.keys(actions)[0]);\r\n  const navs = Object.entries(actions).map(([id, action]) => (\r\n    <Nav.Item key={id}>\r\n      <Nav.Link eventKey={id}>{action.displayName}</Nav.Link>\r\n    </Nav.Item>\r\n  ));\r\n  const newAction = () => {\r\n    const newActionId = \"Card\" + (Object.keys(actions).length + 1);\r\n    const updatedActions = {\r\n      ...actions,\r\n      [newActionId] : {\r\n        ...BaseAction,\r\n        id: newActionId,\r\n        displayName: newActionId,\r\n        displayNameInShop: newActionId,\r\n      }\r\n    };\r\n    setActions(updatedActions);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col id=\"action-nav\" sm={2}>\r\n        <Nav\r\n          variant=\"pills\"\r\n          className=\"flex-column\"\r\n          defaultActiveKey={selectedAction}\r\n          onSelect={setSelectedAction}\r\n        >\r\n          {navs}\r\n          <Button onClick={newAction} variant=\"light\">+</Button>\r\n        </Nav>\r\n      </Col>\r\n      <Col sm={8}>\r\n        <div id=\"card-editor-card-container\">\r\n          <ActionCard cardId={selectedAction} onClick={()=>{}} {...actions[selectedAction]}/>\r\n        </div>\r\n        <EntityEditor actionId={selectedAction}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction EventPreview(props) {\r\n  const {\r\n    eventId\r\n  } = props;\r\n  const {\r\n    events,\r\n    // Music management is different in the editor since we don't let the songs\r\n    // persist once the preview is closed.\r\n    setSongUrl,\r\n  } = useContext(GameEditorContext);\r\n  const event = events[eventId];\r\n  const [ showEventPreview, setShowEventPreview ] = useState(false);\r\n  useEffect(() => {\r\n    if (showEventPreview) {\r\n      setSongUrl(`${event.song}`);\r\n    } else {\r\n      setSongUrl(null);\r\n    }\r\n  }, [event, setSongUrl, showEventPreview]);\r\n  const onButtonClick = () => setShowEventPreview(true);\r\n  const onEventPreviewClose = () => setShowEventPreview(false);\r\n  return <>\r\n    <Button onClick={onButtonClick}>Show Preview</Button>\r\n    <EventModal event={event} show={showEventPreview} onHide={onEventPreviewClose}/>\r\n  </>\r\n}\r\n\r\nfunction EventsTab(props) {\r\n  const {\r\n    events,\r\n    setEvents,\r\n  } = useContext(GameEditorContext);\r\n  const [ selectedEvent, setSelectedEvent ] = useState(Object.keys(events)[0]);\r\n  const navs = Object.entries(events).map(([id, event]) => (\r\n    <Nav.Item key={id}>\r\n      <Nav.Link eventKey={id}>{event.displayName}</Nav.Link>\r\n    </Nav.Item>\r\n  ));\r\n  const newEvent = () => {\r\n    const newEventId = \"Event\" + (Object.keys(events).length + 1);\r\n    const updatedEvents = {\r\n      ...events,\r\n      [newEventId] : {\r\n        ...BaseEvent,\r\n        id: newEventId,\r\n        displayName: newEventId,\r\n      }\r\n    };\r\n    setEvents(updatedEvents);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col id=\"action-nav\" sm={2}>\r\n        <Nav\r\n          variant=\"pills\"\r\n          className=\"flex-column\"\r\n          onSelect={setSelectedEvent}\r\n          defaultActiveKey={selectedEvent}\r\n        >\r\n          {navs}\r\n          <Button onClick={newEvent} variant=\"light\">+</Button>\r\n        </Nav>\r\n      </Col>\r\n      <Col sm={8}>\r\n        <EventPreview eventId={selectedEvent}/>\r\n        <EntityEditor eventId={selectedEvent}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction ScheduleTab(props) {\r\n  const {\r\n    schedule,\r\n    setSchedule,\r\n    events,\r\n  } = useContext(GameEditorContext);\r\n  const scheduleUpdater = (turn, updatedEvents) => {\r\n    setSchedule({\r\n      ...schedule,\r\n      [turn]: updatedEvents.map((e) => e.id),\r\n    });\r\n  };\r\n  const options = Object.entries(events).map(([eventId, event]) => ({\r\n    id: eventId,\r\n    name: event.displayName,\r\n  }));\r\n  const MAX_TURNS_PER_ROW = 6;\r\n  // Assume divisibility by 6.\r\n  const MAX_TURNS_PER_COLUMN = MAX_TURN_COUNT / MAX_TURNS_PER_ROW;\r\n  const rows = [...Array(MAX_TURNS_PER_COLUMN).keys()].map((row) => {\r\n    const cols = [...Array(MAX_TURNS_PER_ROW).keys()].map((col) => {\r\n      const turn = row * MAX_TURNS_PER_ROW + col;\r\n      const selectedValues = (schedule[turn] || []).map((eventId) => ({\r\n        id: eventId,\r\n        name: events[eventId].displayName,\r\n      }));\r\n      return (\r\n        <ListGroup.Item sm={4} key={`${row}.${col}`}>\r\n          <p>Turn {turn + 1}:</p>\r\n          <Multiselect\r\n            id={`${turn}.events`}\r\n            selectedValues={selectedValues}\r\n            onSelect={(l)=>scheduleUpdater(turn, l)}\r\n            onRemove={(l)=>scheduleUpdater(turn, l)}\r\n            options={options}\r\n            displayValue=\"name\"\r\n          />\r\n        </ListGroup.Item>\r\n      );\r\n    });\r\n    return (\r\n      <ListGroup horizontal={\"lg\"} key={row}>\r\n        {cols}\r\n      </ListGroup>\r\n    );\r\n  });\r\n  return <div id=\"schedule-editor\">\r\n    {rows}\r\n  </div>;\r\n}\r\n\r\nfunction ImportButton(props) {\r\n  const { dispatch } = props;\r\n  const [showImport, setShowImport] = useState(false);\r\n  const [newSaveFileName, setNewSaveFileName] = useState(\"<UNKNOWN>\");\r\n  const [newSaveData, setNewSaveData] = useState(null);\r\n  const [newSaveDataRaw, setNewSaveDataRaw] = useState(\"\");\r\n  const [dataErrors, setDataErrors] = useState(\"Please paste your data.\");\r\n  const importSave = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (newSaveData) {\r\n      dispatch({\r\n        type: \"new-save\",\r\n        saveFile: newSaveData\r\n      });\r\n      setShowImport(false);\r\n    }\r\n  };\r\n  const validateData = (evt) => {\r\n    setNewSaveDataRaw(evt.target.value)\r\n  };\r\n  const doValidate = (rawSaveData) => {\r\n    try {\r\n      const parsedData = JSON.parse(rawSaveData);\r\n      if (!parsedData.name) {\r\n        throw new Error(\"Could not parse save file name.\");\r\n      }\r\n      if (!parsedData.actions) {\r\n        throw new Error(\"Could not parse actions.\");\r\n      }\r\n      if (!parsedData.events) {\r\n        throw new Error(\"Could not parse events.\");\r\n      }\r\n      if (!parsedData.schedule) {\r\n        throw new Error(\"Could not parse schedule.\");\r\n      }\r\n      setNewSaveFileName(parsedData.name);\r\n      setNewSaveData(parsedData);\r\n      setDataErrors(null);\r\n    } catch (error) {\r\n      setNewSaveFileName(\"<UNKNOWN>\");\r\n      setNewSaveData(null);\r\n      setDataErrors(error.toString());\r\n    }\r\n  }\r\n  useEffect(()=> {\r\n    doValidate(newSaveDataRaw);\r\n  }, [newSaveDataRaw]);\r\n  return (\r\n    <>\r\n      <Button onClick={()=>setShowImport(true)}>Import</Button>\r\n      <Modal\r\n        size=\"lg\"\r\n        show={showImport}\r\n        onHide={() => setShowImport(false)}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Form noValidate onSubmit={importSave}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal title</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"import-name\">\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control type=\"text\" value={newSaveFileName} required disabled/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"import-data\">\r\n              <Form.Label>Data:</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={16}\r\n                value={newSaveDataRaw}\r\n                onChange={validateData}\r\n                placeholder=\"Paste your data here.\"\r\n                isValid={dataErrors === null}\r\n                isInvalid={dataErrors !== null}\r\n              />\r\n              <Form.Control.Feedback type={dataErrors ? \"invalid\" : \"valid\"}>\r\n                {dataErrors}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => setShowImport(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={newSaveData === null}>Import Save</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TestChanges(props) {\r\n  const {\r\n    saveId,\r\n  } = props;\r\n  const history = useHistory();\r\n  const handleSave = (state, action) => {\r\n    switch (action.type) {\r\n      case \"load-all\":\r\n        return action.saveFiles;\r\n      case \"new-save\":\r\n        const newSaveId = Object.keys(state).length;\r\n        return {\r\n          ...state,\r\n          [newSaveId]: {\r\n            ...action.saveFile,\r\n            timestamp: Date.now(),\r\n          }\r\n        };\r\n      default:\r\n        throw new Error(`Unrecognized action type: ${action.type}`);\r\n    }\r\n  };\r\n  const [ saveFiles, dispatch ] = useReducer(handleSave, {});\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"saveFiles\");\r\n    const knownSaves = JSON.parse(json);\r\n    if (knownSaves) {\r\n      dispatch({\r\n        type: \"load-all\",\r\n        saveFiles: knownSaves\r\n      });\r\n    }\r\n  }, [saveId]);\r\n  useEffect(() => {\r\n    if (Object.keys(saveFiles).length > 0) {\r\n      const json = JSON.stringify(saveFiles);\r\n      localStorage.setItem(\"saveFiles\", json);\r\n    }\r\n    const newSaveId = Object.keys(saveFiles).length - 1;\r\n    if (newSaveId >= 0 && newSaveId.toString() !== saveId) {\r\n      history.push(`/${newSaveId}/edit`);\r\n    }\r\n  }, [history, saveFiles, saveId]);\r\n  const {\r\n    actions,\r\n    events,\r\n    schedule,\r\n  } = useContext(GameEditorContext);\r\n  const [newSaveFileName, updateNewSaveFileName] = useState(\"Some Name\");\r\n  const newSave = () => {\r\n    dispatch({\r\n      type: \"new-save\",\r\n      saveFile: {\r\n        name: newSaveFileName,\r\n        actions: actions,\r\n        events: events,\r\n        schedule: schedule,\r\n      }\r\n    });\r\n  };\r\n  const doCopy = (saveId) => {\r\n    navigator.clipboard.writeText(JSON.stringify(saveFiles[saveId]));\r\n  };\r\n  const newSaveRow = (\r\n    <tr id=\"unsaved-row\" key=\"unsaved-row\">\r\n      <td>{Object.keys(saveFiles).length}</td>\r\n      <td>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={newSaveFileName}\r\n          onChange={(ev) => updateNewSaveFileName(ev.target.value)}\r\n        />\r\n      </td>\r\n      <td>Now</td>\r\n      <td>\r\n        <Button onClick={newSave}>Save Current</Button>&nbsp;\r\n        <ImportButton dispatch={dispatch}/>\r\n      </td>\r\n      <td><Button disabled>Save to export</Button></td>\r\n      <td>Save to launch</td>\r\n    </tr>\r\n  );\r\n  const generateRow = (saveId, name, timestamp) => (\r\n    <tr key={`save-${saveId}`}>\r\n      <td>{saveId}</td>\r\n      <td>{name}</td>\r\n      <td>{timestamp ? new Date(timestamp).toLocaleString() : \"N/A\"}</td>\r\n      <td><Link to={`/${saveId}/edit`}><Button>Load</Button></Link></td>\r\n      <td><Button onClick={()=>doCopy(saveId)}>Copy to Clipboard</Button></td>\r\n      <td><Link to={`/${saveId}/game`} target=\"_blank\"><Button>Launch Game</Button></Link></td>\r\n    </tr>\r\n  );\r\n  const saveRows = Object.entries(saveFiles).map(([saveId, saveFile]) => (\r\n    generateRow(saveId, saveFile.name, saveFile.timestamp)\r\n  )).reverse();\r\n  return (\r\n    <Table striped bordered hover size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>Save/Load</th>\r\n          <th>Export</th>\r\n          <th>Launch</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {newSaveRow}\r\n        {saveRows}\r\n        {generateRow(\"static\", \"Hard Coded Configuration\", null)}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nfunction CheckDirty(original, edited) {\r\n  for (let [id, entity] of Object.entries(edited)) {\r\n    if (!(id in original)) {\r\n      return true;\r\n    }\r\n    for (let [k, v] of Object.entries(entity)) {\r\n      if (v !== original[id][k]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction GameEditor(props) {\r\n  const { saveId } = props;\r\n  const localStorageContext = useContext(LocalStorageContext);\r\n  const {\r\n    actions,\r\n    setActions,\r\n    events,\r\n    setEvents,\r\n    schedule,\r\n    setSchedule,\r\n    isDebug,\r\n    setIsDebug,\r\n    ...remainder\r\n  } = localStorageContext;\r\n  // We need to store dirty copies of the game configuration to avoid reloading\r\n  // whenever we edit anything.\r\n  // TODO: Migrate this to redux.\r\n  const [editedActions, setEditedActions] = useState(actions);\r\n  const [editedEvents, setEditedEvents] = useState(events);\r\n  const [editedSchedule, setEditedSchedule] = useState(schedule);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [songUrl, setSongUrl] = useState(null);\r\n  useEffect(() => {\r\n    if (CheckDirty(actions, editedActions) ||\r\n        CheckDirty(events, editedEvents) ||\r\n        CheckDirty(schedule, editedSchedule)\r\n    ) {\r\n      setIsDirty(true);\r\n    } else {\r\n      setIsDirty(false);\r\n    }\r\n  }, [actions, editedActions, events, editedEvents, schedule, editedSchedule]);\r\n\r\n  useEffect(() => {\r\n    // No point in having debug mode on for the editor.\r\n    if (isDebug) {\r\n      setIsDebug(false);\r\n    }\r\n  }, [isDebug, setIsDebug]);\r\n  return (\r\n    <GameEditorContext.Provider value={{\r\n      actions: editedActions,\r\n      setActions: setEditedActions,\r\n      events: editedEvents,\r\n      setEvents: setEditedEvents,\r\n      schedule: editedSchedule,\r\n      setSchedule: setEditedSchedule,\r\n      saveId: saveId,\r\n      songUrl: songUrl,\r\n      setSongUrl: setSongUrl,\r\n      ...remainder\r\n    }}>\r\n      <Tabs id=\"editor-root\" defaultActiveKey=\"actions\">\r\n        <Tab disabled title={isDirty ? \"Unsaved Changes\" : `Save Slot: ${saveId}`}>\r\n        </Tab>\r\n        <Tab eventKey=\"actions\" title=\"Actions\" key=\"edit-actions\">\r\n          <GameContext.Provider value={{\r\n            // We need to override the locally edited actions in order for\r\n            // linked card previews (e.g. from \"Gain\") to be up-to-date.\r\n            actions: editedActions,\r\n          }}>\r\n            <ActionsTab/>\r\n          </GameContext.Provider>\r\n        </Tab>\r\n        <Tab eventKey=\"events\" title=\"Events\" key=\"edit-events\">\r\n          <EventsTab/>\r\n        </Tab>\r\n        <Tab eventKey=\"schedule\" title=\"Schedule\" key=\"edit-schedule\">\r\n          <ScheduleTab/>\r\n        </Tab>\r\n        <Tab eventKey=\"test\" title=\"Test Changes\" key=\"test\">\r\n          <TestChanges saveId={saveId}/>\r\n        </Tab>\r\n      </Tabs>\r\n      <MusicPlayer songUrl={songUrl}/>\r\n    </GameEditorContext.Provider>\r\n  );\r\n}\r\n\r\nexport default GameEditor;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\n\r\nimport {\r\n  STATIC_ROOT,\r\n} from \"../Constants\";\r\n\r\nimport Assets from \"../Assets\";\r\nimport GameContext from \"../GameContext\";\r\nimport LocalStorageContext from \"../LocalStorageContext\";\r\n\r\nconst Loading = function(props) {\r\n  const {\r\n    count,\r\n    total,\r\n    percent,\r\n    startGame\r\n  } = props;\r\n  return (\r\n    <div id=\"loading\">\r\n      <ProgressBar now={percent}/>\r\n      <hr/>\r\n      <p>\r\n        {\r\n          count < total ? (\r\n            `Loaded ${count}/${total} assets...`\r\n          ) : (\r\n            <Button onClick={startGame}>Begin</Button>\r\n          )\r\n        }\r\n      </p>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst LoadAsset = (asset, src, updateProgress, resolve) => {\r\n  // Incrementally update progress bar.\r\n  updateProgress();\r\n  resolve(asset);\r\n};\r\n\r\n// Pattern ripped from\r\n// https://jack72828383883.medium.com/ff1642708240\r\nconst Preload = async (assets: object, updateProgress) => {\r\n  const promises = await Object.keys(assets).map((src) => {\r\n    if (src === \"undefined\") {\r\n      throw new Error(\"Could not resolve URL for asset.\")\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n      const assetType = assets[src];\r\n      let asset;\r\n      switch (assetType) {\r\n        case \"img\":\r\n          asset = new Image();\r\n          asset.onload = () => {\r\n            LoadAsset(asset, src, updateProgress, resolve);\r\n          };\r\n          break;\r\n        case \"audio\":\r\n          asset = new Audio();\r\n          // Audio files have different handlers.\r\n          asset.oncanplaythrough = () => {\r\n            LoadAsset(asset, src, updateProgress, resolve);\r\n          };\r\n          break;\r\n        default:\r\n          throw new Error(`Unrecognized asset type: ${assetType}`);\r\n      }\r\n      asset.src = `${STATIC_ROOT}/${src}`;\r\n      asset.onerror = () => {\r\n        reject(`Could not load ${assetType}: ${asset.src}`);\r\n      };\r\n    });\r\n  });\r\n  await Promise.all(promises);\r\n};\r\n\r\nconst LoadingScreen = (props) => {\r\n  const {\r\n    children,\r\n    isLoading,\r\n    setIsLoading,\r\n    ...nonChildren\r\n  } = props;\r\n  const {\r\n    plugins\r\n  } = nonChildren;\r\n  const parentContext = useContext(LocalStorageContext);\r\n  const actions = plugins.actions.api.getActions();\r\n  const events = plugins.schedule.api.getEvents();\r\n  const [hasPreloaded, setHasPreloaded] = useState(false);\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"increment\":\r\n        return {\r\n          count: state.count + 1,\r\n          total: state.total,\r\n          percent: (100.0 * (state.count + 1) / state.total)\r\n        };\r\n      default:\r\n        throw new Error(`Unsupported action type ${action.type}`);\r\n    }\r\n  };\r\n  // TODO: Clean up this assets computation.\r\n  const assetsToLoad = Assets;\r\n  const [loadingState, dispatch] = useReducer(reducer, {\r\n    count: 0,\r\n    total: Object.keys(assetsToLoad).length,\r\n    percent: 0,\r\n  });\r\n  useEffect(() => {\r\n    Preload(\r\n      // Preload all the images and audio.\r\n      Assets,\r\n      // And update the progress bar when each item is loaded.\r\n      () => {\r\n        if (!hasPreloaded) {\r\n          dispatch({type: \"increment\"})\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      setHasPreloaded(true);\r\n    };\r\n  }, [dispatch, hasPreloaded, plugins]);\r\n\r\n  if (isLoading) {\r\n    // TODO: In theory we should introduce an intermediate \"loaded-but-not-started\" state.\r\n    return <Loading startGame={() => setIsLoading(false)} {...loadingState} />;\r\n  }\r\n  return (\r\n    <LocalStorageContext.Provider value={{\r\n      // Patch in the cleaned actions and events.\r\n      ...parentContext,\r\n      actions: actions,\r\n      events: events,\r\n    }}>\r\n      <GameContext.Provider value={{\r\n        ...nonChildren\r\n      }}>\r\n        {children}\r\n      </GameContext.Provider>\r\n    </LocalStorageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React, {\n  useEffect,\n  useState,\n} from \"react\";\n\nimport {\n  Route,\n} from 'react-router-dom';\n\nimport { Client } from 'boardgame.io/react';\n\nimport Actions, {\n  ActionsPlugin,\n} from \"./Action\";\n\nimport Events from \"./Event\";\nimport {\n  SchedulePlugin,\n  INITIAL_SCHEDULE,\n} from \"./Schedule\";\n\nimport LocalStorageContext from \"./LocalStorageContext\";\nimport { Apex2021 } from './Game';\nimport Board from './component/Board';\nimport GameEditor from './component/GameEditor';\nimport LoadingScreen from './component/LoadingScreen';\n\nconst LocalStorageRouter = (props) => {\n  const {\n    match,\n  } = props;\n  const [isDebug, setIsDebug] = useState(true);\n  const [actions, setActions] = useState(Actions);\n  const [events, setEvents] = useState(Events);\n  const [schedule, setSchedule] = useState(INITIAL_SCHEDULE);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const json = localStorage.getItem(\"saveFiles\");\n    const knownSaves = JSON.parse(json);\n    if (knownSaves && match.params.configId) {\n      const saveFile = knownSaves[match.params.configId];\n      if (saveFile) {\n        setActions(saveFile.actions);\n        setEvents(saveFile.events);\n        setSchedule(saveFile.schedule);\n      }\n    }\n  }, [match]);\n  const game = {\n    ...Apex2021,\n    plugins: [\n      SchedulePlugin({\n        initialSchedule: schedule,\n        initialEvents: events,\n      }),\n      ActionsPlugin({\n        initialActions: actions,\n      }),\n    ]\n  };\n  const MaybeBoardOrEditor = (props) => (\n    <LocalStorageContext.Provider value={{\n      actions: actions,\n      setActions: setActions,\n      events: events,\n      setEvents: setEvents,\n      schedule: schedule,\n      setSchedule: setSchedule,\n      isDebug: isDebug,\n      setIsDebug: setIsDebug,\n    }}>\n      <LoadingScreen\n        // The \"is-loading\" state has to be owned at the root, else the child\n        // editor will re-trigger the loading screen every time an edit is made.\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        {...props}\n        >\n        <Route exact path=\"/:configId/game\" component={Board} />\n        <Route exact path=\"/:configId/edit\">\n          <GameEditor saveId={match.params.configId ? match.params.configId : 0 } />\n        </Route>\n      </LoadingScreen>\n    </LocalStorageContext.Provider>\n  );\n  const GameClient = Client({\n    game: game,\n    board: MaybeBoardOrEditor,\n    numPlayers: 1,\n    debug: isDebug,\n  });\n  return <GameClient {...props}/>\n};\n\nexport default LocalStorageRouter;\n","import {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport LocalStorageRouter from \"./LocalStorageRouter\";\r\n\r\nconst App = function(props) {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/:configId/edit\" component={LocalStorageRouter} />\r\n      <Route path=\"/:configId/game\" component={LocalStorageRouter} />\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/static/game\" />\r\n      </Route>\r\n      <Route exact path=\"/editor\">\r\n        <Redirect to=\"/static/edit\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}